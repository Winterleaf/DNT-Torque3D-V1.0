// Copyright (C) 2012 Winterleaf Entertainment L,L,C.
// 
// THE SOFTW ARE IS PROVIDED ON AN “ AS IS” BASIS, WITHOUT W ARRANTY OF ANY KIND,
// INCLUDING WITHOUT LIMIT ATION THE W ARRANTIES OF MERCHANT ABILITY, FITNESS
// FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT . THE ENTIRE RISK AS TO THE
// QUALITY AND PERFORMANCE OF THE SOFTW ARE IS THE RESPONSIBILITY OF LICENSEE.
// SHOULD THE SOFTW ARE PROVE DEFECTIVE IN ANY RESPECT , LICENSEE AND NOT LICEN -
// SOR OR ITS SUPPLIERS OR RESELLERS ASSUMES THE ENTIRE COST OF AN Y SERVICE AND
// REPAIR. THIS DISCLAIMER OF W ARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS
// AGREEMENT. NO USE OF THE SOFTW ARE IS AUTHORIZED HEREUNDER EXCEPT UNDER
// THIS DISCLAIMER.
// 
// The use of the WinterLeaf Entertainment LLC DotNetT orque (“DNT ”) and DotNetT orque
// Customizer (“DNTC”)is governed by this license agreement (“ Agreement”).
// 
// R E S T R I C T I O N S
// 
// (a) Licensee may not: (i) create any derivative works of DNTC, including but not
// limited to translations, localizations, technology add-ons, or game making software
// other than Games; (ii) reverse engineer , or otherwise attempt to derive the algorithms
// for DNT or DNTC (iii) redistribute, encumber , sell, rent, lease, sublicense, or otherwise
// transfer rights to  DNTC; or (iv) remove or alter any tra demark, logo, copyright
// or other proprietary notices, legends, symbols or labels in DNT or DNTC; or (iiv) use
// the Software to develop or distribute any software that compete s with the Software
// without WinterLeaf Entertainment’s prior written consent; or (i iiv) use the Software for
// any illegal purpose.
// (b) Licensee may not distribute the DNTC in any manner.
// 
// LI C E N S E G R A N T .
// This license allows companies of any size, government entities or individuals to cre -
// ate, sell, rent, lease, or otherwise profit commercially from, games using executables
// created from the source code of DNT
// 
// **********************************************************************************
// **********************************************************************************
// **********************************************************************************
// THE SOURCE CODE GENERATED BY DNTC CAN BE  DISTRIBUTED PUBLICLY PROVIDED THAT THE 
// DISTRIBUTOR PROVIDES  THE GENERATE SOURCE CODE FREE OF CHARGE.
// 
// THIS SOURCE CODE (DNT) CAN BE DISTRIBUTED PUBLICLY PROVIDED THAT THE DISTRIBUTOR 
// PROVIDES  THE SOURCE CODE (DNT) FREE OF CHARGE.
// **********************************************************************************
// **********************************************************************************
// **********************************************************************************
// 
// Please visit http://www.winterleafentertainment.com for more information about the project and latest updates.
// 
// Last updated: 10/18/2012
// 

#region

using WinterLeaf.Classes;

#endregion

namespace DNT_FPS_Demo_Game_Dll.Scripts.Client
    {
    public partial class Main : TorqueScriptTemplate
        {
        [Torque_Decorations.TorqueCallBack("", "HelpDlg", "onWake", "(this)", 1, 30000, false)]
        public void HelpDlgonWake(string thisobj)
            {
            console.SetVar("HelpFileList.entryCount", 0);
            console.Call("HelpFileList", "clear");
            for (string file = Util.findFirstFile("*.hfl", true); file != ""; file = Util.findNextFile("*.hfl"))
                {
                console.SetVar("HelpFileList.fileName[" + console.GetVarString("HelpFileList.entryCount") + "]", file);
                console.Call("HelpFileList", "addRow", new[] {console.GetVarString("HelpFileList.entryCount"), Util.fileBase(file)});
                console.SetVar("HelpFileList.entryCount", console.GetVarInt("HelpFileList.entryCount") + 1);
                }
            console.Call("HelpFileList", "sortNumerical", new[] {"0"});
            for (int i = 0; i < console.GetVarInt("HelpFileList.entryCount"); i++)
                {
                string rowid = console.Call("HelpFileList", "getRowId", new[] {i.AsString()});
                string text = console.Call("HelpFileList", "getRowTextById", new[] {rowid});
                text = (i + 1).AsString() + ". " + Util.restWords(text);
                console.Call("HelpFileList", "setRowByID", new[] {rowid, text});
                }
            console.Call("HelpFileList", "setSelectedRow", new[] {"0"});
            }

        [Torque_Decorations.TorqueCallBack("", "HelpFileList", "onSelect", "(this,row)", 2, 30000, false)]
        public void HelpFileListonSelect(string thisobj, string row)
            {
            string fo = new Torque_Class_Helper("FileObject").Create(m_ts).AsString();
            FileObject.openForRead(fo, console.GetVarString(thisobj + ".fileName[" + row + "]"));
            string text = "";
            while (!FileObject.isEOF(fo))
                text += FileObject.readLine(fo) + "\n";

            FileObject.close(fo);
            console.Call("HelpText", "setText", new[] {text});
            }

        [Torque_Decorations.TorqueCallBack("", "", "getHelp", "(%helpName)", 1, 30000, false)]
        public void getHelp(string helpname)
            {
            console.Call("Canvas", "pushDialog", new[] {"HelpDlg"});
            if (helpname == "")
                return;
            int index = GuiTextListCtrl.findTextIndex("HelpFileList", helpname);
            GuiTextListCtrl.setSelectedRow("HelpFileList", index);
            }

        [Torque_Decorations.TorqueCallBack("", "", "contextHelp", "(%helpName)", 0, 30000, false)]
        public void contextHelp()
            {
            for (int i = 0; i < console.Call("Canvas", "getCount").AsInt(); i++)
                {
                if (console.Call(console.Call("Canvas", "getObject", new[] {i.AsString()}), "getName") == console.GetVarString("HelpDlg"))
                    {
                    console.Call("Canvas", "popDialog", new[] {console.GetVarString("HelpDlg")});
                    return;
                    }
                }
            string content = console.Call("Canvas", "getContent");
            string helpPage = console.Call(content, "getHelpPage");
            console.Call("getHelp", new[] {helpPage});
            }

        [Torque_Decorations.TorqueCallBack("", "GuiControl", "getHelpPage", "(%this)", 1, 30000, false)]
        public string GuiControlgetHelpPage(string thisobj)
            {
            return console.GetVarString(thisobj + ".helpPage");
            }

        [Torque_Decorations.TorqueCallBack("", "GuiMLTextCtrl", "onURL", "(%this,url)", 2, 30000, false)]
        public void GuiMLTextCtrlonURL(string thisobj, string url)
            {
            console.Call("gotoWebPage", new[] {url});
            }
        }
    }