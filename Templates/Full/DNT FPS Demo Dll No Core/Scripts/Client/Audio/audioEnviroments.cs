// Copyright (C) 2012 Winterleaf Entertainment L,L,C.
// 
// THE SOFTW ARE IS PROVIDED ON AN “ AS IS” BASIS, WITHOUT W ARRANTY OF ANY KIND,
// INCLUDING WITHOUT LIMIT ATION THE W ARRANTIES OF MERCHANT ABILITY, FITNESS
// FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT . THE ENTIRE RISK AS TO THE
// QUALITY AND PERFORMANCE OF THE SOFTW ARE IS THE RESPONSIBILITY OF LICENSEE.
// SHOULD THE SOFTW ARE PROVE DEFECTIVE IN ANY RESPECT , LICENSEE AND NOT LICEN -
// SOR OR ITS SUPPLIERS OR RESELLERS ASSUMES THE ENTIRE COST OF AN Y SERVICE AND
// REPAIR. THIS DISCLAIMER OF W ARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS
// AGREEMENT. NO USE OF THE SOFTW ARE IS AUTHORIZED HEREUNDER EXCEPT UNDER
// THIS DISCLAIMER.
// 
// The use of the WinterLeaf Entertainment LLC DotNetT orque (“DNT ”) and DotNetT orque
// Customizer (“DNTC”)is governed by this license agreement (“ Agreement”).
// 
// R E S T R I C T I O N S
// 
// (a) Licensee may not: (i) create any derivative works of DNTC, including but not
// limited to translations, localizations, technology add-ons, or game making software
// other than Games; (ii) reverse engineer , or otherwise attempt to derive the algorithms
// for DNT or DNTC (iii) redistribute, encumber , sell, rent, lease, sublicense, or otherwise
// transfer rights to  DNTC; or (iv) remove or alter any tra demark, logo, copyright
// or other proprietary notices, legends, symbols or labels in DNT or DNTC; or (iiv) use
// the Software to develop or distribute any software that compete s with the Software
// without WinterLeaf Entertainment’s prior written consent; or (i iiv) use the Software for
// any illegal purpose.
// (b) Licensee may not distribute the DNTC in any manner.
// 
// LI C E N S E G R A N T .
// This license allows companies of any size, government entities or individuals to cre -
// ate, sell, rent, lease, or otherwise profit commercially from, games using executables
// created from the source code of DNT
// 
// **********************************************************************************
// **********************************************************************************
// **********************************************************************************
// THE SOURCE CODE GENERATED BY DNTC CAN BE  DISTRIBUTED PUBLICLY PROVIDED THAT THE 
// DISTRIBUTOR PROVIDES  THE GENERATE SOURCE CODE FREE OF CHARGE.
// 
// THIS SOURCE CODE (DNT) CAN BE DISTRIBUTED PUBLICLY PROVIDED THAT THE DISTRIBUTOR 
// PROVIDES  THE SOURCE CODE (DNT) FREE OF CHARGE.
// **********************************************************************************
// **********************************************************************************
// **********************************************************************************
// 
// Please visit http://www.winterleafentertainment.com for more information about the project and latest updates.
// 
// Last updated: 10/18/2012
// 

#region

using WinterLeaf.Classes;

#endregion

namespace DNT_FPS_Demo_Game_Dll.Scripts.Client
    {
    public partial class Main : TorqueScriptTemplate
        {
        [Torque_Decorations.TorqueCallBack("", "", "Initialize_AudioEnviroments", "", 0, 26000, true)]
        public void Initialize_AudioEnviroments()
            {
            TorqueSingleton ts = new TorqueSingleton("SFXEnvironment", "AudioEnvOff");
            ts.PropsAddString("envSize ".Trim(), "7.5");
            ts.PropsAddString("envDiffusion ".Trim(), "1.0");
            ts.PropsAddString("room ".Trim(), "-10000");
            ts.PropsAddString("roomHF ".Trim(), "-10000");
            ts.PropsAddString("roomLF ".Trim(), "0");
            ts.PropsAddString("decayTime ".Trim(), "1.0");
            ts.PropsAddString("decayHFRatio ".Trim(), "1.0");
            ts.PropsAddString("decayLFRatio ".Trim(), "1.0");
            ts.PropsAddString("reflections ".Trim(), "-2602");
            ts.PropsAddString("reflectionsDelay ".Trim(), "0.007");
            ts.PropsAddString("reflectionsPan[ 0 ] ".Trim(), "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ] ".Trim(), "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ] ".Trim(), "0.0");
            ts.PropsAddString("reverb ".Trim(), "200");
            ts.PropsAddString("reverbDelay ".Trim(), "0.011");
            ts.PropsAddString("reverbPan[ 0 ] ".Trim(), "0.0");
            ts.PropsAddString("reverbPan[ 1 ] ".Trim(), "0.0");
            ts.PropsAddString("reverbPan[ 2 ] ".Trim(), "0.0");
            ts.PropsAddString("echoTime ".Trim(), "0.25");
            ts.PropsAddString("echoDepth ".Trim(), "0.0");
            ts.PropsAddString("modulationTime ".Trim(), "0.25");
            ts.PropsAddString("modulationDepth ".Trim(), "0.0");
            ts.PropsAddString("airAbsorptionHF ".Trim(), "-5.0");
            ts.PropsAddString("HFReference ".Trim(), "5000.0");
            ts.PropsAddString("LFReference ".Trim(), "250.0");
            ts.PropsAddString("roomRolloffFactor ".Trim(), "0.0");
            ts.PropsAddString("diffusion ".Trim(), "0.0");
            ts.PropsAddString("density ".Trim(), "0.0");
            ts.Props.Add("flags ".Trim(), "0x33");
            ts.Create(m_ts);

            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvGeneric");
            ts.PropsAddString("envSize", "7.5");
            ts.PropsAddString("envDiffusion", "1.0");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "-100");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "1.49");
            ts.PropsAddString("decayHFRatio", "0.83");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-2602");
            ts.PropsAddString("reflectionsDelay", "0.007");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "200");
            ts.PropsAddString("reverbDelay", "0.011");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "0.0");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "100.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x3f");
            ts.Create(m_ts);

            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvRoom");
            ts.PropsAddString("envSize", "1.9");
            ts.PropsAddString("envDiffusion", "1.0");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "-454");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "0.4");
            ts.PropsAddString("decayHFRatio", "0.83");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-1646");
            ts.PropsAddString("reflectionsDelay", "0.002");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "53");
            ts.PropsAddString("reverbDelay", "0.003");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "0.0");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "100.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x3f");
            ts.Create(m_ts);

            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvPaddedCell");
            ts.PropsAddString("envSize", "1.4");
            ts.PropsAddString("envDiffusion", "1.0");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "-6000");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "0.17");
            ts.PropsAddString("decayHFRatio", "0.1");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-1204");
            ts.PropsAddString("reflectionsDelay", "0.001");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "207");
            ts.PropsAddString("reverbDelay", "0.002");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "0.0");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "100.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x3f");
            ts.Create(m_ts);

            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvBathroom");
            ts.PropsAddString("envSize", "1.4");
            ts.PropsAddString("envDiffusion", "1.0");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "-1200");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "1.49");
            ts.PropsAddString("decayHFRatio", "0.54");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-370");
            ts.PropsAddString("reflectionsDelay", "0.007");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "1030");
            ts.PropsAddString("reverbDelay", "0.011");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "0.0");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "100.0");
            ts.PropsAddString("density", "60.0");
            ts.Props.Add("flags", "0x3f");
            ts.Create(m_ts);

            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvLivingRoom");
            ts.PropsAddString("envSize", "2.5");
            ts.PropsAddString("envDiffusion", "1.0");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "-6000");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "0.5");
            ts.PropsAddString("decayHFRatio", "0.1");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-1376");
            ts.PropsAddString("reflectionsDelay", "0.003");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "-1104");
            ts.PropsAddString("reverbDelay", "0.004");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "0.0");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "100.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x3f");
            ts.Create(m_ts);

            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvStoneRoom");
            ts.PropsAddString("envSize", "11.6");
            ts.PropsAddString("envDiffusion", "1.0");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "300");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "2.31");
            ts.PropsAddString("decayHFRatio", "0.64");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-711");
            ts.PropsAddString("reflectionsDelay", "0.012");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "83");
            ts.PropsAddString("reverbDelay", "0.017");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "0.0");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "-5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "100.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x3f");
            ts.Create(m_ts);

            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvAuditorium");
            ts.PropsAddString("envSize", "21.6");
            ts.PropsAddString("envDiffusion", "1.0");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "-476");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "4.32");
            ts.PropsAddString("decayHFRatio", "0.59");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "0.789");
            ts.PropsAddString("reflectionsDelay", "0.02");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "-289");
            ts.PropsAddString("reverbDelay", "0.03");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "0.0");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "100.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x3f");
            ts.Create(m_ts);

            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvConcertHall");
            ts.PropsAddString("envSize", "19.6");
            ts.PropsAddString("envDiffusion", "1.0");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "-500");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "3.92");
            ts.PropsAddString("decayHFRatio", "0.7");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-1230");
            ts.PropsAddString("reflectionsDelay", "0.02");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "-2");
            ts.PropsAddString("reverbDelay", "0.029");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "0.0");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "100.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x3f");
            ts.Create(m_ts);

            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvCave");
            ts.PropsAddString("envSize", "14.6");
            ts.PropsAddString("envDiffusion", "1.0");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "0");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "2.91");
            ts.PropsAddString("decayHFRatio", "1.3");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-602");
            ts.PropsAddString("reflectionsDelay", "0.015");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "-302");
            ts.PropsAddString("reverbDelay", "0.022");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "0.0");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "100.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x1f");
            ts.Create(m_ts);

            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvArena");
            ts.PropsAddString("envSize", "36.2f");
            ts.PropsAddString("envDiffusion", "1.0");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "-698");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "7.24");
            ts.PropsAddString("decayHFRatio", "0.33");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-1166");
            ts.PropsAddString("reflectionsDelay", "0.02");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "16");
            ts.PropsAddString("reverbDelay", "0.03");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "0.0");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "100.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x3f");
            ts.Create(m_ts);


            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvHangar");
            ts.PropsAddString("envSize", "50.3");
            ts.PropsAddString("envDiffusion", "1.0");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "-1000");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "10.05");
            ts.PropsAddString("decayHFRatio", "0.23");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-602");
            ts.PropsAddString("reflectionsDelay", "0.02");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "198");
            ts.PropsAddString("reverbDelay", "0.03");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "0.0");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "100.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x3f");
            ts.Create(m_ts);

            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvCarpettedHallway");
            ts.PropsAddString("envSize", "1.9");
            ts.PropsAddString("envDiffusion", "1.0");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "-4000");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "0.3");
            ts.PropsAddString("decayHFRatio", "0.1");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-1831");
            ts.PropsAddString("reflectionsDelay", "0.002");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "-1630");
            ts.PropsAddString("reverbDelay", "0.03");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "0.0");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "100.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x3f");
            ts.Create(m_ts);


            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvHallway");
            ts.PropsAddString("envSize", "1.8");
            ts.PropsAddString("envDiffusion", "1.0");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "-300");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "1.49");
            ts.PropsAddString("decayHFRatio", "0.59");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-1219");
            ts.PropsAddString("reflectionsDelay", "0.007");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "441");
            ts.PropsAddString("reverbDelay", "0.011");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "0.0");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "100.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x3f");
            ts.Create(m_ts);

            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvStoneCorridor");
            ts.PropsAddString("envSize", "13.5");
            ts.PropsAddString("envDiffusion", "1.0");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "-237");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "2.7");
            ts.PropsAddString("decayHFRatio", "0.79");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-1214");
            ts.PropsAddString("reflectionsDelay", "0.013");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "395");
            ts.PropsAddString("reverbDelay", "0.02");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "0.0");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "100.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x3f");
            ts.Create(m_ts);


            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvAlley");
            ts.PropsAddString("envSize", "7.5");
            ts.PropsAddString("envDiffusion", "0.3");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "-270");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "1.49");
            ts.PropsAddString("decayHFRatio", "0.86");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-1204");
            ts.PropsAddString("reflectionsDelay", "0.007");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "-4");
            ts.PropsAddString("reverbDelay", "0.011");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.125");
            ts.PropsAddString("echoDepth", "0.95");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "100.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x3f");
            ts.Create(m_ts);

            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvForest");
            ts.PropsAddString("envSize", "38.0");
            ts.PropsAddString("envDiffusion", "0.3");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "-3300");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "1.49");
            ts.PropsAddString("decayHFRatio", "0.54");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-2560");
            ts.PropsAddString("reflectionsDelay", "0.162");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "-229");
            ts.PropsAddString("reverbDelay", "0.088");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.125");
            ts.PropsAddString("echoDepth", "1.0");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "79.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x3f");
            ts.Create(m_ts);

            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvCity");
            ts.PropsAddString("envSize", "7.5");
            ts.PropsAddString("envDiffusion", "0.5");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "-800");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "1.49");
            ts.PropsAddString("decayHFRatio", "0.67");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-2273");
            ts.PropsAddString("reflectionsDelay", "0.007");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "-1691");
            ts.PropsAddString("reverbDelay", "0.011");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "0.0");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "50.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x3f");
            ts.Create(m_ts);

            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvMountains");
            ts.PropsAddString("envSize", "100.0");
            ts.PropsAddString("envDiffusion", "0.27");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "-2500");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "1.49");
            ts.PropsAddString("decayHFRatio", "0.21");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-2780");
            ts.PropsAddString("reflectionsDelay", "0.3");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "-1434");
            ts.PropsAddString("reverbDelay", "0.1");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "1.0");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "27.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x1f");
            ts.Create(m_ts);

            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvQuary");
            ts.PropsAddString("envSize", "17.5");
            ts.PropsAddString("envDiffusion", "1.0");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "-1000");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "1.49");
            ts.PropsAddString("decayHFRatio", "0.83");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-10000");
            ts.PropsAddString("reflectionsDelay", "0.061");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "500");
            ts.PropsAddString("reverbDelay", "0.025");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.125");
            ts.PropsAddString("echoDepth", "0.7");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "100.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x3f");
            ts.Create(m_ts);


            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvPlain");
            ts.PropsAddString("envSize", "42.5");
            ts.PropsAddString("envDiffusion", "0.21");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "-2000");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "1.49");
            ts.PropsAddString("decayHFRatio", "0.5");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-2466");
            ts.PropsAddString("reflectionsDelay", "0.179");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "-1926");
            ts.PropsAddString("reverbDelay", "0.1");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "1.0");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "21.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x3f");
            ts.Create(m_ts);

            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvParkingLot");
            ts.PropsAddString("envSize", "8.3");
            ts.PropsAddString("envDiffusion", "1.0");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "0");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "1.65");
            ts.PropsAddString("decayHFRatio", "1.5");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-1363");
            ts.PropsAddString("reflectionsDelay", "0.008");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "-1153");
            ts.PropsAddString("reverbDelay", "0.012");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "0.0");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "100.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x1f");
            ts.Create(m_ts);


            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvSewerPipe");
            ts.PropsAddString("envSize", "1.7");
            ts.PropsAddString("envDiffusion", "0.8");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "-1000");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "2.81");
            ts.PropsAddString("decayHFRatio", "0.14");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "429");
            ts.PropsAddString("reflectionsDelay", "0.014");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "1023");
            ts.PropsAddString("reverbDelay", "0.21");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "0.0");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "0.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "80.0");
            ts.PropsAddString("density", "60.0");
            ts.Props.Add("flags", "0x3f");
            ts.Create(m_ts);

            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvUnderwater");
            ts.PropsAddString("envSize", "1.8");
            ts.PropsAddString("envDiffusion", "1.0");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "-4000");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "1.49");
            ts.PropsAddString("decayHFRatio", "0.1");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-449");
            ts.PropsAddString("reflectionsDelay", "0.007");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "1700");
            ts.PropsAddString("reverbDelay", "0.011");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "0.0");
            ts.PropsAddString("modulationTime", "1.18");
            ts.PropsAddString("modulationDepth", "0.348");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "100.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x3f");
            ts.Create(m_ts);


            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvDrugged");
            ts.PropsAddString("envSize", "1.9");
            ts.PropsAddString("envDiffusion", "0.5");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "0");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "8.39");
            ts.PropsAddString("decayHFRatio", "1.39");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-115");
            ts.PropsAddString("reflectionsDelay", "0.002");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "985");
            ts.PropsAddString("reverbDelay", "0.03");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "0.0");
            ts.PropsAddString("modulationTime", "0.25");
            ts.PropsAddString("modulationDepth", "1.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "100.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x1f");
            ts.Create(m_ts);


            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvDizzy");
            ts.PropsAddString("envSize", "1.8");
            ts.PropsAddString("envDiffusion", "0.6");
            ts.PropsAddString("room", "-1000.0");
            ts.PropsAddString("roomHF", "-400");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "17.23");
            ts.PropsAddString("decayHFRatio", "0.56");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-1713");
            ts.PropsAddString("reflectionsDelay", "0.02");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "-613");
            ts.PropsAddString("reverbDelay", "0.03");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "1.0");
            ts.PropsAddString("modulationTime", "0.81");
            ts.PropsAddString("modulationDepth", "0.31");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "100.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x1f");
            ts.Create(m_ts);

            ts = new TorqueSingleton("SFXEnvironment", "AudioEnvPsychotic");
            ts.PropsAddString("envSize", "1.0");
            ts.PropsAddString("envDiffusion", "0.5");
            ts.PropsAddString("room", "-1000");
            ts.PropsAddString("roomHF", "-151");
            ts.PropsAddString("roomLF", "0");
            ts.PropsAddString("decayTime", "7.56");
            ts.PropsAddString("decayHFRatio", "0.91");
            ts.PropsAddString("decayLFRatio", "1.0");
            ts.PropsAddString("reflections", "-626");
            ts.PropsAddString("reflectionsDelay", "0.02");
            ts.PropsAddString("reflectionsPan[ 0 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 1 ]", "0.0");
            ts.PropsAddString("reflectionsPan[ 2 ]", "0.0");
            ts.PropsAddString("reverb", "774");
            ts.PropsAddString("reverbDelay", "0.03");
            ts.PropsAddString("reverbPan[ 0 ]", "0.0");
            ts.PropsAddString("reverbPan[ 1 ]", "0.0");
            ts.PropsAddString("reverbPan[ 2 ]", "0.0");
            ts.PropsAddString("echoTime", "0.25");
            ts.PropsAddString("echoDepth", "0.0");
            ts.PropsAddString("modulationTime", "4.0");
            ts.PropsAddString("modulationDepth", "1.0");
            ts.PropsAddString("airAbsorptionHF", "-5.0");
            ts.PropsAddString("HFReference", "5000.0");
            ts.PropsAddString("LFReference", "250.0");
            ts.PropsAddString("roomRolloffFactor", "0.0");
            ts.PropsAddString("diffusion", "100.0");
            ts.PropsAddString("density", "100.0");
            ts.Props.Add("flags", "0x1f");
            ts.Create(m_ts);
            }
        }
    }