// Copyright (C) 2012 Winterleaf Entertainment L,L,C.
// 
// THE SOFTW ARE IS PROVIDED ON AN “ AS IS” BASIS, WITHOUT W ARRANTY OF ANY KIND,
// INCLUDING WITHOUT LIMIT ATION THE W ARRANTIES OF MERCHANT ABILITY, FITNESS
// FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT . THE ENTIRE RISK AS TO THE
// QUALITY AND PERFORMANCE OF THE SOFTW ARE IS THE RESPONSIBILITY OF LICENSEE.
// SHOULD THE SOFTW ARE PROVE DEFECTIVE IN ANY RESPECT , LICENSEE AND NOT LICEN -
// SOR OR ITS SUPPLIERS OR RESELLERS ASSUMES THE ENTIRE COST OF AN Y SERVICE AND
// REPAIR. THIS DISCLAIMER OF W ARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS
// AGREEMENT. NO USE OF THE SOFTW ARE IS AUTHORIZED HEREUNDER EXCEPT UNDER
// THIS DISCLAIMER.
// 
// The use of the WinterLeaf Entertainment LLC DotNetT orque (“DNT ”) and DotNetT orque
// Customizer (“DNTC”)is governed by this license agreement (“ Agreement”).
// 
// R E S T R I C T I O N S
// 
// (a) Licensee may not: (i) create any derivative works of DNTC, including but not
// limited to translations, localizations, technology add-ons, or game making software
// other than Games; (ii) reverse engineer , or otherwise attempt to derive the algorithms
// for DNT or DNTC (iii) redistribute, encumber , sell, rent, lease, sublicense, or otherwise
// transfer rights to  DNTC; or (iv) remove or alter any tra demark, logo, copyright
// or other proprietary notices, legends, symbols or labels in DNT or DNTC; or (iiv) use
// the Software to develop or distribute any software that compete s with the Software
// without WinterLeaf Entertainment’s prior written consent; or (i iiv) use the Software for
// any illegal purpose.
// (b) Licensee may not distribute the DNTC in any manner.
// 
// LI C E N S E G R A N T .
// This license allows companies of any size, government entities or individuals to cre -
// ate, sell, rent, lease, or otherwise profit commercially from, games using executables
// created from the source code of DNT
// 
// **********************************************************************************
// **********************************************************************************
// **********************************************************************************
// THE SOURCE CODE GENERATED BY DNTC CAN BE  DISTRIBUTED PUBLICLY PROVIDED THAT THE 
// DISTRIBUTOR PROVIDES  THE GENERATE SOURCE CODE FREE OF CHARGE.
// 
// THIS SOURCE CODE (DNT) CAN BE DISTRIBUTED PUBLICLY PROVIDED THAT THE DISTRIBUTOR 
// PROVIDES  THE SOURCE CODE (DNT) FREE OF CHARGE.
// **********************************************************************************
// **********************************************************************************
// **********************************************************************************
// 
// Please visit http://www.winterleafentertainment.com for more information about the project and latest updates.
// 
// Last updated: 10/18/2012
// 

#region

using System.IO;
using System.Windows.Forms;
using WinterLeaf.Classes;

#endregion

namespace DNT_FPS_Demo_Game_Dll.Scripts.Server
    {
    public partial class Main : TorqueScriptTemplate
        {
        //------------------------------------------------------------------------------
        // Loading info is text displayed on the client side while the mission
        // is being loaded.  This information is extracted from the mission file
        // and sent to each the client as it joins.
        //------------------------------------------------------------------------------

        //------------------------------------------------------------------------------
        // clearLoadInfo
        //
        // Clears the mission info stored
        //------------------------------------------------------------------------------
        [Torque_Decorations.TorqueCallBack("", "", "clearLoadInfo", "()", 0, 12200, false)]
        public void ClearLoadInfo()
            {
            if (console.isObject("theLevelInfo"))
                console.Call("theLevelInfo", "delete");
            }

        //------------------------------------------------------------------------------
        // buildLoadInfo
        //
        // Extract the map description from the .mis file
        //------------------------------------------------------------------------------
        [Torque_Decorations.TorqueCallBack("", "", "buildLoadInfo", "(%mission)", 1, 12200, false)]
        public void BuildLoadInfo(string mission)
            {
            //Replaced the torque file stuff w/ csharp, less stuff inside of torque.
            ClearLoadInfo();
            string missionpath = Path.GetDirectoryName(Application.ExecutablePath) + "\\" + mission.Replace("/", "\\");
            if (File.Exists(missionpath))
                {
                string infoObject = "";
                using (StreamReader sr = new StreamReader(missionpath))
                    {
                    bool inInfoBlock = false;
                    while (sr.Peek() >= 0)
                        {
                        string line = sr.ReadLine();
                        if (line.Trim().StartsWith("new ScriptObject(MissionInfo) {"))
                            inInfoBlock = true;
                        if (line.Trim().StartsWith("new LevelInfo(theLevelInfo) {"))
                            inInfoBlock = true;
                        else if (inInfoBlock && line.Trim().StartsWith("};"))
                            {
                            inInfoBlock = false;
                            infoObject += line;
                            break;
                            }
                        if (inInfoBlock)
                            infoObject += line + " ";
                        }
                    }
                console.Eval(infoObject);
                }
            else
                {
                console.error(string.Format("Level File {0} not found.", mission));
                }
            }

        //------------------------------------------------------------------------------
        // dumpLoadInfo
        //
        // Echo the mission information to the console
        //------------------------------------------------------------------------------
        [Torque_Decorations.TorqueCallBack("", "", "dumpLoadInfo", "()", 0, 12200, false)]
        public void DumpLoadInfo()
            {
            console.print(string.Format("Level Name: {0}", console.GetVarString("theLevelInfo.name")));
            console.print("Level Description:");
            for (int i = 0; console.GetVarString(string.Format("theLevelInfo.desc[{0}]", i)) != ""; i++)
                console.print("     " + console.GetVarString(string.Format("theLevelInfo.desc[{0}]", i)));
            }
        }
    }