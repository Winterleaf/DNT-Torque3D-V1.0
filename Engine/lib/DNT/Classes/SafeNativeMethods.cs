
// Copyright (C) 2012 Winterleaf Entertainment L,L,C.
// 
// THE SOFTW ARE IS PROVIDED ON AN “ AS IS” BASIS, WITHOUT W ARRANTY OF ANY KIND,
// INCLUDING WITHOUT LIMIT ATION THE W ARRANTIES OF MERCHANT ABILITY, FITNESS
// FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT . THE ENTIRE RISK AS TO THE
// QUALITY AND PERFORMANCE OF THE SOFTW ARE IS THE RESPONSIBILITY OF LICENSEE.
// SHOULD THE SOFTW ARE PROVE DEFECTIVE IN ANY RESPECT , LICENSEE AND NOT LICEN -
// SOR OR ITS SUPPLIERS OR RESELLERS ASSUMES THE ENTIRE COST OF AN Y SERVICE AND
// REPAIR. THIS DISCLAIMER OF W ARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS
// AGREEMENT. NO USE OF THE SOFTW ARE IS AUTHORIZED HEREUNDER EXCEPT UNDER
// THIS DISCLAIMER.
// 
// The use of the WinterLeaf Entertainment LLC DotNetT orque (“DNT ”) and DotNetT orque
// Customizer (“DNTC”)is governed by this license agreement (“ Agreement”).
// 
// R E S T R I C T I O N S
// 
// (a) Licensee may not: (i) create any derivative works of DNT or DNTC, including but not
// limited to translations, localizations, technology add-ons, or game making software
// other than Games; (ii) reverse engineer , or otherwise attempt to derive the algorithms
// for DNT or DNTC (iii) redistribute, encumber , sell, rent, lease, sublicense, or otherwise
// transfer rights to DNT or DNTC; or (iv) remove or alter any tra demark, logo, copyright
// or other proprietary notices, legends, symbols or labels in DNT or DNTC; or (iiv) use
// the Software to develop or distribute any software that compete s with the Software
// without WinterLeaf Entertainment’s prior written consent; or (i iiv) use the Software for
// any illegal purpose.
// (b) Licensee may not distribute the DNTC in any manner.
// 
// LI C E N S E G R A N T .
// This license allows companies of any size, government entities or individuals to cre -
// ate, sell, rent, lease, or otherwise profit commercially from, games using executables
// created from the source code of DNT
// 
// **********************************************************************************
// **********************************************************************************
// ********************************************************************************** 
// THE SOURCE CODE GENERATED BY DNTC CAN BE  DISTRIBUTED PUBLICLY PROVIDED THAT THE 
// DISTRIBUTOR PROVIDES  THE GENERATE SOURCE CODE FREE OF CHARGE.
// 
// THIS SOURCE CODE (DNT) CAN BE DISTRIBUTED PUBLICLY PROVIDED THAT THE DISTRIBUTOR 
// PROVIDES  THE SOURCE CODE (DNT) FREE OF CHARGE.
// **********************************************************************************
// **********************************************************************************
// **********************************************************************************
// 
// Please visit http://www.winterleafentertainment.com for more information about the project and latest updates.
// 
// Last updated: 10/18/2012
// 

using System;
using System.Runtime.InteropServices;
using System.Text;

using System.IO;
using System.Windows.Forms;

using System.Collections.Generic;
using System.Globalization;
using System.Linq;



using System.Threading;

using WinterLeaf.Classes;
using WinterLeaf.Containers;
using WinterLeaf.Enums;
using WinterLeaf;

namespace WinterLeaf.Classes
    {
    /// <summary>
    /// Contains all of the externs available from T3D dll.
    /// </summary>
    internal static class SafeNativeMethods
        {
		
        static internal bool consolemapped = false;
        [DllImport("kernel32.dll")]
        public static extern bool FreeLibrary(IntPtr hModule);
        static internal void FreeDLL()
            {
			ClearConsoleExterns();
			ClearAutoExterns();
            FreeLibrary(DLLptr);
            }


        #region System Externs

        internal class NativeMethods
            {
            internal const Int32 WM_QUIT = 0x0012;

            [DllImport("kernel32.dll")]
            public static extern IntPtr LoadLibrary(string dllToLoad);

            [DllImport("kernel32.dll")]
            public static extern IntPtr GetProcAddress(IntPtr hModule, string procedureName);

            [DllImport("kernel32.dll")]
            public static extern bool FreeLibrary(IntPtr hModule);

            [DllImport("kernel32.dll")]
            internal static extern uint GetCurrentThreadId();

            [DllImport("kernel32.dll")]
            internal static extern uint GetCurrentProcessId();

            [DllImport("user32.dll")]
            internal static extern bool GetMessage(out MSG lpMsg, IntPtr hWnd, uint wMsgFilterMin, uint wMsgFilterMax);

            [DllImport("user32.dll")]
            internal static extern bool TranslateMessage([In] ref MSG lpMsg);

            [DllImport("user32.dll")]
            internal static extern IntPtr DispatchMessage([In] ref MSG lpMsg);

            [DllImport("user32.dll")]
            internal static extern bool PostThreadMessage(uint idThread, uint Msg, UIntPtr wParam, IntPtr lParam);



            [DllImport("kernel32.dll", CharSet = CharSet.Unicode)]
            public static extern IntPtr GetModuleHandle(String InPath);

            }

        //}

        #region Nested type: MSG

        [StructLayout(LayoutKind.Sequential)]
        internal struct MSG
            {
            public IntPtr hWnd;
            public uint message;
            public IntPtr wParam;
            public IntPtr lParam;
            public uint time;
            public POINT pt;
            }

        #endregion

        #region Nested type: POINT

        [StructLayout(LayoutKind.Sequential)]
        internal struct POINT
            {
            public int X;
            public int Y;

            public POINT(int x, int y)
                {
                X = x;
                Y = y;
                }
            }

        #endregion

        #endregion


        #region Delegate for C++ to call back through

        public delegate void Instance_Eval([MarshalAs(UnmanagedType.LPStr)] [In] StringBuilder evalstatement, [MarshalAs(UnmanagedType.LPArray, SizeConst = 8000)] [In][Out]byte[] buffer);
        public delegate void Instance_Eval_Direct_New(int argc, IntPtr argv, [MarshalAs(UnmanagedType.LPArray, SizeConst = 8000)] [In][Out]byte[] buffer);
        #endregion


        #region Console unmanaged function pointer delegates
		[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate IntPtr ClearHandler_Instance_EvalHandler_Instance_Eval();
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate IntPtr ClearHandler_Instance_Eval_Direct_New();
		
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void Classname_Call([MarshalAs(UnmanagedType.LPStr), In] StringBuilder className, [MarshalAs(UnmanagedType.LPStr), In] StringBuilder function, Int32 argc, IntPtr[] argv, [MarshalAs(UnmanagedType.LPStr), Out] StringBuilder ret, bool debug);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void ConsoleCall([MarshalAs(UnmanagedType.LPStr), In] StringBuilder command, [MarshalAs(UnmanagedType.LPStr), Out] StringBuilder response, bool echo);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void Console_errorf([MarshalAs(UnmanagedType.LPStr), In] StringBuilder message);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate int Console_getSimTime();
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void Console_printf([MarshalAs(UnmanagedType.LPStr), In] StringBuilder message);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void Console_warnf([MarshalAs(UnmanagedType.LPStr), In] StringBuilder message);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate Int32 ContainerRadiusSearch([In] float x, [In] float y, [In] float z, [In] float searchRadius, [In] UInt32 searchMask, [In] bool useClientContainer, [Out, MarshalAs(UnmanagedType.SafeArray, SafeArraySubType = VarEnum.VT_UI4)]  UInt32[] foundobjectIds);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate UInt32 GetObjectID([MarshalAs(UnmanagedType.LPStr), In] StringBuilder simobj_id);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void Math_MatrixCreateFromEuler(float x, float y, float z, [MarshalAs(UnmanagedType.LPStr), Out]  StringBuilder result);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void Math_MatrixMulVector(float x, float y, float z, float ang, float ax, float ay, float az, float XX, float YY, float ZZ, [MarshalAs(UnmanagedType.LPStr), Out]  StringBuilder retval);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate bool NameSpace_isInNamespaceHierarchy([MarshalAs(UnmanagedType.LPStr), In]  StringBuilder simobject_id, [MarshalAs(UnmanagedType.LPStr), In]  StringBuilder name);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate bool NameSpace_isMethod([MarshalAs(UnmanagedType.LPStr), In] StringBuilder namespaceorobject, [MarshalAs(UnmanagedType.LPStr), In] StringBuilder method);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void ParentCall([MarshalAs(UnmanagedType.LPStr), In] StringBuilder simobject, [MarshalAs(UnmanagedType.LPStr), In] StringBuilder function, [In] int namespacedepth, [MarshalAs(UnmanagedType.LPStr), Out] StringBuilder result, [In] int argc, IntPtr[] argv, bool debug);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void ParentCallFunct([MarshalAs(UnmanagedType.LPStr), In] StringBuilder function, [In] int namespacedepth, [MarshalAs(UnmanagedType.LPStr), Out] StringBuilder result, [In] int argc, IntPtr[] argv, bool debug);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate UInt32 SceneObject_getTypeMask([MarshalAs(UnmanagedType.LPStr), In]  StringBuilder _SceneObject);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void SceneObject_initContainerRadiusSearch(float x, float y, float z, float radius, UInt32 mask, bool useClientContainer, [MarshalAs(UnmanagedType.LPArray), Out]  UInt32[] results, [MarshalAs(UnmanagedType.LPArray), Out]  float[] distresults);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void SimObject_Call([MarshalAs(UnmanagedType.LPStr), In]  StringBuilder simobject_id, Int32 argc, IntPtr[] argv, [MarshalAs(UnmanagedType.LPStr), Out]  StringBuilder ret);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void addTaggedString([MarshalAs(UnmanagedType.LPStr), In] StringBuilder mystring, [MarshalAs(UnmanagedType.LPStr), Out] StringBuilder result);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void clearServerPaths();
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate UInt32 clientGroup_getCount();
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate UInt32 clientGroup_getObject([In] UInt32 index);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void commandToClient(Int32 argc, IntPtr[] argv);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void commandToServer(Int32 argc, IntPtr[] argv);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void cs_torque_getvariable([MarshalAs(UnmanagedType.LPStr), In]  StringBuilder name, [MarshalAs(UnmanagedType.LPStr), Out]  StringBuilder response);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void cs_torque_setvariable([MarshalAs(UnmanagedType.LPStr), In]  StringBuilder name, [MarshalAs(UnmanagedType.LPStr), In]  StringBuilder value);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void deleteVariables([MarshalAs(UnmanagedType.LPStr), In] StringBuilder pattern);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void execute(Int32 argc, IntPtr[] argv, [MarshalAs(UnmanagedType.LPStr), Out]  StringBuilder ret);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void getClassName([MarshalAs(UnmanagedType.LPStr), In] StringBuilder simobject, [MarshalAs(UnmanagedType.LPStr), Out] StringBuilder ret);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate UInt32 getDataBlock([MarshalAs(UnmanagedType.LPStr), In] StringBuilder simobject);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void getName(uint simobject, [MarshalAs(UnmanagedType.LPStr), Out] StringBuilder ret);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void getTaggedString([MarshalAs(UnmanagedType.LPStr), In] StringBuilder tag, [MarshalAs(UnmanagedType.LPStr), Out] StringBuilder result);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate bool isFunction([MarshalAs(UnmanagedType.LPStr), In] StringBuilder functionname);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate Int32 nameToID([MarshalAs(UnmanagedType.LPStr), In] StringBuilder name);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate bool objectHasMethod([MarshalAs(UnmanagedType.LPStr), In] StringBuilder simobject, [MarshalAs(UnmanagedType.LPStr), In] StringBuilder method);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void removeTaggedString([MarshalAs(UnmanagedType.LPStr), In] StringBuilder tag);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate UInt32 spawnObject([MarshalAs(UnmanagedType.LPStr), In] StringBuilder _spawnClass, [MarshalAs(UnmanagedType.LPStr), In] StringBuilder _spawnDataBlock, [MarshalAs(UnmanagedType.LPStr), In] StringBuilder _spawnName, [MarshalAs(UnmanagedType.LPStr), In] StringBuilder _spawnProperties, [MarshalAs(UnmanagedType.LPStr), In] StringBuilder _spawnScript);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate bool SimObject_isField([MarshalAs(UnmanagedType.LPStr)] [In] StringBuilder simobject_id, [MarshalAs(UnmanagedType.LPStr)] [In] StringBuilder fieldname);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate bool isObject([MarshalAs(UnmanagedType.LPStr)] [In] StringBuilder message);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate IntPtr torque_engineinit([In] int argc, [In] IntPtr[] argv);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate int torque_enginetick();
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate bool torque_engineshutdown();
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void torque_setwebdeployment();
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void torque_enginesignalshutdown();
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void torque_reset();
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void torque_resizewindow([In] int width, [In] int height);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void SetHandler_Instance_Eval(Instance_Eval fn);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void SetHandler_Instance_Eval_Direct_New(Instance_Eval_Direct_New fn);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void getEulerRotation([MarshalAs(UnmanagedType.LPStr)] [In] StringBuilder simobject, [Out] float x, [Out] float y, [Out] float z);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate bool isMemberOfClass([MarshalAs(UnmanagedType.LPStr)] [In] StringBuilder className, [MarshalAs(UnmanagedType.LPStr)] [In] StringBuilder superClassName);
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate void pathOnMissionLoadDone();
        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate int dnt_torque_engineinit([In] int argc, [In] IntPtr[] argv, IntPtr hinstance);

        [UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)]
        internal delegate IntPtr torque_gethwnd();

        // void* torque_gethwnd()
        #endregion

        #region Console static function pointers
		internal static ClearHandler_Instance_EvalHandler_Instance_Eval mClearHandler_Instance_EvalHandler_Instance_Eval;
        internal static ClearHandler_Instance_Eval_Direct_New mClearHandler_Instance_Eval_Direct_New;
        internal static torque_gethwnd mtorque_gethwnd;
        internal static dnt_torque_engineinit mdnt_torque_engineinit;
        static internal getEulerRotation mgetEulerRotation;
        static internal isMemberOfClass misMemberOfClass;
        static internal pathOnMissionLoadDone mpathOnMissionLoadDone;
        static internal SetHandler_Instance_Eval mSetHandler_Instance_Eval;
        static internal SetHandler_Instance_Eval_Direct_New mSetHandler_Instance_Eval_Direct_New;
        static internal SimObject_isField mSimObject_isField;
        static internal Classname_Call mClassname_Call;
        static internal ConsoleCall mConsoleCall;
        static internal Console_errorf mConsole_errorf;
        static internal Console_getSimTime mConsole_getSimTime;
        static internal Console_printf mConsole_printf;
        static internal Console_warnf mConsole_warnf;
        static internal ContainerRadiusSearch mContainerRadiusSearch;
        static internal GetObjectID mGetObjectID;
        static internal Math_MatrixCreateFromEuler mMath_MatrixCreateFromEuler;
        static internal Math_MatrixMulVector mMath_MatrixMulVector;
        static internal NameSpace_isInNamespaceHierarchy mNameSpace_isInNamespaceHierarchy;
        static internal NameSpace_isMethod mNameSpace_isMethod;
        static internal ParentCall mParentCall;
        static internal ParentCallFunct mParentCallFunct;
        static internal SceneObject_getTypeMask mSceneObject_getTypeMask;
        static internal SceneObject_initContainerRadiusSearch mSceneObject_initContainerRadiusSearch;
        static internal SimObject_Call mSimObject_Call;
        static internal addTaggedString maddTaggedString;
        static internal clearServerPaths mclearServerPaths;
        static internal clientGroup_getCount mclientGroup_getCount;
        static internal clientGroup_getObject mclientGroup_getObject;
        static internal commandToClient mcommandToClient;
        static internal commandToServer mcommandToServer;
        static internal cs_torque_getvariable mcs_torque_getvariable;
        static internal cs_torque_setvariable mcs_torque_setvariable;
        static internal deleteVariables mdeleteVariables;
        static internal execute mexecute;
        static internal getClassName mgetClassName;
        static internal getDataBlock mgetDataBlock;
        static internal getName mgetName;
        static internal getTaggedString mgetTaggedString;
        static internal isFunction misFunction;
        static internal nameToID mnameToID;
        static internal objectHasMethod mobjectHasMethod;
        static internal removeTaggedString mremoveTaggedString;
        static internal spawnObject mspawnObject;
        static internal isObject misObject;
        static internal torque_engineinit mtorque_engineinit;
        static internal torque_enginetick mtorque_enginetick;
        static internal torque_engineshutdown mtorque_engineshutdown;
        static internal torque_setwebdeployment mtorque_setwebdeployment;
        static internal torque_enginesignalshutdown mtorque_enginesignalshutdown;
        static internal torque_reset mtorque_reset;
        static internal torque_resizewindow mtorque_resizewindow;
        #endregion

        static IntPtr DLLptr = IntPtr.Zero;


        public static IntPtr GetProcAddress(String InModule, String InSymbolName)
            {
            return NativeMethods.GetProcAddress(DLLptr, InSymbolName);
            }
        static internal void SetUpDynamicDLL(String dllname)
            {
            DLLptr = NativeMethods.LoadLibrary(dllname);
            if (DLLptr == IntPtr.Zero)
                throw new Exception("Failed to find or load dll");
            MapConsoleExterns(dllname);
            MapDynamicExterns(dllname);
            consolemapped = true;
            }
 static private void ClearConsoleExterns()
            {
            mClearHandler_Instance_EvalHandler_Instance_Eval = null;
            mClearHandler_Instance_Eval_Direct_New = null;
            mtorque_gethwnd = null;
            mdnt_torque_engineinit = null;
            mgetEulerRotation = null;
            misMemberOfClass = null;
            mpathOnMissionLoadDone = null;
            mSetHandler_Instance_Eval = null;
            mSetHandler_Instance_Eval_Direct_New = null;
            mtorque_engineinit = null;
            mtorque_enginetick = null;
            mtorque_engineshutdown = null;
            mtorque_setwebdeployment = null;
            mtorque_enginesignalshutdown = null;
            mtorque_reset = null;
            mtorque_resizewindow = null;
            mclientGroup_getCount = null;
            mclientGroup_getObject = null;
            mNameSpace_isMethod = null;
            mremoveTaggedString = null;
            mConsoleCall = null;
            mgetTaggedString = null;
            maddTaggedString = null;
            mConsole_warnf = null;
            mConsole_printf = null;
            mConsole_errorf = null;
            mdeleteVariables = null;
            mobjectHasMethod = null;
            misFunction = null;
            mGetObjectID = null;
            mclearServerPaths = null;
            mgetDataBlock = null;
            mgetName = null;
            mnameToID = null;
            mspawnObject = null;
            mgetClassName = null;
            mParentCall = null;
            mParentCallFunct = null;
            mClassname_Call = null;
            mcommandToClient = null;
            mcommandToServer = null;
            mConsole_getSimTime = null;
            mNameSpace_isInNamespaceHierarchy = null;
            mContainerRadiusSearch = null;
            mcs_torque_getvariable = null;
            mcs_torque_setvariable = null;
            mSceneObject_getTypeMask = null;
            mSceneObject_initContainerRadiusSearch = null;
            mexecute = null;
            mSimObject_Call = null;
            mMath_MatrixCreateFromEuler = null;
            mMath_MatrixMulVector = null;
            misObject = null;
            mSimObject_isField = null;
            GC.Collect();
            }

        static private void MapConsoleExterns(string dllname)
            {

            mtorque_gethwnd = (torque_gethwnd)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "torque_gethwnd"), typeof(torque_gethwnd));
            mdnt_torque_engineinit = (dnt_torque_engineinit)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "dnt_torque_engineinit"), typeof(dnt_torque_engineinit));

            mgetEulerRotation = (getEulerRotation)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "getEulerRotation"), typeof(getEulerRotation));
            misMemberOfClass = (isMemberOfClass)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "isMemberOfClass"), typeof(isMemberOfClass));
            mpathOnMissionLoadDone = (pathOnMissionLoadDone)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "pathOnMissionLoadDone"), typeof(pathOnMissionLoadDone));



            mSetHandler_Instance_Eval = (SetHandler_Instance_Eval)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "SetHandler_Instance_Eval"), typeof(SetHandler_Instance_Eval));
            mSetHandler_Instance_Eval_Direct_New = (SetHandler_Instance_Eval_Direct_New)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "SetHandler_Instance_Eval_Direct_New"), typeof(SetHandler_Instance_Eval_Direct_New));


            mtorque_engineinit = (torque_engineinit)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "torque_engineinit"), typeof(torque_engineinit));
            mtorque_enginetick = (torque_enginetick)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "torque_enginetick"), typeof(torque_enginetick));
            mtorque_engineshutdown = (torque_engineshutdown)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "torque_engineshutdown"), typeof(torque_engineshutdown));
            mtorque_setwebdeployment = (torque_setwebdeployment)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "torque_setwebdeployment"), typeof(torque_setwebdeployment));
            mtorque_enginesignalshutdown = (torque_enginesignalshutdown)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "torque_enginesignalshutdown"), typeof(torque_enginesignalshutdown));
            mtorque_reset = (torque_reset)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "torque_reset"), typeof(torque_reset));
            mtorque_resizewindow = (torque_resizewindow)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "torque_resizewindow"), typeof(torque_resizewindow));



            mclientGroup_getCount = (clientGroup_getCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "clientGroup_getCount"), typeof(clientGroup_getCount));
            mclientGroup_getObject = (clientGroup_getObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "clientGroup_getObject"), typeof(clientGroup_getObject));
            mNameSpace_isMethod = (NameSpace_isMethod)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "NameSpace_isMethod"), typeof(NameSpace_isMethod));
            mremoveTaggedString = (removeTaggedString)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "removeTaggedString"), typeof(removeTaggedString));
            mConsoleCall = (ConsoleCall)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "ConsoleCall"), typeof(ConsoleCall));
            mgetTaggedString = (getTaggedString)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "getTaggedString"), typeof(getTaggedString));
            maddTaggedString = (addTaggedString)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "addTaggedString"), typeof(addTaggedString));
            mConsole_warnf = (Console_warnf)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "Console_warnf"), typeof(Console_warnf));
            mConsole_printf = (Console_printf)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "Console_printf"), typeof(Console_printf));
            mConsole_errorf = (Console_errorf)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "Console_errorf"), typeof(Console_errorf));
            mdeleteVariables = (deleteVariables)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "deleteVariables"), typeof(deleteVariables));
            mobjectHasMethod = (objectHasMethod)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "objectHasMethod"), typeof(objectHasMethod));
            misFunction = (isFunction)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "isFunction"), typeof(isFunction));
            mGetObjectID = (GetObjectID)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "GetObjectID"), typeof(GetObjectID));
            mclearServerPaths = (clearServerPaths)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "clearServerPaths"), typeof(clearServerPaths));
            mgetDataBlock = (getDataBlock)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "getDataBlock"), typeof(getDataBlock));
            mgetName = (getName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "getName"), typeof(getName));
            mnameToID = (nameToID)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "nameToID"), typeof(nameToID));
            mspawnObject = (spawnObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "spawnObject"), typeof(spawnObject));
            mgetClassName = (getClassName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "getClassName"), typeof(getClassName));
            mParentCall = (ParentCall)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "ParentCall"), typeof(ParentCall));
            mParentCallFunct = (ParentCallFunct)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "ParentCallFunct"), typeof(ParentCallFunct));
            mClassname_Call = (Classname_Call)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "Classname_Call"), typeof(Classname_Call));
            mcommandToClient = (commandToClient)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "commandToClient"), typeof(commandToClient));
            mcommandToServer = (commandToServer)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "commandToServer"), typeof(commandToServer));
            mConsole_getSimTime = (Console_getSimTime)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "Console_getSimTime"), typeof(Console_getSimTime));
            mNameSpace_isInNamespaceHierarchy = (NameSpace_isInNamespaceHierarchy)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "NameSpace_isInNamespaceHierarchy"), typeof(NameSpace_isInNamespaceHierarchy));
            mContainerRadiusSearch = (ContainerRadiusSearch)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "ContainerRadiusSearch"), typeof(ContainerRadiusSearch));
            //mwle_fn_SimObject_getFieldValue = (wle_fn_SimObject_getFieldValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_getFieldValue"), typeof(wle_fn_SimObject_getFieldValue));
            mcs_torque_getvariable = (cs_torque_getvariable)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "cs_torque_getvariable"), typeof(cs_torque_getvariable));
            mcs_torque_setvariable = (cs_torque_setvariable)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "cs_torque_setvariable"), typeof(cs_torque_setvariable));
            //mwle_fn_SimObject_setFieldValue = (wle_fn_SimObject_setFieldValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_setFieldValue"), typeof(wle_fn_SimObject_setFieldValue));
            mSceneObject_getTypeMask = (SceneObject_getTypeMask)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "SceneObject_getTypeMask"), typeof(SceneObject_getTypeMask));
            mSceneObject_initContainerRadiusSearch = (SceneObject_initContainerRadiusSearch)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "SceneObject_initContainerRadiusSearch"), typeof(SceneObject_initContainerRadiusSearch));
            mexecute = (execute)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "execute"), typeof(execute));
            mSimObject_Call = (SimObject_Call)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "SimObject_Call"), typeof(SimObject_Call));
            mMath_MatrixCreateFromEuler = (Math_MatrixCreateFromEuler)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "Math_MatrixCreateFromEuler"), typeof(Math_MatrixCreateFromEuler));
            mMath_MatrixMulVector = (Math_MatrixMulVector)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "Math_MatrixMulVector"), typeof(Math_MatrixMulVector));
            //mwle_fn_activatePackage = (wle_fn_activatePackage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_activatePackage"), typeof(wle_fn_activatePackage));
            misObject = (isObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "isObject"), typeof(isObject));
            mSimObject_isField = (SimObject_isField)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "SimObject_isField"), typeof(SimObject_isField));
            }




        #region AutoGen
       
	    static internal wle_fn_addBadWord mwle_fn_addBadWord;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_addBadWord([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder badWord);
static internal wle_fn_filterString mwle_fn_filterString;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_filterString([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder baseString, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder replacementChars,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_containsBadWords mwle_fn_containsBadWords;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_containsBadWords([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text);
static internal wle_fn__strToPlayerName mwle_fn__strToPlayerName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__strToPlayerName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn__lockMouse mwle_fn__lockMouse;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__lockMouse([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1);
static internal wle_fn__setNetPort mwle_fn__setNetPort;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__setNetPort([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fn__getVersionNumber mwle_fn__getVersionNumber;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__getVersionNumber();
static internal wle_fn__getVersionString mwle_fn__getVersionString;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__getVersionString([MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn__getEngineName mwle_fn__getEngineName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__getEngineName([MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn__getBuildString mwle_fn__getBuildString;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__getBuildString([MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnHTTPObject_get mwle_fnHTTPObject_get;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnHTTPObject_get([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder httpobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder Address, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder requirstURI, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder query);
static internal wle_fnHTTPObject_post mwle_fnHTTPObject_post;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnHTTPObject_post([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder httpobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder Address, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder requirstURI, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder query, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder post);
static internal wle_fn__removeTaggedString mwle_fn__removeTaggedString;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__removeTaggedString([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1);
static internal wle_fn__addTaggedString mwle_fn__addTaggedString;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__addTaggedString([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn__buildTaggedString mwle_fn__buildTaggedString;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__buildTaggedString([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn__queryAllServers mwle_fn__queryAllServers;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__queryAllServers([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11);
static internal wle_fn__queryLanServers mwle_fn__queryLanServers;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__queryLanServers([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11);
static internal wle_fn__queryMasterServer mwle_fn__queryMasterServer;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__queryMasterServer([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10);
static internal wle_fn__querySingleServer mwle_fn__querySingleServer;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__querySingleServer([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fn__setServerInfo mwle_fn__setServerInfo;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__setServerInfo([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1);
static internal wle_fnTCPObject_send mwle_fnTCPObject_send;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnTCPObject_send([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder tcpobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder data);
static internal wle_fnTCPObject_listen mwle_fnTCPObject_listen;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnTCPObject_listen([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder tcpobject, [In] int port);
static internal wle_fnTCPObject_connect mwle_fnTCPObject_connect;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnTCPObject_connect([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder tcpobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder address);
static internal wle_fnTCPObject_disconnect mwle_fnTCPObject_disconnect;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnTCPObject_disconnect([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder tcpobject);
static internal wle_fn__testJavaScriptBridge mwle_fn__testJavaScriptBridge;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__testJavaScriptBridge([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn__TestFunction2Args mwle_fn__TestFunction2Args;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__TestFunction2Args([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnDynamicConsoleMethodComponent_callMethod mwle_fnDynamicConsoleMethodComponent_callMethod;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnDynamicConsoleMethodComponent_callMethod([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder dynamicconsolemethodcomponent, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a12, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a13, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a14, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a15, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a16, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a17, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a18, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a19, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a20, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a21, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a22, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a23, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a24, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a25, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a26, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a27, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a28, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a29, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a30, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a31, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a32, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a33, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a34, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a35, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a36, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a37, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a38, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a39, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a40, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a41, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a42, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a43, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a44, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a45, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a46, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a47, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a48, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a49, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a50, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a51, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a52, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a53, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a54, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a55, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a56, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a57, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a58, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a59, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a60, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a61, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a62, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a63);
static internal wle_fnSimComponent_addComponents mwle_fnSimComponent_addComponents;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimComponent_addComponents([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simcomponent, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a12, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a13, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a14, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a15, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a16, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a17, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a18, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a19, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a20, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a21, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a22, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a23, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a24, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a25, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a26, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a27, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a28, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a29, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a30, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a31, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a32, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a33, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a34, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a35, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a36, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a37, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a38, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a39, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a40, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a41, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a42, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a43, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a44, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a45, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a46, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a47, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a48, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a49, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a50, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a51, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a52, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a53, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a54, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a55, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a56, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a57, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a58, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a59, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a60, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a61, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a62, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a63);
static internal wle_fnSimComponent_removeComponents mwle_fnSimComponent_removeComponents;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimComponent_removeComponents([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simcomponent, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a12, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a13, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a14, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a15, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a16, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a17, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a18, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a19, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a20, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a21, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a22, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a23, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a24, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a25, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a26, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a27, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a28, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a29, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a30, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a31, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a32, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a33, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a34, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a35, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a36, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a37, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a38, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a39, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a40, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a41, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a42, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a43, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a44, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a45, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a46, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a47, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a48, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a49, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a50, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a51, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a52, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a53, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a54, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a55, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a56, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a57, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a58, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a59, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a60, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a61, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a62, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a63);
static internal wle_fnSimComponent_getComponentCount mwle_fnSimComponent_getComponentCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimComponent_getComponentCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simcomponent);
static internal wle_fnSimComponent_getComponent mwle_fnSimComponent_getComponent;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimComponent_getComponent([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simcomponent, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnSimComponent_setEnabled mwle_fnSimComponent_setEnabled;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimComponent_setEnabled([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simcomponent, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnSimComponent_isEnabled mwle_fnSimComponent_isEnabled;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimComponent_isEnabled([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simcomponent);
static internal wle_fnSimComponent_setIsTemplate mwle_fnSimComponent_setIsTemplate;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimComponent_setIsTemplate([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simcomponent, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnSimComponent_getIsTemplate mwle_fnSimComponent_getIsTemplate;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimComponent_getIsTemplate([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simcomponent);
static internal wle_fnArrayObject_getIndexFromValue mwle_fnArrayObject_getIndexFromValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnArrayObject_getIndexFromValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder value);
static internal wle_fnArrayObject_getIndexFromKey mwle_fnArrayObject_getIndexFromKey;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnArrayObject_getIndexFromKey([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder key);
static internal wle_fnArrayObject_getValue mwle_fnArrayObject_getValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_getValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnArrayObject_getKey mwle_fnArrayObject_getKey;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_getKey([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnArrayObject_setKey mwle_fnArrayObject_setKey;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_setKey([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder key, [In] int index);
static internal wle_fnArrayObject_setValue mwle_fnArrayObject_setValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_setValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder value, [In] int index);
static internal wle_fnArrayObject_count mwle_fnArrayObject_count;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnArrayObject_count([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject);
static internal wle_fnArrayObject_countValue mwle_fnArrayObject_countValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnArrayObject_countValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder value);
static internal wle_fnArrayObject_countKey mwle_fnArrayObject_countKey;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnArrayObject_countKey([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder key);
static internal wle_fnArrayObject_add mwle_fnArrayObject_add;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_add([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder key, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder value);
static internal wle_fnArrayObject_push_back mwle_fnArrayObject_push_back;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_push_back([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder key, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder value);
static internal wle_fnArrayObject_push_front mwle_fnArrayObject_push_front;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_push_front([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder key, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder value);
static internal wle_fnArrayObject_insert mwle_fnArrayObject_insert;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_insert([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder key, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder value, [In] int index);
static internal wle_fnArrayObject_pop_back mwle_fnArrayObject_pop_back;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_pop_back([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject);
static internal wle_fnArrayObject_pop_front mwle_fnArrayObject_pop_front;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_pop_front([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject);
static internal wle_fnArrayObject_erase mwle_fnArrayObject_erase;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_erase([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [In] int index);
static internal wle_fnArrayObject_empty mwle_fnArrayObject_empty;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_empty([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject);
static internal wle_fnArrayObject_uniqueValue mwle_fnArrayObject_uniqueValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_uniqueValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject);
static internal wle_fnArrayObject_uniqueKey mwle_fnArrayObject_uniqueKey;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_uniqueKey([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject);
static internal wle_fnArrayObject_duplicate mwle_fnArrayObject_duplicate;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnArrayObject_duplicate([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder target);
static internal wle_fnArrayObject_crop mwle_fnArrayObject_crop;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnArrayObject_crop([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder target);
static internal wle_fnArrayObject_append mwle_fnArrayObject_append;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnArrayObject_append([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder target);
static internal wle_fnArrayObject_sort mwle_fnArrayObject_sort;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_sort([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [In] bool ascending);
static internal wle_fnArrayObject_sorta mwle_fnArrayObject_sorta;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_sorta([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject);
static internal wle_fnArrayObject_sortd mwle_fnArrayObject_sortd;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_sortd([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject);
static internal wle_fnArrayObject_sortk mwle_fnArrayObject_sortk;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_sortk([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [In] bool ascending);
static internal wle_fnArrayObject_sortka mwle_fnArrayObject_sortka;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_sortka([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject);
static internal wle_fnArrayObject_sortkd mwle_fnArrayObject_sortkd;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_sortkd([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject);
static internal wle_fnArrayObject_sortn mwle_fnArrayObject_sortn;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_sortn([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [In] bool ascending);
static internal wle_fnArrayObject_sortna mwle_fnArrayObject_sortna;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_sortna([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject);
static internal wle_fnArrayObject_sortnd mwle_fnArrayObject_sortnd;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_sortnd([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject);
static internal wle_fnArrayObject_sortnk mwle_fnArrayObject_sortnk;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_sortnk([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [In] bool ascending);
static internal wle_fnArrayObject_sortnka mwle_fnArrayObject_sortnka;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_sortnka([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject);
static internal wle_fnArrayObject_sortnkd mwle_fnArrayObject_sortnkd;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_sortnkd([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject);
static internal wle_fnArrayObject_sortf mwle_fnArrayObject_sortf;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_sortf([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder functionName);
static internal wle_fnArrayObject_sortfk mwle_fnArrayObject_sortfk;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_sortfk([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder functionName);
static internal wle_fnArrayObject_sortfd mwle_fnArrayObject_sortfd;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_sortfd([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder functionName);
static internal wle_fnArrayObject_sortfkd mwle_fnArrayObject_sortfkd;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_sortfkd([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder functionName);
static internal wle_fnArrayObject_moveFirst mwle_fnArrayObject_moveFirst;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnArrayObject_moveFirst([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject);
static internal wle_fnArrayObject_moveLast mwle_fnArrayObject_moveLast;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnArrayObject_moveLast([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject);
static internal wle_fnArrayObject_moveNext mwle_fnArrayObject_moveNext;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnArrayObject_moveNext([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject);
static internal wle_fnArrayObject_movePrev mwle_fnArrayObject_movePrev;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnArrayObject_movePrev([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject);
static internal wle_fnArrayObject_getCurrent mwle_fnArrayObject_getCurrent;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnArrayObject_getCurrent([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject);
static internal wle_fnArrayObject_setCurrent mwle_fnArrayObject_setCurrent;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_setCurrent([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject, [In] int index);
static internal wle_fnArrayObject_echo mwle_fnArrayObject_echo;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnArrayObject_echo([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder arrayobject);
static internal wle_fn_log mwle_fn_log;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_log([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder message);
static internal wle_fn_logError mwle_fn_logError;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_logError([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder message);
static internal wle_fn_logWarning mwle_fn_logWarning;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_logWarning([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder message);
static internal wle_fn_dumpConsoleClasses mwle_fn_dumpConsoleClasses;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_dumpConsoleClasses([In] bool dumpScript, [In] bool dumpEngine);
static internal wle_fn_dumpConsoleFunctions mwle_fn_dumpConsoleFunctions;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_dumpConsoleFunctions([In] bool dumpScript, [In] bool dumpEngine);
static internal wle_fn__nextToken mwle_fn__nextToken;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__nextToken([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn__getTag mwle_fn__getTag;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__getTag([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn__echo mwle_fn__echo;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__echo([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a12, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a13, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a14, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a15, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a16, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a17, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a18, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a19);
static internal wle_fn__warn mwle_fn__warn;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__warn([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a12, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a13, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a14, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a15, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a16, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a17, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a18, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a19);
static internal wle_fn__error mwle_fn__error;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__error([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a12, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a13, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a14, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a15, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a16, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a17, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a18, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a19);
static internal wle_fn__realQuit mwle_fn__realQuit;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__realQuit();
static internal wle_fn__call mwle_fn__call;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__call([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a12, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a13, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a14, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a15, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a16, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a17, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a18, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a19,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn__eval mwle_fn__eval;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__eval([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn__getVariable mwle_fn__getVariable;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__getVariable([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn__setVariable mwle_fn__setVariable;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__setVariable([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fn__isFunction mwle_fn__isFunction;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__isFunction([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1);
static internal wle_fn__isMethod mwle_fn__isMethod;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__isMethod([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fn__getMethodPackage mwle_fn__getMethodPackage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__getMethodPackage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn__isDefined mwle_fn__isDefined;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__isDefined([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fn__getModNameFromPath mwle_fn__getModNameFromPath;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__getModNameFromPath([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn__getPrefsPath mwle_fn__getPrefsPath;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__getPrefsPath([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn__execPrefs mwle_fn__execPrefs;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__execPrefs([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fn_strasc mwle_fn_strasc;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_strasc([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder chr);
static internal wle_fn_strformat mwle_fn_strformat;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_strformat([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder format, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder value,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_strcmp mwle_fn_strcmp;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_strcmp([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str2);
static internal wle_fn_stricmp mwle_fn_stricmp;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_stricmp([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str2);
static internal wle_fn_strnatcmp mwle_fn_strnatcmp;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_strnatcmp([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str2);
static internal wle_fn_strinatcmp mwle_fn_strinatcmp;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_strinatcmp([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str2);
static internal wle_fn_strlen mwle_fn_strlen;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_strlen([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str);
static internal wle_fn_strstr mwle_fn_strstr;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_strstr([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder xstring, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder substring);
static internal wle_fn_strpos mwle_fn_strpos;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_strpos([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder haystack, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder needle, [In] int offset);
static internal wle_fn_ltrim mwle_fn_ltrim;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_ltrim([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_rtrim mwle_fn_rtrim;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_rtrim([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_trim mwle_fn_trim;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_trim([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_stripChars mwle_fn_stripChars;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_stripChars([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder chars,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_strlwr mwle_fn_strlwr;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_strlwr([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_strupr mwle_fn_strupr;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_strupr([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_strchr mwle_fn_strchr;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_strchr([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder chr,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_strrchr mwle_fn_strrchr;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_strrchr([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder chr,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_strreplace mwle_fn_strreplace;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_strreplace([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder source, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder from, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder to,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_strrepeat mwle_fn_strrepeat;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_strrepeat([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str, [In] int numTimes, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder delimiter,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_getSubStr mwle_fn_getSubStr;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getSubStr([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str, [In] int start, [In] int numChars,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_strIsMatchExpr mwle_fn_strIsMatchExpr;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_strIsMatchExpr([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pattern, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str, [In] bool caseSensitive);
static internal wle_fn_strIsMatchMultipleExpr mwle_fn_strIsMatchMultipleExpr;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_strIsMatchMultipleExpr([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder patterns, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str, [In] bool caseSensitive);
static internal wle_fn_getTrailingNumber mwle_fn_getTrailingNumber;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_getTrailingNumber([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str);
static internal wle_fn_stripTrailingNumber mwle_fn_stripTrailingNumber;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_stripTrailingNumber([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_isspace mwle_fn_isspace;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_isspace([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str, [In] int index);
static internal wle_fn_isalnum mwle_fn_isalnum;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_isalnum([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str, [In] int index);
static internal wle_fn_startsWith mwle_fn_startsWith;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_startsWith([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder prefix, [In] bool caseSensitive);
static internal wle_fn_endsWith mwle_fn_endsWith;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_endsWith([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder suffix, [In] bool caseSensitive);
static internal wle_fn_strchrpos mwle_fn_strchrpos;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_strchrpos([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder chr, [In] int start);
static internal wle_fn_strrchrpos mwle_fn_strrchrpos;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_strrchrpos([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder chr, [In] int start);
static internal wle_fn_getWord mwle_fn_getWord;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getWord([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_getWords mwle_fn_getWords;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getWords([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text, [In] int startIndex, [In] int endIndex,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_setWord mwle_fn_setWord;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_setWord([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text, [In] int index, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder replacement,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_removeWord mwle_fn_removeWord;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_removeWord([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_getWordCount mwle_fn_getWordCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_getWordCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text);
static internal wle_fn_getField mwle_fn_getField;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getField([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_getFields mwle_fn_getFields;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getFields([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text, [In] int startIndex, [In] int endIndex,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_setField mwle_fn_setField;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_setField([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text, [In] int index, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder replacement,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_removeField mwle_fn_removeField;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_removeField([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_getFieldCount mwle_fn_getFieldCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_getFieldCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text);
static internal wle_fn_getRecord mwle_fn_getRecord;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getRecord([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_getRecords mwle_fn_getRecords;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getRecords([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text, [In] int startIndex, [In] int endIndex,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_setRecord mwle_fn_setRecord;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_setRecord([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text, [In] int index, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder replacement,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_removeRecord mwle_fn_removeRecord;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_removeRecord([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_getRecordCount mwle_fn_getRecordCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_getRecordCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text);
static internal wle_fn_firstWord mwle_fn_firstWord;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_firstWord([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_restWords mwle_fn_restWords;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_restWords([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_expandEscape mwle_fn_expandEscape;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_expandEscape([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_collapseEscape mwle_fn_collapseEscape;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_collapseEscape([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_quit mwle_fn_quit;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_quit();
static internal wle_fn_quitWithErrorMessage mwle_fn_quitWithErrorMessage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_quitWithErrorMessage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder message);
static internal wle_fn_export mwle_fn_export;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_export([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pattern, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filename, [In] bool append);
static internal wle_fn_trace mwle_fn_trace;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_trace([In] bool enable);
static internal wle_fn_debug mwle_fn_debug;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_debug();
static internal wle_fn_detag mwle_fn_detag;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_detag([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder str,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_debugv mwle_fn_debugv;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_debugv([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder variableName);
static internal wle_fn_setLogMode mwle_fn_setLogMode;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_setLogMode([In] int mode);
static internal wle_fn_gotoWebPage mwle_fn_gotoWebPage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_gotoWebPage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder address);
static internal wle_fn_displaySplashWindow mwle_fn_displaySplashWindow;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_displaySplashWindow();
static internal wle_fn_getWebDeployment mwle_fn_getWebDeployment;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_getWebDeployment();
static internal wle_fn_countBits mwle_fn_countBits;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_countBits([In] int v);
static internal wle_fn_compile mwle_fn_compile;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_compile([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName, [In] bool overrideNoDSO);
static internal wle_fn_exec mwle_fn_exec;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_exec([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName, [In] bool noCalls, [In] bool journalScript);
static internal wle_fn_deleteVariables mwle_fn_deleteVariables;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_deleteVariables([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pattern);
static internal wle_fn_isShippingBuild mwle_fn_isShippingBuild;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_isShippingBuild();
static internal wle_fn_isDebugBuild mwle_fn_isDebugBuild;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_isDebugBuild();
static internal wle_fn_isToolBuild mwle_fn_isToolBuild;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_isToolBuild();
static internal wle_fn_backtrace mwle_fn_backtrace;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_backtrace();
static internal wle_fn_isPackage mwle_fn_isPackage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_isPackage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder identifier);
static internal wle_fn_activatePackage mwle_fn_activatePackage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_activatePackage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder packageName);
static internal wle_fn_deactivatePackage mwle_fn_deactivatePackage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_deactivatePackage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder packageName);
static internal wle_fn_getPackageList mwle_fn_getPackageList;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getPackageList([MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnConsoleLogger_attach mwle_fnConsoleLogger_attach;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnConsoleLogger_attach([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder consolelogger);
static internal wle_fnConsoleLogger_detach mwle_fnConsoleLogger_detach;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnConsoleLogger_detach([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder consolelogger);
static internal wle_fn_isClass mwle_fn_isClass;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_isClass([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder identifier);
static internal wle_fn_isMemberOfClass mwle_fn_isMemberOfClass;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_isMemberOfClass([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder className, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder superClassName);
static internal wle_fn_getDescriptionOfClass mwle_fn_getDescriptionOfClass;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getDescriptionOfClass([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder className,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_getCategoryOfClass mwle_fn_getCategoryOfClass;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getCategoryOfClass([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder className,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_dumpNetStats mwle_fn_dumpNetStats;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_dumpNetStats();
static internal wle_fnFieldBrushObject_queryGroups mwle_fnFieldBrushObject_queryGroups;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnFieldBrushObject_queryGroups([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fieldbrushobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnFieldBrushObject_queryFields mwle_fnFieldBrushObject_queryFields;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnFieldBrushObject_queryFields([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fieldbrushobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnFieldBrushObject_copyFields mwle_fnFieldBrushObject_copyFields;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnFieldBrushObject_copyFields([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fieldbrushobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnFieldBrushObject_pasteFields mwle_fnFieldBrushObject_pasteFields;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnFieldBrushObject_pasteFields([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fieldbrushobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fn_findFirstFile mwle_fn_findFirstFile;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_findFirstFile([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pattern, [In] bool recurse,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_findNextFile mwle_fn_findNextFile;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_findNextFile([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pattern,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_getFileCount mwle_fn_getFileCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_getFileCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pattern, [In] bool recurse);
static internal wle_fn_findFirstFileMultiExpr mwle_fn_findFirstFileMultiExpr;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_findFirstFileMultiExpr([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pattern, [In] bool recurse,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_findNextFileMultiExpr mwle_fn_findNextFileMultiExpr;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_findNextFileMultiExpr([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pattern,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_getFileCountMultiExpr mwle_fn_getFileCountMultiExpr;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_getFileCountMultiExpr([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pattern, [In] bool recurse);
static internal wle_fn_getFileCRC mwle_fn_getFileCRC;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_getFileCRC([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName);
static internal wle_fn_isFile mwle_fn_isFile;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_isFile([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName);
static internal wle_fn_IsDirectory mwle_fn_IsDirectory;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_IsDirectory([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder directory);
static internal wle_fn_isWriteableFileName mwle_fn_isWriteableFileName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_isWriteableFileName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName);
static internal wle_fn_startFileChangeNotifications mwle_fn_startFileChangeNotifications;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_startFileChangeNotifications();
static internal wle_fn_stopFileChangeNotifications mwle_fn_stopFileChangeNotifications;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_stopFileChangeNotifications();
static internal wle_fn_getDirectoryList mwle_fn_getDirectoryList;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getDirectoryList([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder path, [In] int depth,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_fileSize mwle_fn_fileSize;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_fileSize([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName);
static internal wle_fn_fileModifiedTime mwle_fn_fileModifiedTime;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_fileModifiedTime([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_fileCreatedTime mwle_fn_fileCreatedTime;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_fileCreatedTime([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_fileDelete mwle_fn_fileDelete;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_fileDelete([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder path);
static internal wle_fn_fileExt mwle_fn_fileExt;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_fileExt([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_fileBase mwle_fn_fileBase;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_fileBase([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_fileName mwle_fn_fileName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_fileName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_filePath mwle_fn_filePath;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_filePath([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_getWorkingDirectory mwle_fn_getWorkingDirectory;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getWorkingDirectory([MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_makeFullPath mwle_fn_makeFullPath;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_makeFullPath([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder path, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder cwd,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_makeRelativePath mwle_fn_makeRelativePath;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_makeRelativePath([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder path, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder to,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_pathConcat mwle_fn_pathConcat;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_pathConcat([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder path, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder file,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_getExecutableName mwle_fn_getExecutableName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getExecutableName([MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_getMainDotCsDir mwle_fn_getMainDotCsDir;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getMainDotCsDir([MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_openFolder mwle_fn_openFolder;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_openFolder([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder path);
static internal wle_fn_openFile mwle_fn_openFile;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_openFile([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder file);
static internal wle_fn_pathCopy mwle_fn_pathCopy;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_pathCopy([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fromFile, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder toFile, [In] bool noOverwrite);
static internal wle_fn_getCurrentDirectory mwle_fn_getCurrentDirectory;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getCurrentDirectory([MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_setCurrentDirectory mwle_fn_setCurrentDirectory;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_setCurrentDirectory([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder path);
static internal wle_fn_createPath mwle_fn_createPath;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_createPath([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder path);
static internal wle_fnPersistenceManager_deleteObjectsFromFile mwle_fnPersistenceManager_deleteObjectsFromFile;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPersistenceManager_deleteObjectsFromFile([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder persistencemanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnPersistenceManager_setDirty mwle_fnPersistenceManager_setDirty;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPersistenceManager_setDirty([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder persistencemanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnPersistenceManager_removeDirty mwle_fnPersistenceManager_removeDirty;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPersistenceManager_removeDirty([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder persistencemanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnPersistenceManager_isDirty mwle_fnPersistenceManager_isDirty;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPersistenceManager_isDirty([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder persistencemanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnPersistenceManager_hasDirty mwle_fnPersistenceManager_hasDirty;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPersistenceManager_hasDirty([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder persistencemanager);
static internal wle_fnPersistenceManager_getDirtyObjectCount mwle_fnPersistenceManager_getDirtyObjectCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPersistenceManager_getDirtyObjectCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder persistencemanager);
static internal wle_fnPersistenceManager_getDirtyObject mwle_fnPersistenceManager_getDirtyObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPersistenceManager_getDirtyObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder persistencemanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnPersistenceManager_listDirty mwle_fnPersistenceManager_listDirty;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPersistenceManager_listDirty([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder persistencemanager);
static internal wle_fnPersistenceManager_saveDirty mwle_fnPersistenceManager_saveDirty;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPersistenceManager_saveDirty([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder persistencemanager);
static internal wle_fnPersistenceManager_saveDirtyObject mwle_fnPersistenceManager_saveDirtyObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPersistenceManager_saveDirtyObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder persistencemanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnPersistenceManager_clearAll mwle_fnPersistenceManager_clearAll;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPersistenceManager_clearAll([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder persistencemanager);
static internal wle_fnPersistenceManager_removeObjectFromFile mwle_fnPersistenceManager_removeObjectFromFile;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPersistenceManager_removeObjectFromFile([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder persistencemanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnPersistenceManager_removeField mwle_fnPersistenceManager_removeField;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPersistenceManager_removeField([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder persistencemanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fn__expandFilename mwle_fn__expandFilename;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__expandFilename([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn__isObject mwle_fn__isObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__isObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1);
static internal wle_fn__spawnObject mwle_fn__spawnObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__spawnObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5);
static internal wle_fn__schedule mwle_fn__schedule;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__schedule([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a12, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a13, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a14, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a15, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a16, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a17, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a18, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a19);
static internal wle_fn__getUniqueName mwle_fn__getUniqueName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__getUniqueName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn__getUniqueInternalName mwle_fn__getUniqueInternalName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__getUniqueInternalName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn__isValidObjectName mwle_fn__isValidObjectName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__isValidObjectName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1);
static internal wle_fn_SimDataBlock_reloadOnLocalClient mwle_fn_SimDataBlock_reloadOnLocalClient;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_SimDataBlock_reloadOnLocalClient([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simdatablock);
static internal wle_fn_preloadClientDataBlocks mwle_fn_preloadClientDataBlocks;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_preloadClientDataBlocks();
static internal wle_fn_deleteDataBlocks mwle_fn_deleteDataBlocks;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_deleteDataBlocks();
static internal wle_fnSimObject_call mwle_fnSimObject_call;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimObject_call([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a12, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a13, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a14, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a15, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a16, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a17, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a18, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a19,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSimObject_schedule mwle_fnSimObject_schedule;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimObject_schedule([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a12, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a13, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a14, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a15, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a16, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a17, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a18, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a19);
static internal wle_fn_SimObject_isMethod mwle_fn_SimObject_isMethod;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_SimObject_isMethod([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder methodName);
static internal wle_fn_SimObject_getClassNamespace mwle_fn_SimObject_getClassNamespace;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_SimObject_getClassNamespace([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_SimObject_getSuperClassNamespace mwle_fn_SimObject_getSuperClassNamespace;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_SimObject_getSuperClassNamespace([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_SimObject_setClassNamespace mwle_fn_SimObject_setClassNamespace;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_SimObject_setClassNamespace([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name);
static internal wle_fn_SimObject_setSuperClassNamespace mwle_fn_SimObject_setSuperClassNamespace;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_SimObject_setSuperClassNamespace([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name);
static internal wle_fn_SimObject_isExpanded mwle_fn_SimObject_isExpanded;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_SimObject_isExpanded([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject);
static internal wle_fn_SimObject_setIsExpanded mwle_fn_SimObject_setIsExpanded;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_SimObject_setIsExpanded([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [In] bool state);
static internal wle_fn_SimObject_getFilename mwle_fn_SimObject_getFilename;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_SimObject_getFilename([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_SimObject_setFilename mwle_fn_SimObject_setFilename;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_SimObject_setFilename([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName);
static internal wle_fn_SimObject_getDeclarationLine mwle_fn_SimObject_getDeclarationLine;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_SimObject_getDeclarationLine([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject);
static internal wle_fn_SimObject_assignFieldsFrom mwle_fn_SimObject_assignFieldsFrom;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_SimObject_assignFieldsFrom([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fromObject);
static internal wle_fn_SimObject_getCanSave mwle_fn_SimObject_getCanSave;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_SimObject_getCanSave([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject);
static internal wle_fn_SimObject_setCanSave mwle_fn_SimObject_setCanSave;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_SimObject_setCanSave([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [In] bool value);
static internal wle_fn_SimObject_dumpMethods mwle_fn_SimObject_dumpMethods;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_SimObject_dumpMethods([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_SimObject_save mwle_fn_SimObject_save;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_SimObject_save([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName, [In] bool selectedOnly, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder preAppendString);
static internal wle_fn_SimObject_getClassName mwle_fn_SimObject_getClassName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_SimObject_getClassName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_SimObject_isField mwle_fn_SimObject_isField;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_SimObject_isField([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fieldName);
static internal wle_fn_SimObject_getFieldValue mwle_fn_SimObject_getFieldValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_SimObject_getFieldValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fieldName, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_SimObject_setFieldValue mwle_fn_SimObject_setFieldValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_SimObject_setFieldValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fieldName, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder value, [In] int index);
static internal wle_fn_SimObject_getFieldType mwle_fn_SimObject_getFieldType;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_SimObject_getFieldType([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fieldName,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_SimObject_setFieldType mwle_fn_SimObject_setFieldType;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_SimObject_setFieldType([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fieldName, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder type);
static internal wle_fn_SimObject_dumpClassHierarchy mwle_fn_SimObject_dumpClassHierarchy;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_SimObject_dumpClassHierarchy([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject);
static internal wle_fn_SimObject_isMemberOfClass mwle_fn_SimObject_isMemberOfClass;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_SimObject_isMemberOfClass([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder className);
static internal wle_fn_SimObject_isInNamespaceHierarchy mwle_fn_SimObject_isInNamespaceHierarchy;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_SimObject_isInNamespaceHierarchy([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name);
static internal wle_fn_SimObject_delete mwle_fn_SimObject_delete;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_SimObject_delete([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject);
static internal wle_fn_SimObject_getDynamicFieldCount mwle_fn_SimObject_getDynamicFieldCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_SimObject_getDynamicFieldCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject);
static internal wle_fn_SimObject_getDynamicField mwle_fn_SimObject_getDynamicField;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_SimObject_getDynamicField([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_SimObject_getFieldCount mwle_fn_SimObject_getFieldCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_SimObject_getFieldCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject);
static internal wle_fn_SimObject_getField mwle_fn_SimObject_getField;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_SimObject_getField([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSimObject_dumpGroupHierarchy mwle_fnSimObject_dumpGroupHierarchy;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimObject_dumpGroupHierarchy([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject);
static internal wle_fnSimObject_isChildOfGroup mwle_fnSimObject_isChildOfGroup;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimObject_isChildOfGroup([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder group);
static internal wle_fnSimObject_isSelected mwle_fnSimObject_isSelected;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimObject_isSelected([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject);
static internal wle_fnSimObject_setIsSelected mwle_fnSimObject_setIsSelected;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimObject_setIsSelected([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [In] bool state);
static internal wle_fnSimObject_assignPersistentId mwle_fnSimObject_assignPersistentId;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimObject_assignPersistentId([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject);
static internal wle_fnSimObject_isEditorOnly mwle_fnSimObject_isEditorOnly;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimObject_isEditorOnly([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject);
static internal wle_fnSimObject_setEditorOnly mwle_fnSimObject_setEditorOnly;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimObject_setEditorOnly([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [In] bool value);
static internal wle_fnSimObject_isNameChangeAllowed mwle_fnSimObject_isNameChangeAllowed;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimObject_isNameChangeAllowed([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject);
static internal wle_fnSimObject_setNameChangeAllowed mwle_fnSimObject_setNameChangeAllowed;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimObject_setNameChangeAllowed([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [In] bool value);
static internal wle_fnSimObject_clone mwle_fnSimObject_clone;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimObject_clone([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSimObject_deepClone mwle_fnSimObject_deepClone;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimObject_deepClone([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSimObject_setLocked mwle_fnSimObject_setLocked;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimObject_setLocked([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [In] bool value);
static internal wle_fnSimObject_setHidden mwle_fnSimObject_setHidden;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimObject_setHidden([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [In] bool value);
static internal wle_fnSimObject_dump mwle_fnSimObject_dump;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimObject_dump([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [In] bool detailed);
static internal wle_fnSimObject_setName mwle_fnSimObject_setName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimObject_setName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder newName);
static internal wle_fnSimObject_getName mwle_fnSimObject_getName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimObject_getName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSimObject_setInternalName mwle_fnSimObject_setInternalName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimObject_setInternalName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder newInternalName);
static internal wle_fnSimObject_getInternalName mwle_fnSimObject_getInternalName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimObject_getInternalName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSimObject_getId mwle_fnSimObject_getId;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimObject_getId([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject);
static internal wle_fnSimObject_getGroup mwle_fnSimObject_getGroup;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimObject_getGroup([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSimObject_getDebugInfo mwle_fnSimObject_getDebugInfo;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimObject_getDebugInfo([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSimPersistSet_resolvePersistentIds mwle_fnSimPersistSet_resolvePersistentIds;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimPersistSet_resolvePersistentIds([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simpersistset);
static internal wle_fn_saveObject mwle_fn_saveObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_saveObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder xobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filename);
static internal wle_fn_loadObject mwle_fn_loadObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_loadObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filename,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSimSet_add mwle_fnSimSet_add;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimSet_add([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simset, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a12, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a13, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a14, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a15, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a16, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a17, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a18, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a19);
static internal wle_fnSimSet_remove mwle_fnSimSet_remove;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimSet_remove([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simset, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a12, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a13, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a14, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a15, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a16, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a17, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a18, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a19);
static internal wle_fnSimSet_deleteAllObjects mwle_fnSimSet_deleteAllObjects;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimSet_deleteAllObjects([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simset);
static internal wle_fnSimSet_callOnChildren mwle_fnSimSet_callOnChildren;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimSet_callOnChildren([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simset, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a12, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a13, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a14, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a15, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a16, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a17, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a18, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a19);
static internal wle_fnSimSet_callOnChildrenNoRecurse mwle_fnSimSet_callOnChildrenNoRecurse;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimSet_callOnChildrenNoRecurse([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simset, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a12, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a13, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a14, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a15, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a16, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a17, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a18, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a19);
static internal wle_fnSimSet_getFullCount mwle_fnSimSet_getFullCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimSet_getFullCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simset);
static internal wle_fnSimSet_sort mwle_fnSimSet_sort;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimSet_sort([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simset, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnSimSet_listObjects mwle_fnSimSet_listObjects;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimSet_listObjects([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simset);
static internal wle_fnSimSet_clear mwle_fnSimSet_clear;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimSet_clear([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simset);
static internal wle_fnSimSet_getRandom mwle_fnSimSet_getRandom;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimSet_getRandom([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simset,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSimSet_reorderChild mwle_fnSimSet_reorderChild;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimSet_reorderChild([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simset, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder child1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder child2);
static internal wle_fnSimSet_getCount mwle_fnSimSet_getCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimSet_getCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simset);
static internal wle_fnSimSet_getObject mwle_fnSimSet_getObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimSet_getObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simset, [In] uint index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSimSet_getObjectIndex mwle_fnSimSet_getObjectIndex;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimSet_getObjectIndex([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simset, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder obj);
static internal wle_fnSimSet_isMember mwle_fnSimSet_isMember;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimSet_isMember([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simset, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder obj);
static internal wle_fnSimSet_findObjectByInternalName mwle_fnSimSet_findObjectByInternalName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimSet_findObjectByInternalName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simset, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder internalName, [In] bool searchChildren,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSimSet_bringToFront mwle_fnSimSet_bringToFront;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimSet_bringToFront([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simset, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder obj);
static internal wle_fnSimSet_pushToBack mwle_fnSimSet_pushToBack;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimSet_pushToBack([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simset, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder obj);
static internal wle_fnSimSet_acceptsAsChild mwle_fnSimSet_acceptsAsChild;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimSet_acceptsAsChild([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simset, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder obj);
static internal wle_fnSimXMLDocument_attributeF32 mwle_fnSimXMLDocument_attributeF32;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnSimXMLDocument_attributeF32([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnSimXMLDocument_attributeS32 mwle_fnSimXMLDocument_attributeS32;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimXMLDocument_attributeS32([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnSimXMLDocument_reset mwle_fnSimXMLDocument_reset;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_reset([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument);
static internal wle_fnSimXMLDocument_loadFile mwle_fnSimXMLDocument_loadFile;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimXMLDocument_loadFile([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName);
static internal wle_fnSimXMLDocument_saveFile mwle_fnSimXMLDocument_saveFile;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimXMLDocument_saveFile([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName);
static internal wle_fnSimXMLDocument_parse mwle_fnSimXMLDocument_parse;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_parse([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder xmlString);
static internal wle_fnSimXMLDocument_clear mwle_fnSimXMLDocument_clear;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_clear([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument);
static internal wle_fnSimXMLDocument_getErrorDesc mwle_fnSimXMLDocument_getErrorDesc;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_getErrorDesc([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSimXMLDocument_clearError mwle_fnSimXMLDocument_clearError;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_clearError([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument);
static internal wle_fnSimXMLDocument_pushFirstChildElement mwle_fnSimXMLDocument_pushFirstChildElement;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimXMLDocument_pushFirstChildElement([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name);
static internal wle_fnSimXMLDocument_pushChildElement mwle_fnSimXMLDocument_pushChildElement;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimXMLDocument_pushChildElement([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument, [In] int index);
static internal wle_fnSimXMLDocument_nextSiblingElement mwle_fnSimXMLDocument_nextSiblingElement;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimXMLDocument_nextSiblingElement([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name);
static internal wle_fnSimXMLDocument_elementValue mwle_fnSimXMLDocument_elementValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_elementValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSimXMLDocument_popElement mwle_fnSimXMLDocument_popElement;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_popElement([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument);
static internal wle_fnSimXMLDocument_attribute mwle_fnSimXMLDocument_attribute;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_attribute([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder attributeName,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSimXMLDocument_attributeExists mwle_fnSimXMLDocument_attributeExists;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSimXMLDocument_attributeExists([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder attributeName);
static internal wle_fnSimXMLDocument_firstAttribute mwle_fnSimXMLDocument_firstAttribute;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_firstAttribute([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSimXMLDocument_lastAttribute mwle_fnSimXMLDocument_lastAttribute;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_lastAttribute([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSimXMLDocument_nextAttribute mwle_fnSimXMLDocument_nextAttribute;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_nextAttribute([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSimXMLDocument_prevAttribute mwle_fnSimXMLDocument_prevAttribute;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_prevAttribute([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSimXMLDocument_setAttribute mwle_fnSimXMLDocument_setAttribute;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_setAttribute([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder attributeName, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder value);
static internal wle_fnSimXMLDocument_setObjectAttributes mwle_fnSimXMLDocument_setObjectAttributes;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_setObjectAttributes([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder objectID);
static internal wle_fnSimXMLDocument_pushNewElement mwle_fnSimXMLDocument_pushNewElement;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_pushNewElement([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name);
static internal wle_fnSimXMLDocument_addNewElement mwle_fnSimXMLDocument_addNewElement;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_addNewElement([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name);
static internal wle_fnSimXMLDocument_addHeader mwle_fnSimXMLDocument_addHeader;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_addHeader([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument);
static internal wle_fnSimXMLDocument_addComment mwle_fnSimXMLDocument_addComment;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_addComment([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder comment);
static internal wle_fnSimXMLDocument_readComment mwle_fnSimXMLDocument_readComment;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_readComment([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSimXMLDocument_addText mwle_fnSimXMLDocument_addText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_addText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text);
static internal wle_fnSimXMLDocument_getText mwle_fnSimXMLDocument_getText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_getText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSimXMLDocument_removeText mwle_fnSimXMLDocument_removeText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_removeText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument);
static internal wle_fnSimXMLDocument_addData mwle_fnSimXMLDocument_addData;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_addData([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text);
static internal wle_fnSimXMLDocument_getData mwle_fnSimXMLDocument_getData;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimXMLDocument_getData([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simxmldocument,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnFileObject_writeObject mwle_fnFileObject_writeObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnFileObject_writeObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnFileObject_openForRead mwle_fnFileObject_openForRead;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnFileObject_openForRead([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filename);
static internal wle_fnFileObject_openForWrite mwle_fnFileObject_openForWrite;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnFileObject_openForWrite([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filename);
static internal wle_fnFileObject_openForAppend mwle_fnFileObject_openForAppend;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnFileObject_openForAppend([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filename);
static internal wle_fnFileObject_isEOF mwle_fnFileObject_isEOF;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnFileObject_isEOF([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileobject);
static internal wle_fnFileObject_readLine mwle_fnFileObject_readLine;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnFileObject_readLine([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnFileObject_peekLine mwle_fnFileObject_peekLine;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnFileObject_peekLine([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnFileObject_writeLine mwle_fnFileObject_writeLine;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnFileObject_writeLine([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text);
static internal wle_fnFileObject_close mwle_fnFileObject_close;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnFileObject_close([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileobject);
static internal wle_fn_reloadResource mwle_fn_reloadResource;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_reloadResource([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder path);
static internal wle_fnFileStreamObject_open mwle_fnFileStreamObject_open;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnFileStreamObject_open([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filestreamobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filename, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder openMode);
static internal wle_fnFileStreamObject_close mwle_fnFileStreamObject_close;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnFileStreamObject_close([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filestreamobject);
static internal wle_fnStreamObject_getStatus mwle_fnStreamObject_getStatus;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnStreamObject_getStatus([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder streamobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnStreamObject_isEOS mwle_fnStreamObject_isEOS;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnStreamObject_isEOS([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder streamobject);
static internal wle_fnStreamObject_isEOF mwle_fnStreamObject_isEOF;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnStreamObject_isEOF([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder streamobject);
static internal wle_fnStreamObject_getPosition mwle_fnStreamObject_getPosition;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnStreamObject_getPosition([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder streamobject);
static internal wle_fnStreamObject_setPosition mwle_fnStreamObject_setPosition;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnStreamObject_setPosition([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder streamobject, [In] int newPosition);
static internal wle_fnStreamObject_getStreamSize mwle_fnStreamObject_getStreamSize;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnStreamObject_getStreamSize([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder streamobject);
static internal wle_fnStreamObject_readLine mwle_fnStreamObject_readLine;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnStreamObject_readLine([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder streamobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnStreamObject_writeLine mwle_fnStreamObject_writeLine;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnStreamObject_writeLine([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder streamobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder line);
static internal wle_fnStreamObject_readSTString mwle_fnStreamObject_readSTString;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnStreamObject_readSTString([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder streamobject, [In] bool caseSensitive,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnStreamObject_readString mwle_fnStreamObject_readString;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnStreamObject_readString([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder streamobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnStreamObject_readLongString mwle_fnStreamObject_readLongString;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnStreamObject_readLongString([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder streamobject, [In] int maxLength,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnStreamObject_writeLongString mwle_fnStreamObject_writeLongString;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnStreamObject_writeLongString([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder streamobject, [In] int maxLength, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder xstring);
static internal wle_fnStreamObject_writeString mwle_fnStreamObject_writeString;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnStreamObject_writeString([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder streamobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder xstring, [In] int maxLength);
static internal wle_fnStreamObject_copyFrom mwle_fnStreamObject_copyFrom;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnStreamObject_copyFrom([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder streamobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder other);
static internal wle_fnZipObject_openArchive mwle_fnZipObject_openArchive;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnZipObject_openArchive([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder zipobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filename, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder accessMode);
static internal wle_fnZipObject_closeArchive mwle_fnZipObject_closeArchive;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnZipObject_closeArchive([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder zipobject);
static internal wle_fnZipObject_openFileForRead mwle_fnZipObject_openFileForRead;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnZipObject_openFileForRead([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder zipobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filename,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnZipObject_openFileForWrite mwle_fnZipObject_openFileForWrite;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnZipObject_openFileForWrite([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder zipobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filename,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnZipObject_closeFile mwle_fnZipObject_closeFile;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnZipObject_closeFile([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder zipobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder stream);
static internal wle_fnZipObject_addFile mwle_fnZipObject_addFile;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnZipObject_addFile([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder zipobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filename, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pathInZip, [In] bool replace);
static internal wle_fnZipObject_extractFile mwle_fnZipObject_extractFile;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnZipObject_extractFile([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder zipobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pathInZip, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filename);
static internal wle_fnZipObject_deleteFile mwle_fnZipObject_deleteFile;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnZipObject_deleteFile([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder zipobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pathInZip);
static internal wle_fnZipObject_getFileEntryCount mwle_fnZipObject_getFileEntryCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnZipObject_getFileEntryCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder zipobject);
static internal wle_fnZipObject_getFileEntry mwle_fnZipObject_getFileEntry;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnZipObject_getFileEntry([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder zipobject, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnDecalRoad_regenerate mwle_fnDecalRoad_regenerate;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnDecalRoad_regenerate([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder decalroad);
static internal wle_fnDecalRoad_postApply mwle_fnDecalRoad_postApply;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnDecalRoad_postApply([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder decalroad);
static internal wle_fnMeshRoad_setNodeDepth mwle_fnMeshRoad_setNodeDepth;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMeshRoad_setNodeDepth([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder meshroad, [In] int idx, [In] float meters);
static internal wle_fnMeshRoad_regenerate mwle_fnMeshRoad_regenerate;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMeshRoad_regenerate([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder meshroad);
static internal wle_fnMeshRoad_postApply mwle_fnMeshRoad_postApply;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMeshRoad_postApply([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder meshroad);
static internal wle_fnRiver_regenerate mwle_fnRiver_regenerate;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnRiver_regenerate([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder river);
static internal wle_fnRiver_setMetersPerSegment mwle_fnRiver_setMetersPerSegment;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnRiver_setMetersPerSegment([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder river, [In] float meters);
static internal wle_fnRiver_setBatchSize mwle_fnRiver_setBatchSize;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnRiver_setBatchSize([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder river, [In] float meters);
static internal wle_fnRiver_setNodeDepth mwle_fnRiver_setNodeDepth;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnRiver_setNodeDepth([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder river, [In] int idx, [In] float meters);
static internal wle_fnRiver_setMaxDivisionSize mwle_fnRiver_setMaxDivisionSize;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnRiver_setMaxDivisionSize([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder river, [In] float meters);
static internal wle_fnScatterSky_applyChanges mwle_fnScatterSky_applyChanges;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnScatterSky_applyChanges([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder scattersky);
static internal wle_fnSkyBox_postApply mwle_fnSkyBox_postApply;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSkyBox_postApply([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder skybox);
static internal wle_fnSun_apply mwle_fnSun_apply;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSun_apply([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sun);
static internal wle_fnSun_animate mwle_fnSun_animate;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSun_animate([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sun, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6);
static internal wle_fnGuiRoadEditorCtrl_deleteNode mwle_fnGuiRoadEditorCtrl_deleteNode;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiRoadEditorCtrl_deleteNode([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiroadeditorctrl);
static internal wle_fnGuiRoadEditorCtrl_getMode mwle_fnGuiRoadEditorCtrl_getMode;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiRoadEditorCtrl_getMode([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiroadeditorctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiRoadEditorCtrl_getNodeWidth mwle_fnGuiRoadEditorCtrl_getNodeWidth;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnGuiRoadEditorCtrl_getNodeWidth([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiroadeditorctrl);
static internal wle_fnGuiRoadEditorCtrl_setNodeWidth mwle_fnGuiRoadEditorCtrl_setNodeWidth;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiRoadEditorCtrl_setNodeWidth([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiroadeditorctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiRoadEditorCtrl_getNodePosition mwle_fnGuiRoadEditorCtrl_getNodePosition;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiRoadEditorCtrl_getNodePosition([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiroadeditorctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiRoadEditorCtrl_setNodePosition mwle_fnGuiRoadEditorCtrl_setNodePosition;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiRoadEditorCtrl_setNodePosition([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiroadeditorctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiRoadEditorCtrl_setSelectedRoad mwle_fnGuiRoadEditorCtrl_setSelectedRoad;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiRoadEditorCtrl_setSelectedRoad([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiroadeditorctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiRoadEditorCtrl_getSelectedRoad mwle_fnGuiRoadEditorCtrl_getSelectedRoad;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiRoadEditorCtrl_getSelectedRoad([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiroadeditorctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiRoadEditorCtrl_getSelectedNode mwle_fnGuiRoadEditorCtrl_getSelectedNode;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiRoadEditorCtrl_getSelectedNode([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiroadeditorctrl);
static internal wle_fnGuiRoadEditorCtrl_deleteRoad mwle_fnGuiRoadEditorCtrl_deleteRoad;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiRoadEditorCtrl_deleteRoad([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiroadeditorctrl);
static internal wle_fnForest_saveDataFile mwle_fnForest_saveDataFile;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnForest_saveDataFile([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder forest, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnForest_isDirty mwle_fnForest_isDirty;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnForest_isDirty([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder forest);
static internal wle_fnForest_regenCells mwle_fnForest_regenCells;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnForest_regenCells([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder forest);
static internal wle_fnForest_clear mwle_fnForest_clear;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnForest_clear([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder forest);
static internal wle_fnForestWindEmitter_attachToObject mwle_fnForestWindEmitter_attachToObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnForestWindEmitter_attachToObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder forestwindemitter, [In] uint objectID);
static internal wle_fnForestBrush_containsItemData mwle_fnForestBrush_containsItemData;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnForestBrush_containsItemData([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder forestbrush, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnForestBrushTool_collectElements mwle_fnForestBrushTool_collectElements;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnForestBrushTool_collectElements([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder forestbrushtool);
static internal wle_fnForestEditorCtrl_updateActiveForest mwle_fnForestEditorCtrl_updateActiveForest;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnForestEditorCtrl_updateActiveForest([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder foresteditorctrl);
static internal wle_fnForestEditorCtrl_setActiveTool mwle_fnForestEditorCtrl_setActiveTool;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnForestEditorCtrl_setActiveTool([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder foresteditorctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnForestEditorCtrl_getActiveTool mwle_fnForestEditorCtrl_getActiveTool;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnForestEditorCtrl_getActiveTool([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder foresteditorctrl);
static internal wle_fnForestEditorCtrl_deleteMeshSafe mwle_fnForestEditorCtrl_deleteMeshSafe;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnForestEditorCtrl_deleteMeshSafe([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder foresteditorctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnForestEditorCtrl_isDirty mwle_fnForestEditorCtrl_isDirty;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnForestEditorCtrl_isDirty([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder foresteditorctrl);
static internal wle_fnForestSelectionTool_getSelectionCount mwle_fnForestSelectionTool_getSelectionCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnForestSelectionTool_getSelectionCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder forestselectiontool);
static internal wle_fnForestSelectionTool_deleteSelection mwle_fnForestSelectionTool_deleteSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnForestSelectionTool_deleteSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder forestselectiontool);
static internal wle_fnForestSelectionTool_clearSelection mwle_fnForestSelectionTool_clearSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnForestSelectionTool_clearSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder forestselectiontool);
static internal wle_fnForestSelectionTool_cutSelection mwle_fnForestSelectionTool_cutSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnForestSelectionTool_cutSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder forestselectiontool);
static internal wle_fnForestSelectionTool_copySelection mwle_fnForestSelectionTool_copySelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnForestSelectionTool_copySelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder forestselectiontool);
static internal wle_fnForestSelectionTool_pasteSelection mwle_fnForestSelectionTool_pasteSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnForestSelectionTool_pasteSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder forestselectiontool);
static internal wle_fn_populateFontCacheString mwle_fn_populateFontCacheString;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_populateFontCacheString([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder faceName, [In] int fontSize, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder xstring);
static internal wle_fn_populateFontCacheRange mwle_fn_populateFontCacheRange;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_populateFontCacheRange([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder faceName, [In] int fontSize, [In] uint rangeStart, [In] uint rangeEnd);
static internal wle_fn_dumpFontCacheStatus mwle_fn_dumpFontCacheStatus;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_dumpFontCacheStatus();
static internal wle_fn_writeFontCache mwle_fn_writeFontCache;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_writeFontCache();
static internal wle_fn_populateAllFontCacheString mwle_fn_populateAllFontCacheString;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_populateAllFontCacheString([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder xstring);
static internal wle_fn_populateAllFontCacheRange mwle_fn_populateAllFontCacheRange;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_populateAllFontCacheRange([In] uint rangeStart, [In] uint rangeEnd);
static internal wle_fn_exportCachedFont mwle_fn_exportCachedFont;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_exportCachedFont([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder faceName, [In] int fontSize, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName, [In] int padding, [In] int kerning);
static internal wle_fn_importCachedFont mwle_fn_importCachedFont;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_importCachedFont([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder faceName, [In] int fontSize, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName, [In] int padding, [In] int kerning);
static internal wle_fn_duplicateCachedFont mwle_fn_duplicateCachedFont;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_duplicateCachedFont([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder oldFontName, [In] int oldFontSize, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder newFontName);
static internal wle_fn_getDisplayDeviceList mwle_fn_getDisplayDeviceList;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getDisplayDeviceList([MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_listGFXResources mwle_fn_listGFXResources;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_listGFXResources([In] bool unflaggedOnly);
static internal wle_fn_flagCurrentGFXResources mwle_fn_flagCurrentGFXResources;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_flagCurrentGFXResources();
static internal wle_fn_clearGFXResourceFlags mwle_fn_clearGFXResourceFlags;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_clearGFXResourceFlags();
static internal wle_fn_describeGFXResources mwle_fn_describeGFXResources;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_describeGFXResources([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder resourceTypes, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filePath, [In] bool unflaggedOnly);
static internal wle_fn_describeGFXStateBlocks mwle_fn_describeGFXStateBlocks;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_describeGFXStateBlocks([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filePath);
static internal wle_fn_getPixelShaderVersion mwle_fn_getPixelShaderVersion;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_getPixelShaderVersion();
static internal wle_fn_setPixelShaderVersion mwle_fn_setPixelShaderVersion;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_setPixelShaderVersion([In] float version);
static internal wle_fn_getDisplayDeviceInformation mwle_fn_getDisplayDeviceInformation;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getDisplayDeviceInformation([MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_getBestHDRFormat mwle_fn_getBestHDRFormat;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_getBestHDRFormat();
static internal wle_fn_getDesktopResolution mwle_fn_getDesktopResolution;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getDesktopResolution([MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_addGlobalShaderMacro mwle_fn_addGlobalShaderMacro;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_addGlobalShaderMacro([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder value);
static internal wle_fn_removeGlobalShaderMacro mwle_fn_removeGlobalShaderMacro;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_removeGlobalShaderMacro([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name);
static internal wle_fn_flushTextureCache mwle_fn_flushTextureCache;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_flushTextureCache();
static internal wle_fn_cleanupTexturePool mwle_fn_cleanupTexturePool;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_cleanupTexturePool();
static internal wle_fn_reloadTextures mwle_fn_reloadTextures;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_reloadTextures();
static internal wle_fn_getTextureProfileStats mwle_fn_getTextureProfileStats;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getTextureProfileStats([MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_screenShot mwle_fn_screenShot;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_screenShot([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder file, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder format, [In] uint tileCount, [In] float tileOverlap);
static internal wle_fn_getActiveDDSFiles mwle_fn_getActiveDDSFiles;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_getActiveDDSFiles();
static internal wle_fn_getBitmapInfo mwle_fn_getBitmapInfo;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getBitmapInfo([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filename,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnCubemapData_updateFaces mwle_fnCubemapData_updateFaces;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCubemapData_updateFaces([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder cubemapdata);
static internal wle_fnCubemapData_getFilename mwle_fnCubemapData_getFilename;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCubemapData_getFilename([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder cubemapdata,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnDebugDrawer_drawLine mwle_fnDebugDrawer_drawLine;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnDebugDrawer_drawLine([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder debugdrawer, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder b, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder color);
static internal wle_fnDebugDrawer_drawBox mwle_fnDebugDrawer_drawBox;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnDebugDrawer_drawBox([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder debugdrawer, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder b, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder color);
static internal wle_fnDebugDrawer_setLastTTL mwle_fnDebugDrawer_setLastTTL;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnDebugDrawer_setLastTTL([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder debugdrawer, [In] uint ms);
static internal wle_fnDebugDrawer_setLastZTest mwle_fnDebugDrawer_setLastZTest;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnDebugDrawer_setLastZTest([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder debugdrawer, [In] bool enabled);
static internal wle_fnDebugDrawer_toggleFreeze mwle_fnDebugDrawer_toggleFreeze;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnDebugDrawer_toggleFreeze([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder debugdrawer);
static internal wle_fnDebugDrawer_toggleDrawing mwle_fnDebugDrawer_toggleDrawing;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnDebugDrawer_toggleDrawing([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder debugdrawer);
static internal wle_fn_startVideoCapture mwle_fn_startVideoCapture;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_startVideoCapture([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder canvas, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filename, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder encoder, [In] float framerate, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder resolution);
static internal wle_fn_stopVideoCapture mwle_fn_stopVideoCapture;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_stopVideoCapture();
static internal wle_fn_playJournalToVideo mwle_fn_playJournalToVideo;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_playJournalToVideo([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder journalFile, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder videoFile, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder encoder, [In] float framerate, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder resolution);
static internal wle_fnGuiTSCtrl_unproject mwle_fnGuiTSCtrl_unproject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTSCtrl_unproject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitsctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder screenPosition,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiTSCtrl_project mwle_fnGuiTSCtrl_project;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTSCtrl_project([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitsctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldPosition,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiTSCtrl_getWorldToScreenScale mwle_fnGuiTSCtrl_getWorldToScreenScale;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTSCtrl_getWorldToScreenScale([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitsctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiTSCtrl_calculateViewDistance mwle_fnGuiTSCtrl_calculateViewDistance;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnGuiTSCtrl_calculateViewDistance([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitsctrl, [In] float radius);
static internal wle_fnGuiBitmapButtonCtrl_setBitmap mwle_fnGuiBitmapButtonCtrl_setBitmap;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiBitmapButtonCtrl_setBitmap([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guibitmapbuttonctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder path);
static internal wle_fnGuiButtonBaseCtrl_performClick mwle_fnGuiButtonBaseCtrl_performClick;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiButtonBaseCtrl_performClick([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guibuttonbasectrl);
static internal wle_fnGuiButtonBaseCtrl_setText mwle_fnGuiButtonBaseCtrl_setText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiButtonBaseCtrl_setText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guibuttonbasectrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text);
static internal wle_fnGuiButtonBaseCtrl_setTextID mwle_fnGuiButtonBaseCtrl_setTextID;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiButtonBaseCtrl_setTextID([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guibuttonbasectrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder id);
static internal wle_fnGuiButtonBaseCtrl_getText mwle_fnGuiButtonBaseCtrl_getText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiButtonBaseCtrl_getText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guibuttonbasectrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiButtonBaseCtrl_setStateOn mwle_fnGuiButtonBaseCtrl_setStateOn;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiButtonBaseCtrl_setStateOn([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guibuttonbasectrl, [In] bool isOn);
static internal wle_fnGuiButtonBaseCtrl_resetState mwle_fnGuiButtonBaseCtrl_resetState;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiButtonBaseCtrl_resetState([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guibuttonbasectrl);
static internal wle_fnGuiCheckBoxCtrl_setStateOn mwle_fnGuiCheckBoxCtrl_setStateOn;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCheckBoxCtrl_setStateOn([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicheckboxctrl, [In] bool newState);
static internal wle_fnGuiCheckBoxCtrl_isStateOn mwle_fnGuiCheckBoxCtrl_isStateOn;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiCheckBoxCtrl_isStateOn([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicheckboxctrl);
static internal wle_fnGuiIconButtonCtrl_setBitmap mwle_fnGuiIconButtonCtrl_setBitmap;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiIconButtonCtrl_setBitmap([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiiconbuttonctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder buttonFilename);
static internal wle_fnGuiSwatchButtonCtrl_setColor mwle_fnGuiSwatchButtonCtrl_setColor;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiSwatchButtonCtrl_setColor([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiswatchbuttonctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder newColor);
static internal wle_fnGuiToolboxButtonCtrl_setNormalBitmap mwle_fnGuiToolboxButtonCtrl_setNormalBitmap;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiToolboxButtonCtrl_setNormalBitmap([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitoolboxbuttonctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiToolboxButtonCtrl_setLoweredBitmap mwle_fnGuiToolboxButtonCtrl_setLoweredBitmap;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiToolboxButtonCtrl_setLoweredBitmap([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitoolboxbuttonctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiToolboxButtonCtrl_setHoverBitmap mwle_fnGuiToolboxButtonCtrl_setHoverBitmap;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiToolboxButtonCtrl_setHoverBitmap([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitoolboxbuttonctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiAutoScrollCtrl_reset mwle_fnGuiAutoScrollCtrl_reset;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiAutoScrollCtrl_reset([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiautoscrollctrl);
static internal wle_fnGuiDynamicCtrlArrayControl_refresh mwle_fnGuiDynamicCtrlArrayControl_refresh;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiDynamicCtrlArrayControl_refresh([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guidynamicctrlarraycontrol);
static internal wle_fnGuiFormCtrl_setCaption mwle_fnGuiFormCtrl_setCaption;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiFormCtrl_setCaption([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiformctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder caption);
static internal wle_fnGuiFrameSetCtrl_frameBorder mwle_fnGuiFrameSetCtrl_frameBorder;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiFrameSetCtrl_frameBorder([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiframesetctrl, [In] int index, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder state);
static internal wle_fnGuiFrameSetCtrl_frameMovable mwle_fnGuiFrameSetCtrl_frameMovable;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiFrameSetCtrl_frameMovable([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiframesetctrl, [In] int index, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder state);
static internal wle_fnGuiFrameSetCtrl_frameMinExtent mwle_fnGuiFrameSetCtrl_frameMinExtent;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiFrameSetCtrl_frameMinExtent([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiframesetctrl, [In] int index, [In] int width, [In] int height);
static internal wle_fnGuiFrameSetCtrl_framePadding mwle_fnGuiFrameSetCtrl_framePadding;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiFrameSetCtrl_framePadding([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiframesetctrl, [In] int index, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder padding);
static internal wle_fnGuiFrameSetCtrl_getFramePadding mwle_fnGuiFrameSetCtrl_getFramePadding;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiFrameSetCtrl_getFramePadding([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiframesetctrl, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiFrameSetCtrl_addColumn mwle_fnGuiFrameSetCtrl_addColumn;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiFrameSetCtrl_addColumn([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiframesetctrl);
static internal wle_fnGuiFrameSetCtrl_addRow mwle_fnGuiFrameSetCtrl_addRow;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiFrameSetCtrl_addRow([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiframesetctrl);
static internal wle_fnGuiFrameSetCtrl_removeColumn mwle_fnGuiFrameSetCtrl_removeColumn;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiFrameSetCtrl_removeColumn([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiframesetctrl);
static internal wle_fnGuiFrameSetCtrl_removeRow mwle_fnGuiFrameSetCtrl_removeRow;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiFrameSetCtrl_removeRow([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiframesetctrl);
static internal wle_fnGuiFrameSetCtrl_getColumnCount mwle_fnGuiFrameSetCtrl_getColumnCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiFrameSetCtrl_getColumnCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiframesetctrl);
static internal wle_fnGuiFrameSetCtrl_getRowCount mwle_fnGuiFrameSetCtrl_getRowCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiFrameSetCtrl_getRowCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiframesetctrl);
static internal wle_fnGuiFrameSetCtrl_getColumnOffset mwle_fnGuiFrameSetCtrl_getColumnOffset;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiFrameSetCtrl_getColumnOffset([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiframesetctrl, [In] int index);
static internal wle_fnGuiFrameSetCtrl_getRowOffset mwle_fnGuiFrameSetCtrl_getRowOffset;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiFrameSetCtrl_getRowOffset([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiframesetctrl, [In] int index);
static internal wle_fnGuiFrameSetCtrl_setColumnOffset mwle_fnGuiFrameSetCtrl_setColumnOffset;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiFrameSetCtrl_setColumnOffset([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiframesetctrl, [In] int index, [In] int offset);
static internal wle_fnGuiFrameSetCtrl_setRowOffset mwle_fnGuiFrameSetCtrl_setRowOffset;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiFrameSetCtrl_setRowOffset([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiframesetctrl, [In] int index, [In] int offset);
static internal wle_fnGuiFrameSetCtrl_updateSizes mwle_fnGuiFrameSetCtrl_updateSizes;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiFrameSetCtrl_updateSizes([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiframesetctrl);
static internal wle_fnGuiPaneControl_setCollapsed mwle_fnGuiPaneControl_setCollapsed;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPaneControl_setCollapsed([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipanecontrol, [In] bool collapse);
static internal wle_fnGuiRolloutCtrl_isExpanded mwle_fnGuiRolloutCtrl_isExpanded;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiRolloutCtrl_isExpanded([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guirolloutctrl);
static internal wle_fnGuiRolloutCtrl_collapse mwle_fnGuiRolloutCtrl_collapse;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiRolloutCtrl_collapse([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guirolloutctrl);
static internal wle_fnGuiRolloutCtrl_expand mwle_fnGuiRolloutCtrl_expand;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiRolloutCtrl_expand([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guirolloutctrl);
static internal wle_fnGuiRolloutCtrl_toggleCollapse mwle_fnGuiRolloutCtrl_toggleCollapse;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiRolloutCtrl_toggleCollapse([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guirolloutctrl);
static internal wle_fnGuiRolloutCtrl_toggleExpanded mwle_fnGuiRolloutCtrl_toggleExpanded;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiRolloutCtrl_toggleExpanded([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guirolloutctrl, [In] bool instantly);
static internal wle_fnGuiRolloutCtrl_instantCollapse mwle_fnGuiRolloutCtrl_instantCollapse;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiRolloutCtrl_instantCollapse([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guirolloutctrl);
static internal wle_fnGuiRolloutCtrl_instantExpand mwle_fnGuiRolloutCtrl_instantExpand;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiRolloutCtrl_instantExpand([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guirolloutctrl);
static internal wle_fnGuiRolloutCtrl_sizeToContents mwle_fnGuiRolloutCtrl_sizeToContents;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiRolloutCtrl_sizeToContents([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guirolloutctrl);
static internal wle_fnGuiScrollCtrl_scrollToTop mwle_fnGuiScrollCtrl_scrollToTop;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiScrollCtrl_scrollToTop([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiscrollctrl);
static internal wle_fnGuiScrollCtrl_scrollToBottom mwle_fnGuiScrollCtrl_scrollToBottom;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiScrollCtrl_scrollToBottom([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiscrollctrl);
static internal wle_fnGuiScrollCtrl_setScrollPosition mwle_fnGuiScrollCtrl_setScrollPosition;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiScrollCtrl_setScrollPosition([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiscrollctrl, [In] int x, [In] int y);
static internal wle_fnGuiScrollCtrl_scrollToObject mwle_fnGuiScrollCtrl_scrollToObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiScrollCtrl_scrollToObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiscrollctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder control);
static internal wle_fnGuiScrollCtrl_getScrollPosition mwle_fnGuiScrollCtrl_getScrollPosition;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiScrollCtrl_getScrollPosition([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiscrollctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiScrollCtrl_getScrollPositionX mwle_fnGuiScrollCtrl_getScrollPositionX;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiScrollCtrl_getScrollPositionX([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiscrollctrl);
static internal wle_fnGuiScrollCtrl_getScrollPositionY mwle_fnGuiScrollCtrl_getScrollPositionY;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiScrollCtrl_getScrollPositionY([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiscrollctrl);
static internal wle_fnGuiScrollCtrl_computeSizes mwle_fnGuiScrollCtrl_computeSizes;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiScrollCtrl_computeSizes([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiscrollctrl);
static internal wle_fnGuiStackControl_isFrozen mwle_fnGuiStackControl_isFrozen;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiStackControl_isFrozen([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guistackcontrol);
static internal wle_fnGuiStackControl_freeze mwle_fnGuiStackControl_freeze;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiStackControl_freeze([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guistackcontrol, [In] bool freeze);
static internal wle_fnGuiStackControl_updateStack mwle_fnGuiStackControl_updateStack;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiStackControl_updateStack([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guistackcontrol);
static internal wle_fnGuiTabBookCtrl_addPage mwle_fnGuiTabBookCtrl_addPage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTabBookCtrl_addPage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitabbookctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder title);
static internal wle_fnGuiTabBookCtrl_selectPage mwle_fnGuiTabBookCtrl_selectPage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTabBookCtrl_selectPage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitabbookctrl, [In] int index);
static internal wle_fnGuiTabBookCtrl_getSelectedPage mwle_fnGuiTabBookCtrl_getSelectedPage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTabBookCtrl_getSelectedPage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitabbookctrl);
static internal wle_fnGuiBitmapCtrl_setBitmap mwle_fnGuiBitmapCtrl_setBitmap;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiBitmapCtrl_setBitmap([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guibitmapctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiBitmapCtrl_setValue mwle_fnGuiBitmapCtrl_setValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiBitmapCtrl_setValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guibitmapctrl, [In] int x, [In] int y);
static internal wle_fnGuiColorPickerCtrl_getSelectorPos mwle_fnGuiColorPickerCtrl_getSelectorPos;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiColorPickerCtrl_getSelectorPos([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicolorpickerctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiColorPickerCtrl_setSelectorPos mwle_fnGuiColorPickerCtrl_setSelectorPos;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiColorPickerCtrl_setSelectorPos([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicolorpickerctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiColorPickerCtrl_updateColor mwle_fnGuiColorPickerCtrl_updateColor;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiColorPickerCtrl_updateColor([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicolorpickerctrl);
static internal wle_fnGuiDirectoryFileListCtrl_setFilter mwle_fnGuiDirectoryFileListCtrl_setFilter;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiDirectoryFileListCtrl_setFilter([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guidirectoryfilelistctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filter);
static internal wle_fnGuiDirectoryFileListCtrl_reload mwle_fnGuiDirectoryFileListCtrl_reload;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiDirectoryFileListCtrl_reload([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guidirectoryfilelistctrl);
static internal wle_fnGuiDirectoryFileListCtrl_setPath mwle_fnGuiDirectoryFileListCtrl_setPath;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiDirectoryFileListCtrl_setPath([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guidirectoryfilelistctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder path, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filter);
static internal wle_fnGuiDirectoryFileListCtrl_getSelectedFiles mwle_fnGuiDirectoryFileListCtrl_getSelectedFiles;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiDirectoryFileListCtrl_getSelectedFiles([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guidirectoryfilelistctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiDirectoryFileListCtrl_getSelectedFile mwle_fnGuiDirectoryFileListCtrl_getSelectedFile;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiDirectoryFileListCtrl_getSelectedFile([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guidirectoryfilelistctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiFileTreeCtrl_getSelectedPath mwle_fnGuiFileTreeCtrl_getSelectedPath;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiFileTreeCtrl_getSelectedPath([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guifiletreectrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiFileTreeCtrl_setSelectedPath mwle_fnGuiFileTreeCtrl_setSelectedPath;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiFileTreeCtrl_setSelectedPath([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guifiletreectrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiFileTreeCtrl_reload mwle_fnGuiFileTreeCtrl_reload;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiFileTreeCtrl_reload([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guifiletreectrl);
static internal wle_fnGuiGameListMenuCtrl_addRow mwle_fnGuiGameListMenuCtrl_addRow;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiGameListMenuCtrl_addRow([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guigamelistmenuctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder label, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder callback, [In] int icon, [In] int yPad, [In] bool useHighlightIcon, [In] bool enabled);
static internal wle_fnGuiGameListMenuCtrl_isRowEnabled mwle_fnGuiGameListMenuCtrl_isRowEnabled;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiGameListMenuCtrl_isRowEnabled([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guigamelistmenuctrl, [In] int row);
static internal wle_fnGuiGameListMenuCtrl_setRowEnabled mwle_fnGuiGameListMenuCtrl_setRowEnabled;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiGameListMenuCtrl_setRowEnabled([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guigamelistmenuctrl, [In] int row, [In] bool enabled);
static internal wle_fnGuiGameListMenuCtrl_activateRow mwle_fnGuiGameListMenuCtrl_activateRow;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiGameListMenuCtrl_activateRow([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guigamelistmenuctrl);
static internal wle_fnGuiGameListMenuCtrl_getRowCount mwle_fnGuiGameListMenuCtrl_getRowCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiGameListMenuCtrl_getRowCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guigamelistmenuctrl);
static internal wle_fnGuiGameListMenuCtrl_getRowLabel mwle_fnGuiGameListMenuCtrl_getRowLabel;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiGameListMenuCtrl_getRowLabel([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guigamelistmenuctrl, [In] int row,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiGameListMenuCtrl_setRowLabel mwle_fnGuiGameListMenuCtrl_setRowLabel;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiGameListMenuCtrl_setRowLabel([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guigamelistmenuctrl, [In] int row, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder label);
static internal wle_fnGuiGameListMenuCtrl_setSelected mwle_fnGuiGameListMenuCtrl_setSelected;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiGameListMenuCtrl_setSelected([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guigamelistmenuctrl, [In] int row);
static internal wle_fnGuiGameListMenuCtrl_getSelectedRow mwle_fnGuiGameListMenuCtrl_getSelectedRow;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiGameListMenuCtrl_getSelectedRow([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guigamelistmenuctrl);
static internal wle_fnGuiGameListOptionsCtrl_addRow mwle_fnGuiGameListOptionsCtrl_addRow;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiGameListOptionsCtrl_addRow([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guigamelistoptionsctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder label, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder options, [In] bool wrapOptions, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder callback, [In] int icon, [In] int yPad, [In] bool enabled);
static internal wle_fnGuiGameListOptionsCtrl_getCurrentOption mwle_fnGuiGameListOptionsCtrl_getCurrentOption;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiGameListOptionsCtrl_getCurrentOption([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guigamelistoptionsctrl, [In] int row,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiGameListOptionsCtrl_selectOption mwle_fnGuiGameListOptionsCtrl_selectOption;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiGameListOptionsCtrl_selectOption([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guigamelistoptionsctrl, [In] int row, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder option);
static internal wle_fnGuiGameListOptionsCtrl_setOptions mwle_fnGuiGameListOptionsCtrl_setOptions;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiGameListOptionsCtrl_setOptions([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guigamelistoptionsctrl, [In] int row, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder optionsList);
static internal wle_fnGuiGradientCtrl_getColorCount mwle_fnGuiGradientCtrl_getColorCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiGradientCtrl_getColorCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guigradientctrl);
static internal wle_fnGuiGradientCtrl_getColor mwle_fnGuiGradientCtrl_getColor;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiGradientCtrl_getColor([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guigradientctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiListBoxCtrl_setMultipleSelection mwle_fnGuiListBoxCtrl_setMultipleSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiListBoxCtrl_setMultipleSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl, [In] bool allowMultSelections);
static internal wle_fnGuiListBoxCtrl_clearItems mwle_fnGuiListBoxCtrl_clearItems;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiListBoxCtrl_clearItems([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl);
static internal wle_fnGuiListBoxCtrl_clearSelection mwle_fnGuiListBoxCtrl_clearSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiListBoxCtrl_clearSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl);
static internal wle_fnGuiListBoxCtrl_setSelected mwle_fnGuiListBoxCtrl_setSelected;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiListBoxCtrl_setSelected([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl, [In] int index, [In] bool setSelected);
static internal wle_fnGuiListBoxCtrl_getItemCount mwle_fnGuiListBoxCtrl_getItemCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiListBoxCtrl_getItemCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl);
static internal wle_fnGuiListBoxCtrl_getSelCount mwle_fnGuiListBoxCtrl_getSelCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiListBoxCtrl_getSelCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl);
static internal wle_fnGuiListBoxCtrl_getSelectedItem mwle_fnGuiListBoxCtrl_getSelectedItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiListBoxCtrl_getSelectedItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl);
static internal wle_fnGuiListBoxCtrl_getSelectedItems mwle_fnGuiListBoxCtrl_getSelectedItems;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiListBoxCtrl_getSelectedItems([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiListBoxCtrl_findItemText mwle_fnGuiListBoxCtrl_findItemText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiListBoxCtrl_findItemText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder findText, [In] bool bCaseSensitive);
static internal wle_fnGuiListBoxCtrl_setCurSel mwle_fnGuiListBoxCtrl_setCurSel;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiListBoxCtrl_setCurSel([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl, [In] int indexId);
static internal wle_fnGuiListBoxCtrl_setCurSelRange mwle_fnGuiListBoxCtrl_setCurSelRange;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiListBoxCtrl_setCurSelRange([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl, [In] int indexStart, [In] int indexStop);
static internal wle_fnGuiListBoxCtrl_addItem mwle_fnGuiListBoxCtrl_addItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiListBoxCtrl_addItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder newItem, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder color);
static internal wle_fnGuiListBoxCtrl_setItemColor mwle_fnGuiListBoxCtrl_setItemColor;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiListBoxCtrl_setItemColor([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl, [In] int index, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder color);
static internal wle_fnGuiListBoxCtrl_clearItemColor mwle_fnGuiListBoxCtrl_clearItemColor;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiListBoxCtrl_clearItemColor([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl, [In] int index);
static internal wle_fnGuiListBoxCtrl_insertItem mwle_fnGuiListBoxCtrl_insertItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiListBoxCtrl_insertItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text, [In] int index);
static internal wle_fnGuiListBoxCtrl_deleteItem mwle_fnGuiListBoxCtrl_deleteItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiListBoxCtrl_deleteItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl, [In] int itemIndex);
static internal wle_fnGuiListBoxCtrl_getItemText mwle_fnGuiListBoxCtrl_getItemText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiListBoxCtrl_getItemText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiListBoxCtrl_getItemObject mwle_fnGuiListBoxCtrl_getItemObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiListBoxCtrl_getItemObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiListBoxCtrl_setItemText mwle_fnGuiListBoxCtrl_setItemText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiListBoxCtrl_setItemText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl, [In] int index, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder newtext);
static internal wle_fnGuiListBoxCtrl_setItemTooltip mwle_fnGuiListBoxCtrl_setItemTooltip;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiListBoxCtrl_setItemTooltip([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl, [In] int index, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text);
static internal wle_fnGuiListBoxCtrl_getLastClickItem mwle_fnGuiListBoxCtrl_getLastClickItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiListBoxCtrl_getLastClickItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl);
static internal wle_fnGuiListBoxCtrl_doMirror mwle_fnGuiListBoxCtrl_doMirror;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiListBoxCtrl_doMirror([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl);
static internal wle_fnGuiListBoxCtrl_addFilteredItem mwle_fnGuiListBoxCtrl_addFilteredItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiListBoxCtrl_addFilteredItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder newItem);
static internal wle_fnGuiListBoxCtrl_removeFilteredItem mwle_fnGuiListBoxCtrl_removeFilteredItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiListBoxCtrl_removeFilteredItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guilistboxctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder itemName);
static internal wle_fnGuiMaterialCtrl_setMaterial mwle_fnGuiMaterialCtrl_setMaterial;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiMaterialCtrl_setMaterial([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimaterialctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fn_StripMLControlChars mwle_fn_StripMLControlChars;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_StripMLControlChars([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder inString,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiMLTextCtrl_setText mwle_fnGuiMLTextCtrl_setText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMLTextCtrl_setText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimltextctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text);
static internal wle_fnGuiMLTextCtrl_getText mwle_fnGuiMLTextCtrl_getText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMLTextCtrl_getText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimltextctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiMLTextCtrl_addText mwle_fnGuiMLTextCtrl_addText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMLTextCtrl_addText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimltextctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text, [In] bool reformat);
static internal wle_fnGuiMLTextCtrl_setCursorPosition mwle_fnGuiMLTextCtrl_setCursorPosition;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiMLTextCtrl_setCursorPosition([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimltextctrl, [In] int newPos);
static internal wle_fnGuiMLTextCtrl_scrollToTag mwle_fnGuiMLTextCtrl_scrollToTag;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMLTextCtrl_scrollToTag([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimltextctrl, [In] int tagID);
static internal wle_fnGuiMLTextCtrl_scrollToTop mwle_fnGuiMLTextCtrl_scrollToTop;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMLTextCtrl_scrollToTop([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimltextctrl, [In] int param1, [In] int param2);
static internal wle_fnGuiMLTextCtrl_scrollToBottom mwle_fnGuiMLTextCtrl_scrollToBottom;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMLTextCtrl_scrollToBottom([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimltextctrl);
static internal wle_fnGuiMLTextCtrl_forceReflow mwle_fnGuiMLTextCtrl_forceReflow;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMLTextCtrl_forceReflow([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimltextctrl);
static internal wle_fnGuiMLTextCtrl_setAlpha mwle_fnGuiMLTextCtrl_setAlpha;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMLTextCtrl_setAlpha([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimltextctrl, [In] float alphaVal);
static internal wle_fnGuiPopUpMenuCtrl_add mwle_fnGuiPopUpMenuCtrl_add;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrl_add([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4);
static internal wle_fnGuiPopUpMenuCtrl_addScheme mwle_fnGuiPopUpMenuCtrl_addScheme;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrl_addScheme([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5);
static internal wle_fnGuiPopUpMenuCtrl_getText mwle_fnGuiPopUpMenuCtrl_getText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrl_getText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiPopUpMenuCtrl_clear mwle_fnGuiPopUpMenuCtrl_clear;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrl_clear([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrl);
static internal wle_fnGuiPopUpMenuCtrl_sort mwle_fnGuiPopUpMenuCtrl_sort;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrl_sort([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrl);
static internal wle_fnGuiPopUpMenuCtrl_sortID mwle_fnGuiPopUpMenuCtrl_sortID;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrl_sortID([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrl);
static internal wle_fnGuiPopUpMenuCtrl_forceOnAction mwle_fnGuiPopUpMenuCtrl_forceOnAction;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrl_forceOnAction([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrl);
static internal wle_fnGuiPopUpMenuCtrl_forceClose mwle_fnGuiPopUpMenuCtrl_forceClose;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrl_forceClose([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrl);
static internal wle_fnGuiPopUpMenuCtrl_getSelected mwle_fnGuiPopUpMenuCtrl_getSelected;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiPopUpMenuCtrl_getSelected([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrl);
static internal wle_fnGuiPopUpMenuCtrl_setSelected mwle_fnGuiPopUpMenuCtrl_setSelected;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrl_setSelected([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiPopUpMenuCtrl_setFirstSelected mwle_fnGuiPopUpMenuCtrl_setFirstSelected;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrl_setFirstSelected([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiPopUpMenuCtrl_setNoneSelected mwle_fnGuiPopUpMenuCtrl_setNoneSelected;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrl_setNoneSelected([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrl);
static internal wle_fnGuiPopUpMenuCtrl_getTextById mwle_fnGuiPopUpMenuCtrl_getTextById;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrl_getTextById([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiPopUpMenuCtrl_changeTextById mwle_fnGuiPopUpMenuCtrl_changeTextById;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrl_changeTextById([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiPopUpMenuCtrl_setEnumContent mwle_fnGuiPopUpMenuCtrl_setEnumContent;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrl_setEnumContent([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiPopUpMenuCtrl_findText mwle_fnGuiPopUpMenuCtrl_findText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiPopUpMenuCtrl_findText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiPopUpMenuCtrl_size mwle_fnGuiPopUpMenuCtrl_size;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiPopUpMenuCtrl_size([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrl);
static internal wle_fnGuiPopUpMenuCtrl_replaceText mwle_fnGuiPopUpMenuCtrl_replaceText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrl_replaceText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiPopUpMenuCtrl_clearEntry mwle_fnGuiPopUpMenuCtrl_clearEntry;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrl_clearEntry([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiPopUpMenuCtrlEx_add mwle_fnGuiPopUpMenuCtrlEx_add;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrlEx_add([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrlex, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4);
static internal wle_fnGuiPopUpMenuCtrlEx_setSelected mwle_fnGuiPopUpMenuCtrlEx_setSelected;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrlEx_setSelected([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrlex, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiPopUpMenuCtrlEx_setFirstSelected mwle_fnGuiPopUpMenuCtrlEx_setFirstSelected;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrlEx_setFirstSelected([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrlex, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiPopUpMenuCtrlEx_getColorById mwle_fnGuiPopUpMenuCtrlEx_getColorById;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrlEx_getColorById([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrlex, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiPopUpMenuCtrlEx_setEnumContent mwle_fnGuiPopUpMenuCtrlEx_setEnumContent;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrlEx_setEnumContent([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrlex, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiPopUpMenuCtrlEx_findText mwle_fnGuiPopUpMenuCtrlEx_findText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiPopUpMenuCtrlEx_findText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrlex, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiPopUpMenuCtrlEx_size mwle_fnGuiPopUpMenuCtrlEx_size;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiPopUpMenuCtrlEx_size([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrlex);
static internal wle_fnGuiPopUpMenuCtrlEx_replaceText mwle_fnGuiPopUpMenuCtrlEx_replaceText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrlEx_replaceText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrlex, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiPopUpMenuCtrlEx_clearEntry mwle_fnGuiPopUpMenuCtrlEx_clearEntry;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrlEx_clearEntry([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrlex, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiPopUpMenuCtrlEx_addCategory mwle_fnGuiPopUpMenuCtrlEx_addCategory;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrlEx_addCategory([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrlex, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text);
static internal wle_fnGuiPopUpMenuCtrlEx_addScheme mwle_fnGuiPopUpMenuCtrlEx_addScheme;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrlEx_addScheme([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrlex, [In] int id, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fontColor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fontColorHL, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fontColorSEL);
static internal wle_fnGuiPopUpMenuCtrlEx_setText mwle_fnGuiPopUpMenuCtrlEx_setText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrlEx_setText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrlex, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text);
static internal wle_fnGuiPopUpMenuCtrlEx_getText mwle_fnGuiPopUpMenuCtrlEx_getText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrlEx_getText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrlex,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiPopUpMenuCtrlEx_clear mwle_fnGuiPopUpMenuCtrlEx_clear;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrlEx_clear([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrlex);
static internal wle_fnGuiPopUpMenuCtrlEx_sort mwle_fnGuiPopUpMenuCtrlEx_sort;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrlEx_sort([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrlex);
static internal wle_fnGuiPopUpMenuCtrlEx_sortID mwle_fnGuiPopUpMenuCtrlEx_sortID;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrlEx_sortID([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrlex);
static internal wle_fnGuiPopUpMenuCtrlEx_forceOnAction mwle_fnGuiPopUpMenuCtrlEx_forceOnAction;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrlEx_forceOnAction([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrlex);
static internal wle_fnGuiPopUpMenuCtrlEx_forceClose mwle_fnGuiPopUpMenuCtrlEx_forceClose;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrlEx_forceClose([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrlex);
static internal wle_fnGuiPopUpMenuCtrlEx_getSelected mwle_fnGuiPopUpMenuCtrlEx_getSelected;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiPopUpMenuCtrlEx_getSelected([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrlex);
static internal wle_fnGuiPopUpMenuCtrlEx_setNoneSelected mwle_fnGuiPopUpMenuCtrlEx_setNoneSelected;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrlEx_setNoneSelected([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrlex, [In] int param);
static internal wle_fnGuiPopUpMenuCtrlEx_getTextById mwle_fnGuiPopUpMenuCtrlEx_getTextById;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiPopUpMenuCtrlEx_getTextById([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guipopupmenuctrlex, [In] int id,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiSliderCtrl_getValue mwle_fnGuiSliderCtrl_getValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnGuiSliderCtrl_getValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guisliderctrl);
static internal wle_fnGuiSliderCtrl_setValue mwle_fnGuiSliderCtrl_setValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiSliderCtrl_setValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guisliderctrl, [In] float pos, [In] bool doCallback);
static internal wle_fnGuiSliderCtrl_isThumbBeingDragged mwle_fnGuiSliderCtrl_isThumbBeingDragged;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiSliderCtrl_isThumbBeingDragged([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guisliderctrl);
static internal wle_fnGuiTabPageCtrl_select mwle_fnGuiTabPageCtrl_select;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTabPageCtrl_select([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitabpagectrl);
static internal wle_fnGuiTextCtrl_setText mwle_fnGuiTextCtrl_setText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTextCtrl_setText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text);
static internal wle_fnGuiTextCtrl_setTextID mwle_fnGuiTextCtrl_setTextID;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTextCtrl_setTextID([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder textID);
static internal wle_fnGuiTextEditCtrl_getText mwle_fnGuiTextEditCtrl_getText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTextEditCtrl_getText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitexteditctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiTextEditCtrl_setText mwle_fnGuiTextEditCtrl_setText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTextEditCtrl_setText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitexteditctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text);
static internal wle_fnGuiTextEditCtrl_getCursorPos mwle_fnGuiTextEditCtrl_getCursorPos;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTextEditCtrl_getCursorPos([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitexteditctrl);
static internal wle_fnGuiTextEditCtrl_setCursorPos mwle_fnGuiTextEditCtrl_setCursorPos;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTextEditCtrl_setCursorPos([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitexteditctrl, [In] int position);
static internal wle_fnGuiTextEditCtrl_isAllTextSelected mwle_fnGuiTextEditCtrl_isAllTextSelected;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTextEditCtrl_isAllTextSelected([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitexteditctrl);
static internal wle_fnGuiTextEditCtrl_selectAllText mwle_fnGuiTextEditCtrl_selectAllText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTextEditCtrl_selectAllText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitexteditctrl);
static internal wle_fnGuiTextEditCtrl_clearSelectedText mwle_fnGuiTextEditCtrl_clearSelectedText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTextEditCtrl_clearSelectedText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitexteditctrl);
static internal wle_fnGuiTextEditCtrl_forceValidateText mwle_fnGuiTextEditCtrl_forceValidateText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTextEditCtrl_forceValidateText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitexteditctrl);
static internal wle_fnGuiTextListCtrl_getSelectedId mwle_fnGuiTextListCtrl_getSelectedId;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTextListCtrl_getSelectedId([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextlistctrl);
static internal wle_fnGuiTextListCtrl_setSelectedById mwle_fnGuiTextListCtrl_setSelectedById;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTextListCtrl_setSelectedById([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextlistctrl, [In] int id);
static internal wle_fnGuiTextListCtrl_setSelectedRow mwle_fnGuiTextListCtrl_setSelectedRow;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTextListCtrl_setSelectedRow([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextlistctrl, [In] int rowNum);
static internal wle_fnGuiTextListCtrl_getSelectedRow mwle_fnGuiTextListCtrl_getSelectedRow;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTextListCtrl_getSelectedRow([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextlistctrl);
static internal wle_fnGuiTextListCtrl_clearSelection mwle_fnGuiTextListCtrl_clearSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTextListCtrl_clearSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextlistctrl);
static internal wle_fnGuiTextListCtrl_addRow mwle_fnGuiTextListCtrl_addRow;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTextListCtrl_addRow([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextlistctrl, [In] int id, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text, [In] int index);
static internal wle_fnGuiTextListCtrl_setRowById mwle_fnGuiTextListCtrl_setRowById;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTextListCtrl_setRowById([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextlistctrl, [In] int id, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text);
static internal wle_fnGuiTextListCtrl_sort mwle_fnGuiTextListCtrl_sort;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTextListCtrl_sort([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextlistctrl, [In] int columnId, [In] bool increasing);
static internal wle_fnGuiTextListCtrl_sortNumerical mwle_fnGuiTextListCtrl_sortNumerical;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTextListCtrl_sortNumerical([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextlistctrl, [In] int columnID, [In] bool increasing);
static internal wle_fnGuiTextListCtrl_clear mwle_fnGuiTextListCtrl_clear;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTextListCtrl_clear([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextlistctrl);
static internal wle_fnGuiTextListCtrl_rowCount mwle_fnGuiTextListCtrl_rowCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTextListCtrl_rowCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextlistctrl);
static internal wle_fnGuiTextListCtrl_getRowId mwle_fnGuiTextListCtrl_getRowId;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTextListCtrl_getRowId([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextlistctrl, [In] int index);
static internal wle_fnGuiTextListCtrl_getRowTextById mwle_fnGuiTextListCtrl_getRowTextById;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTextListCtrl_getRowTextById([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextlistctrl, [In] int id,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiTextListCtrl_getRowNumById mwle_fnGuiTextListCtrl_getRowNumById;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTextListCtrl_getRowNumById([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextlistctrl, [In] int id);
static internal wle_fnGuiTextListCtrl_getRowText mwle_fnGuiTextListCtrl_getRowText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTextListCtrl_getRowText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextlistctrl, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiTextListCtrl_removeRowById mwle_fnGuiTextListCtrl_removeRowById;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTextListCtrl_removeRowById([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextlistctrl, [In] int id);
static internal wle_fnGuiTextListCtrl_removeRow mwle_fnGuiTextListCtrl_removeRow;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTextListCtrl_removeRow([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextlistctrl, [In] int index);
static internal wle_fnGuiTextListCtrl_scrollVisible mwle_fnGuiTextListCtrl_scrollVisible;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTextListCtrl_scrollVisible([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextlistctrl, [In] int rowNum);
static internal wle_fnGuiTextListCtrl_findTextIndex mwle_fnGuiTextListCtrl_findTextIndex;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTextListCtrl_findTextIndex([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextlistctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder needle);
static internal wle_fnGuiTextListCtrl_setRowActive mwle_fnGuiTextListCtrl_setRowActive;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTextListCtrl_setRowActive([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextlistctrl, [In] int rowNum, [In] bool active);
static internal wle_fnGuiTextListCtrl_isRowActive mwle_fnGuiTextListCtrl_isRowActive;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTextListCtrl_isRowActive([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitextlistctrl, [In] int rowNum);
static internal wle_fnGuiTreeViewCtrl_addChildSelectionByValue mwle_fnGuiTreeViewCtrl_addChildSelectionByValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_addChildSelectionByValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiTreeViewCtrl_removeSelection mwle_fnGuiTreeViewCtrl_removeSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_removeSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiTreeViewCtrl_removeChildSelectionByValue mwle_fnGuiTreeViewCtrl_removeChildSelectionByValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_removeChildSelectionByValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiTreeViewCtrl_selectItem mwle_fnGuiTreeViewCtrl_selectItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_selectItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiTreeViewCtrl_expandItem mwle_fnGuiTreeViewCtrl_expandItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_expandItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiTreeViewCtrl_markItem mwle_fnGuiTreeViewCtrl_markItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_markItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiTreeViewCtrl_scrollVisible mwle_fnGuiTreeViewCtrl_scrollVisible;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_scrollVisible([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiTreeViewCtrl_buildIconTable mwle_fnGuiTreeViewCtrl_buildIconTable;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_buildIconTable([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiTreeViewCtrl_open mwle_fnGuiTreeViewCtrl_open;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_open([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiTreeViewCtrl_setItemTooltip mwle_fnGuiTreeViewCtrl_setItemTooltip;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_setItemTooltip([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiTreeViewCtrl_setItemImages mwle_fnGuiTreeViewCtrl_setItemImages;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_setItemImages([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4);
static internal wle_fnGuiTreeViewCtrl_isParentItem mwle_fnGuiTreeViewCtrl_isParentItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_isParentItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiTreeViewCtrl_getItemText mwle_fnGuiTreeViewCtrl_getItemText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_getItemText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiTreeViewCtrl_getItemValue mwle_fnGuiTreeViewCtrl_getItemValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_getItemValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiTreeViewCtrl_editItem mwle_fnGuiTreeViewCtrl_editItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_editItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4);
static internal wle_fnGuiTreeViewCtrl_removeItem mwle_fnGuiTreeViewCtrl_removeItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_removeItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiTreeViewCtrl_removeAllChildren mwle_fnGuiTreeViewCtrl_removeAllChildren;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_removeAllChildren([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiTreeViewCtrl_clear mwle_fnGuiTreeViewCtrl_clear;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_clear([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl);
static internal wle_fnGuiTreeViewCtrl_getFirstRootItem mwle_fnGuiTreeViewCtrl_getFirstRootItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_getFirstRootItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl);
static internal wle_fnGuiTreeViewCtrl_getChild mwle_fnGuiTreeViewCtrl_getChild;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_getChild([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiTreeViewCtrl_buildVisibleTree mwle_fnGuiTreeViewCtrl_buildVisibleTree;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_buildVisibleTree([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiTreeViewCtrl_getParent mwle_fnGuiTreeViewCtrl_getParent;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_getParent([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiTreeViewCtrl_getNextSibling mwle_fnGuiTreeViewCtrl_getNextSibling;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_getNextSibling([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiTreeViewCtrl_getPrevSibling mwle_fnGuiTreeViewCtrl_getPrevSibling;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_getPrevSibling([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiTreeViewCtrl_getItemCount mwle_fnGuiTreeViewCtrl_getItemCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_getItemCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl);
static internal wle_fnGuiTreeViewCtrl_getSelectedItem mwle_fnGuiTreeViewCtrl_getSelectedItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_getSelectedItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiTreeViewCtrl_getSelectedObject mwle_fnGuiTreeViewCtrl_getSelectedObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_getSelectedObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiTreeViewCtrl_getSelectedObjectList mwle_fnGuiTreeViewCtrl_getSelectedObjectList;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_getSelectedObjectList([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiTreeViewCtrl_moveItemUp mwle_fnGuiTreeViewCtrl_moveItemUp;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_moveItemUp([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiTreeViewCtrl_getSelectedItemsCount mwle_fnGuiTreeViewCtrl_getSelectedItemsCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_getSelectedItemsCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl);
static internal wle_fnGuiTreeViewCtrl_moveItemDown mwle_fnGuiTreeViewCtrl_moveItemDown;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_moveItemDown([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiTreeViewCtrl_getTextToRoot mwle_fnGuiTreeViewCtrl_getTextToRoot;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_getTextToRoot([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiTreeViewCtrl_getSelectedItemList mwle_fnGuiTreeViewCtrl_getSelectedItemList;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_getSelectedItemList([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiTreeViewCtrl_findItemByObjectId mwle_fnGuiTreeViewCtrl_findItemByObjectId;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_findItemByObjectId([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiTreeViewCtrl_scrollVisibleByObjectId mwle_fnGuiTreeViewCtrl_scrollVisibleByObjectId;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_scrollVisibleByObjectId([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiTreeViewCtrl_sort mwle_fnGuiTreeViewCtrl_sort;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_sort([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5);
static internal wle_fnGuiTreeViewCtrl_cancelRename mwle_fnGuiTreeViewCtrl_cancelRename;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_cancelRename([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl);
static internal wle_fnGuiTreeViewCtrl_onRenameValidate mwle_fnGuiTreeViewCtrl_onRenameValidate;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_onRenameValidate([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl);
static internal wle_fnGuiTreeViewCtrl_showItemRenameCtrl mwle_fnGuiTreeViewCtrl_showItemRenameCtrl;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_showItemRenameCtrl([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiTreeViewCtrl_setDebug mwle_fnGuiTreeViewCtrl_setDebug;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_setDebug([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiTreeViewCtrl_findItemByName mwle_fnGuiTreeViewCtrl_findItemByName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_findItemByName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text);
static internal wle_fnGuiTreeViewCtrl_findItemByValue mwle_fnGuiTreeViewCtrl_findItemByValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_findItemByValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder value);
static internal wle_fnGuiTreeViewCtrl_findChildItemByName mwle_fnGuiTreeViewCtrl_findChildItemByName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_findChildItemByName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [In] int parentId, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder childName);
static internal wle_fnGuiTreeViewCtrl_insertItem mwle_fnGuiTreeViewCtrl_insertItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_insertItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [In] int parentId, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder text, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder value, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder icon, [In] int normalImage, [In] int expandedImage);
static internal wle_fnGuiTreeViewCtrl_lockSelection mwle_fnGuiTreeViewCtrl_lockSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_lockSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [In] bool xlock);
static internal wle_fnGuiTreeViewCtrl_hideSelection mwle_fnGuiTreeViewCtrl_hideSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_hideSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [In] bool state);
static internal wle_fnGuiTreeViewCtrl_toggleLockSelection mwle_fnGuiTreeViewCtrl_toggleLockSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_toggleLockSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl);
static internal wle_fnGuiTreeViewCtrl_toggleHideSelection mwle_fnGuiTreeViewCtrl_toggleHideSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_toggleHideSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl);
static internal wle_fnGuiTreeViewCtrl_clearSelection mwle_fnGuiTreeViewCtrl_clearSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_clearSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl);
static internal wle_fnGuiTreeViewCtrl_deleteSelection mwle_fnGuiTreeViewCtrl_deleteSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_deleteSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl);
static internal wle_fnGuiTreeViewCtrl_addSelection mwle_fnGuiTreeViewCtrl_addSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_addSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [In] int id, [In] bool isLastSelection);
static internal wle_fnGuiTreeViewCtrl_isItemSelected mwle_fnGuiTreeViewCtrl_isItemSelected;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTreeViewCtrl_isItemSelected([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [In] int id);
static internal wle_fnGuiTreeViewCtrl_getFilterText mwle_fnGuiTreeViewCtrl_getFilterText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_getFilterText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiTreeViewCtrl_setFilterText mwle_fnGuiTreeViewCtrl_setFilterText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_setFilterText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pattern);
static internal wle_fnGuiTreeViewCtrl_clearFilterText mwle_fnGuiTreeViewCtrl_clearFilterText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTreeViewCtrl_clearFilterText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitreeviewctrl);
static internal wle_fnGuiCanvas_pushDialog mwle_fnGuiCanvas_pushDialog;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_pushDialog([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4);
static internal wle_fnGuiCanvas_popDialog mwle_fnGuiCanvas_popDialog;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_popDialog([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiCanvas_popLayer mwle_fnGuiCanvas_popLayer;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_popLayer([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiCanvas_setCursorPos mwle_fnGuiCanvas_setCursorPos;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_setCursorPos([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiCanvas_isFullscreen mwle_fnGuiCanvas_isFullscreen;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiCanvas_isFullscreen([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas);
static internal wle_fnGuiCanvas_minimizeWindow mwle_fnGuiCanvas_minimizeWindow;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_minimizeWindow([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas);
static internal wle_fnGuiCanvas_isMinimized mwle_fnGuiCanvas_isMinimized;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiCanvas_isMinimized([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas);
static internal wle_fnGuiCanvas_isMaximized mwle_fnGuiCanvas_isMaximized;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiCanvas_isMaximized([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas);
static internal wle_fnGuiCanvas_maximizeWindow mwle_fnGuiCanvas_maximizeWindow;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_maximizeWindow([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas);
static internal wle_fnGuiCanvas_restoreWindow mwle_fnGuiCanvas_restoreWindow;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_restoreWindow([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas);
static internal wle_fnGuiCanvas_setFocus mwle_fnGuiCanvas_setFocus;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_setFocus([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas);
static internal wle_fnGuiCanvas_setVideoMode mwle_fnGuiCanvas_setVideoMode;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_setVideoMode([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7);
static internal wle_fn_excludeOtherInstance mwle_fn_excludeOtherInstance;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_excludeOtherInstance([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder appIdentifer);
static internal wle_fnGuiCanvas_getContent mwle_fnGuiCanvas_getContent;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiCanvas_getContent([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas);
static internal wle_fnGuiCanvas_setContent mwle_fnGuiCanvas_setContent;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_setContent([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder ctrl);
static internal wle_fnGuiCanvas_cursorOn mwle_fnGuiCanvas_cursorOn;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_cursorOn([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas);
static internal wle_fnGuiCanvas_cursorOff mwle_fnGuiCanvas_cursorOff;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_cursorOff([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas);
static internal wle_fnGuiCanvas_setCursor mwle_fnGuiCanvas_setCursor;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_setCursor([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder cursor);
static internal wle_fnGuiCanvas_renderFront mwle_fnGuiCanvas_renderFront;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_renderFront([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas, [In] bool enable);
static internal wle_fnGuiCanvas_showCursor mwle_fnGuiCanvas_showCursor;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_showCursor([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas);
static internal wle_fnGuiCanvas_hideCursor mwle_fnGuiCanvas_hideCursor;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_hideCursor([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas);
static internal wle_fnGuiCanvas_isCursorOn mwle_fnGuiCanvas_isCursorOn;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiCanvas_isCursorOn([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas);
static internal wle_fnGuiCanvas_isCursorShown mwle_fnGuiCanvas_isCursorShown;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiCanvas_isCursorShown([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas);
static internal wle_fnGuiCanvas_repaint mwle_fnGuiCanvas_repaint;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_repaint([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas, [In] int elapsedMS);
static internal wle_fnGuiCanvas_reset mwle_fnGuiCanvas_reset;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_reset([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas);
static internal wle_fnGuiCanvas_getCursorPos mwle_fnGuiCanvas_getCursorPos;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_getCursorPos([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiCanvas_getMouseControl mwle_fnGuiCanvas_getMouseControl;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiCanvas_getMouseControl([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas);
static internal wle_fnGuiCanvas_getExtent mwle_fnGuiCanvas_getExtent;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_getExtent([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiCanvas_setWindowTitle mwle_fnGuiCanvas_setWindowTitle;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_setWindowTitle([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder newTitle);
static internal wle_fnGuiCanvas_getVideoMode mwle_fnGuiCanvas_getVideoMode;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_getVideoMode([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiCanvas_getModeCount mwle_fnGuiCanvas_getModeCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiCanvas_getModeCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas);
static internal wle_fnGuiCanvas_getMode mwle_fnGuiCanvas_getMode;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_getMode([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas, [In] int modeId,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiCanvas_toggleFullscreen mwle_fnGuiCanvas_toggleFullscreen;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_toggleFullscreen([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas);
static internal wle_fnGuiCanvas_clientToScreen mwle_fnGuiCanvas_clientToScreen;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_clientToScreen([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder coordinate,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiCanvas_screenToClient mwle_fnGuiCanvas_screenToClient;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_screenToClient([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder coordinate,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiCanvas_getWindowPosition mwle_fnGuiCanvas_getWindowPosition;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_getWindowPosition([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiCanvas_setWindowPosition mwle_fnGuiCanvas_setWindowPosition;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiCanvas_setWindowPosition([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicanvas, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder position);
static internal wle_fnGuiControl_getValue mwle_fnGuiControl_getValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_getValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiControl_makeFirstResponder mwle_fnGuiControl_makeFirstResponder;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_makeFirstResponder([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiControl_isActive mwle_fnGuiControl_isActive;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiControl_isActive([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol);
static internal wle_fnGuiControl_setExtent mwle_fnGuiControl_setExtent;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_setExtent([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiControl_findHitControl mwle_fnGuiControl_findHitControl;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_findHitControl([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol, [In] int x, [In] int y,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiControl_findHitControls mwle_fnGuiControl_findHitControls;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_findHitControls([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol, [In] int x, [In] int y, [In] int width, [In] int height,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiControl_controlIsChild mwle_fnGuiControl_controlIsChild;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiControl_controlIsChild([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder control);
static internal wle_fnGuiControl_isFirstResponder mwle_fnGuiControl_isFirstResponder;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiControl_isFirstResponder([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol);
static internal wle_fnGuiControl_setFirstResponder mwle_fnGuiControl_setFirstResponder;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_setFirstResponder([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol);
static internal wle_fnGuiControl_getFirstResponder mwle_fnGuiControl_getFirstResponder;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_getFirstResponder([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiControl_clearFirstResponder mwle_fnGuiControl_clearFirstResponder;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_clearFirstResponder([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol, [In] bool ignored);
static internal wle_fnGuiControl_pointInControl mwle_fnGuiControl_pointInControl;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiControl_pointInControl([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol, [In] int x, [In] int y);
static internal wle_fnGuiControl_addGuiControl mwle_fnGuiControl_addGuiControl;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_addGuiControl([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder control);
static internal wle_fnGuiControl_getRoot mwle_fnGuiControl_getRoot;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_getRoot([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiControl_getParent mwle_fnGuiControl_getParent;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_getParent([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiControl_isMouseLocked mwle_fnGuiControl_isMouseLocked;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiControl_isMouseLocked([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol);
static internal wle_fnGuiControl_setValue mwle_fnGuiControl_setValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_setValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder value);
static internal wle_fnGuiControl_setActive mwle_fnGuiControl_setActive;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_setActive([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol, [In] bool state);
static internal wle_fnGuiControl_isVisible mwle_fnGuiControl_isVisible;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiControl_isVisible([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol);
static internal wle_fnGuiControl_setVisible mwle_fnGuiControl_setVisible;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_setVisible([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol, [In] bool state);
static internal wle_fnGuiControl_isAwake mwle_fnGuiControl_isAwake;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiControl_isAwake([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol);
static internal wle_fnGuiControl_setProfile mwle_fnGuiControl_setProfile;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_setProfile([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder profile);
static internal wle_fnGuiControl_resize mwle_fnGuiControl_resize;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_resize([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol, [In] int x, [In] int y, [In] int width, [In] int height);
static internal wle_fnGuiControl_getPosition mwle_fnGuiControl_getPosition;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_getPosition([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiControl_getCenter mwle_fnGuiControl_getCenter;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_getCenter([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiControl_setCenter mwle_fnGuiControl_setCenter;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_setCenter([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol, [In] int x, [In] int y);
static internal wle_fnGuiControl_getGlobalCenter mwle_fnGuiControl_getGlobalCenter;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_getGlobalCenter([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiControl_getGlobalPosition mwle_fnGuiControl_getGlobalPosition;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_getGlobalPosition([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiControl_setPositionGlobal mwle_fnGuiControl_setPositionGlobal;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_setPositionGlobal([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol, [In] int x, [In] int y);
static internal wle_fnGuiControl_setPosition mwle_fnGuiControl_setPosition;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_setPosition([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol, [In] int x, [In] int y);
static internal wle_fnGuiControl_getExtent mwle_fnGuiControl_getExtent;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_getExtent([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiControl_getMinExtent mwle_fnGuiControl_getMinExtent;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiControl_getMinExtent([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiControl_getAspect mwle_fnGuiControl_getAspect;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnGuiControl_getAspect([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrol);
static internal wle_fnGuiControlProfile_getStringWidth mwle_fnGuiControlProfile_getStringWidth;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiControlProfile_getStringWidth([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guicontrolprofile, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnDbgFileView_setCurrentLine mwle_fnDbgFileView_setCurrentLine;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnDbgFileView_setCurrentLine([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder dbgfileview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnDbgFileView_getCurrentLine mwle_fnDbgFileView_getCurrentLine;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnDbgFileView_getCurrentLine([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder dbgfileview,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnDbgFileView_open mwle_fnDbgFileView_open;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnDbgFileView_open([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder dbgfileview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnDbgFileView_clearBreakPositions mwle_fnDbgFileView_clearBreakPositions;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnDbgFileView_clearBreakPositions([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder dbgfileview);
static internal wle_fnDbgFileView_setBreakPosition mwle_fnDbgFileView_setBreakPosition;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnDbgFileView_setBreakPosition([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder dbgfileview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnDbgFileView_setBreak mwle_fnDbgFileView_setBreak;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnDbgFileView_setBreak([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder dbgfileview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnDbgFileView_removeBreak mwle_fnDbgFileView_removeBreak;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnDbgFileView_removeBreak([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder dbgfileview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnDbgFileView_findString mwle_fnDbgFileView_findString;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnDbgFileView_findString([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder dbgfileview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiEditCtrl_getContentControl mwle_fnGuiEditCtrl_getContentControl;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiEditCtrl_getContentControl([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl);
static internal wle_fnGuiEditCtrl_setContentControl mwle_fnGuiEditCtrl_setContentControl;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_setContentControl([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiEditCtrl_addNewCtrl mwle_fnGuiEditCtrl_addNewCtrl;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_addNewCtrl([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiEditCtrl_addSelection mwle_fnGuiEditCtrl_addSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_addSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiEditCtrl_removeSelection mwle_fnGuiEditCtrl_removeSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_removeSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiEditCtrl_clearSelection mwle_fnGuiEditCtrl_clearSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_clearSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl);
static internal wle_fnGuiEditCtrl_select mwle_fnGuiEditCtrl_select;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_select([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiEditCtrl_setCurrentAddSet mwle_fnGuiEditCtrl_setCurrentAddSet;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_setCurrentAddSet([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiEditCtrl_getCurrentAddSet mwle_fnGuiEditCtrl_getCurrentAddSet;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiEditCtrl_getCurrentAddSet([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl);
static internal wle_fnGuiEditCtrl_toggle mwle_fnGuiEditCtrl_toggle;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_toggle([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl);
static internal wle_fnGuiEditCtrl_justify mwle_fnGuiEditCtrl_justify;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_justify([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiEditCtrl_bringToFront mwle_fnGuiEditCtrl_bringToFront;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_bringToFront([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl);
static internal wle_fnGuiEditCtrl_pushToBack mwle_fnGuiEditCtrl_pushToBack;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_pushToBack([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl);
static internal wle_fnGuiEditCtrl_deleteSelection mwle_fnGuiEditCtrl_deleteSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_deleteSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl);
static internal wle_fnGuiEditCtrl_moveSelection mwle_fnGuiEditCtrl_moveSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_moveSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiEditCtrl_saveSelection mwle_fnGuiEditCtrl_saveSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_saveSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiEditCtrl_loadSelection mwle_fnGuiEditCtrl_loadSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_loadSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiEditCtrl_selectAll mwle_fnGuiEditCtrl_selectAll;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_selectAll([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl);
static internal wle_fnGuiEditCtrl_getNumSelected mwle_fnGuiEditCtrl_getNumSelected;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiEditCtrl_getNumSelected([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl);
static internal wle_fnGuiEditCtrl_getSelectionGlobalBounds mwle_fnGuiEditCtrl_getSelectionGlobalBounds;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_getSelectionGlobalBounds([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiEditCtrl_selectParents mwle_fnGuiEditCtrl_selectParents;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_selectParents([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiEditCtrl_selectChildren mwle_fnGuiEditCtrl_selectChildren;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_selectChildren([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiEditCtrl_setSnapToGrid mwle_fnGuiEditCtrl_setSnapToGrid;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_setSnapToGrid([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiEditCtrl_readGuides mwle_fnGuiEditCtrl_readGuides;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_readGuides([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiEditCtrl_writeGuides mwle_fnGuiEditCtrl_writeGuides;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_writeGuides([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiEditCtrl_clearGuides mwle_fnGuiEditCtrl_clearGuides;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_clearGuides([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiEditCtrl_fitIntoParents mwle_fnGuiEditCtrl_fitIntoParents;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_fitIntoParents([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiEditCtrl_getMouseMode mwle_fnGuiEditCtrl_getMouseMode;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_getMouseMode([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiEditCtrl_getSelection mwle_fnGuiEditCtrl_getSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_getSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiEditCtrl_getTrash mwle_fnGuiEditCtrl_getTrash;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiEditCtrl_getTrash([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guieditctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiFilterCtrl_getValue mwle_fnGuiFilterCtrl_getValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiFilterCtrl_getValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guifilterctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiFilterCtrl_setValue mwle_fnGuiFilterCtrl_setValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiFilterCtrl_setValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guifilterctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a12, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a13, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a14, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a15, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a16, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a17, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a18, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a19);
static internal wle_fnGuiFilterCtrl_identity mwle_fnGuiFilterCtrl_identity;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiFilterCtrl_identity([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guifilterctrl);
static internal wle_fnGuiGraphCtrl_addDatum mwle_fnGuiGraphCtrl_addDatum;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiGraphCtrl_addDatum([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guigraphctrl, [In] int plotId, [In] float value);
static internal wle_fnGuiGraphCtrl_getDatum mwle_fnGuiGraphCtrl_getDatum;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnGuiGraphCtrl_getDatum([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guigraphctrl, [In] int plotId, [In] int index);
static internal wle_fnGuiGraphCtrl_addAutoPlot mwle_fnGuiGraphCtrl_addAutoPlot;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiGraphCtrl_addAutoPlot([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guigraphctrl, [In] int plotId, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder variable, [In] int updateFrequency);
static internal wle_fnGuiGraphCtrl_removeAutoPlot mwle_fnGuiGraphCtrl_removeAutoPlot;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiGraphCtrl_removeAutoPlot([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guigraphctrl, [In] int plotId);
static internal wle_fnGuiGraphCtrl_setGraphType mwle_fnGuiGraphCtrl_setGraphType;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiGraphCtrl_setGraphType([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guigraphctrl, [In] int plotId, [In] int graphType);
static internal wle_fnGuiImageList_getImage mwle_fnGuiImageList_getImage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiImageList_getImage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiimagelist, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiImageList_clear mwle_fnGuiImageList_clear;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiImageList_clear([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiimagelist);
static internal wle_fnGuiImageList_count mwle_fnGuiImageList_count;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiImageList_count([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiimagelist);
static internal wle_fnGuiImageList_remove mwle_fnGuiImageList_remove;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiImageList_remove([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiimagelist, [In] int index);
static internal wle_fnGuiImageList_getIndex mwle_fnGuiImageList_getIndex;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiImageList_getIndex([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiimagelist, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder imagePath);
static internal wle_fnGuiImageList_insert mwle_fnGuiImageList_insert;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiImageList_insert([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiimagelist, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder imagePath);
static internal wle_fnGuiInspector_inspect mwle_fnGuiInspector_inspect;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiInspector_inspect([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspector, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiInspector_addInspect mwle_fnGuiInspector_addInspect;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiInspector_addInspect([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspector, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiInspector_removeInspect mwle_fnGuiInspector_removeInspect;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiInspector_removeInspect([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspector, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiInspector_refresh mwle_fnGuiInspector_refresh;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiInspector_refresh([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspector);
static internal wle_fnGuiInspector_getInspectObject mwle_fnGuiInspector_getInspectObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiInspector_getInspectObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspector, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiInspector_getNumInspectObjects mwle_fnGuiInspector_getNumInspectObjects;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiInspector_getNumInspectObjects([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspector);
static internal wle_fnGuiInspector_setName mwle_fnGuiInspector_setName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiInspector_setName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspector, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiInspector_apply mwle_fnGuiInspector_apply;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiInspector_apply([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspector);
static internal wle_fnGuiInspector_setObjectField mwle_fnGuiInspector_setObjectField;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiInspector_setObjectField([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspector, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiInspectorTypeFileName_apply mwle_fnGuiInspectorTypeFileName_apply;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiInspectorTypeFileName_apply([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspectortypefilename, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiInspectorTypeBitMask32_applyBit mwle_fnGuiInspectorTypeBitMask32_applyBit;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiInspectorTypeBitMask32_applyBit([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspectortypebitmask32);
static internal wle_fnGuiMenuBar_clearMenus mwle_fnGuiMenuBar_clearMenus;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMenuBar_clearMenus([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimenubar, [In] int param1, [In] int param2);
static internal wle_fnGuiMenuBar_setMenuMargins mwle_fnGuiMenuBar_setMenuMargins;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMenuBar_setMenuMargins([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimenubar, [In] int horizontalMargin, [In] int verticalMargin, [In] int bitmapToTextSpacing);
static internal wle_fnGuiMenuBar_addMenu mwle_fnGuiMenuBar_addMenu;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMenuBar_addMenu([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimenubar, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuText, [In] int menuId);
static internal wle_fnGuiMenuBar_addMenuItem mwle_fnGuiMenuBar_addMenuItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMenuBar_addMenuItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimenubar, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder targetMenu, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuItemText, [In] int menuItemId, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder accelerator, [In] int checkGroup);
static internal wle_fnGuiMenuBar_setMenuItemEnable mwle_fnGuiMenuBar_setMenuItemEnable;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMenuBar_setMenuItemEnable([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimenubar, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuTarget, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuItemTarget, [In] bool enabled);
static internal wle_fnGuiMenuBar_setCheckmarkBitmapIndex mwle_fnGuiMenuBar_setCheckmarkBitmapIndex;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMenuBar_setCheckmarkBitmapIndex([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimenubar, [In] int bitmapindex);
static internal wle_fnGuiMenuBar_setMenuItemChecked mwle_fnGuiMenuBar_setMenuItemChecked;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMenuBar_setMenuItemChecked([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimenubar, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuTarget, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuItemTarget, [In] bool xchecked);
static internal wle_fnGuiMenuBar_setMenuText mwle_fnGuiMenuBar_setMenuText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMenuBar_setMenuText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimenubar, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuTarget, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder newMenuText);
static internal wle_fnGuiMenuBar_setMenuBitmapIndex mwle_fnGuiMenuBar_setMenuBitmapIndex;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMenuBar_setMenuBitmapIndex([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimenubar, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuTarget, [In] int bitmapindex, [In] bool bitmaponly, [In] bool drawborder);
static internal wle_fnGuiMenuBar_setMenuVisible mwle_fnGuiMenuBar_setMenuVisible;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMenuBar_setMenuVisible([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimenubar, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuTarget, [In] bool visible);
static internal wle_fnGuiMenuBar_setMenuItemText mwle_fnGuiMenuBar_setMenuItemText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMenuBar_setMenuItemText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimenubar, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuTarget, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuItemTarget, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder newMenuItemText);
static internal wle_fnGuiMenuBar_setMenuItemVisible mwle_fnGuiMenuBar_setMenuItemVisible;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMenuBar_setMenuItemVisible([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimenubar, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuTarget, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuItemTarget, [In] bool isVisible);
static internal wle_fnGuiMenuBar_setMenuItemBitmap mwle_fnGuiMenuBar_setMenuItemBitmap;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMenuBar_setMenuItemBitmap([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimenubar, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuTarget, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuItemTarget, [In] int bitmapIndex);
static internal wle_fnGuiMenuBar_removeMenuItem mwle_fnGuiMenuBar_removeMenuItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMenuBar_removeMenuItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimenubar, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuTarget, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuItemTarget);
static internal wle_fnGuiMenuBar_clearMenuItems mwle_fnGuiMenuBar_clearMenuItems;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMenuBar_clearMenuItems([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimenubar, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuTarget);
static internal wle_fnGuiMenuBar_removeMenu mwle_fnGuiMenuBar_removeMenu;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMenuBar_removeMenu([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimenubar, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuTarget);
static internal wle_fnGuiMenuBar_setMenuItemSubmenuState mwle_fnGuiMenuBar_setMenuItemSubmenuState;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMenuBar_setMenuItemSubmenuState([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimenubar, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuTarget, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuItem, [In] bool isSubmenu);
static internal wle_fnGuiMenuBar_addSubmenuItem mwle_fnGuiMenuBar_addSubmenuItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMenuBar_addSubmenuItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimenubar, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuTarget, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuItem, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder submenuItemText, [In] int submenuItemId, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder accelerator, [In] int checkGroup);
static internal wle_fnGuiMenuBar_clearSubmenuItems mwle_fnGuiMenuBar_clearSubmenuItems;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMenuBar_clearSubmenuItems([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimenubar, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuTarget, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuItem);
static internal wle_fnGuiMenuBar_setSubmenuItemChecked mwle_fnGuiMenuBar_setSubmenuItemChecked;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMenuBar_setSubmenuItemChecked([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimenubar, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuTarget, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menuItemTarget, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder submenuItemText, [In] bool xchecked);
static internal wle_fnGuiParticleGraphCtrl_setSelectedPoint mwle_fnGuiParticleGraphCtrl_setSelectedPoint;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_setSelectedPoint([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiParticleGraphCtrl_setSelectedPlot mwle_fnGuiParticleGraphCtrl_setSelectedPlot;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_setSelectedPlot([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiParticleGraphCtrl_clearGraph mwle_fnGuiParticleGraphCtrl_clearGraph;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_clearGraph([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiParticleGraphCtrl_clearAllGraphs mwle_fnGuiParticleGraphCtrl_clearAllGraphs;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_clearAllGraphs([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl);
static internal wle_fnGuiParticleGraphCtrl_addPlotPoint mwle_fnGuiParticleGraphCtrl_addPlotPoint;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_addPlotPoint([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiParticleGraphCtrl_insertPlotPoint mwle_fnGuiParticleGraphCtrl_insertPlotPoint;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_insertPlotPoint([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5);
static internal wle_fnGuiParticleGraphCtrl_changePlotPoint mwle_fnGuiParticleGraphCtrl_changePlotPoint;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_changePlotPoint([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiParticleGraphCtrl_getSelectedPlot mwle_fnGuiParticleGraphCtrl_getSelectedPlot;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_getSelectedPlot([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiParticleGraphCtrl_getSelectedPoint mwle_fnGuiParticleGraphCtrl_getSelectedPoint;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_getSelectedPoint([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiParticleGraphCtrl_isExistingPoint mwle_fnGuiParticleGraphCtrl_isExistingPoint;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_isExistingPoint([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiParticleGraphCtrl_getPlotPoint mwle_fnGuiParticleGraphCtrl_getPlotPoint;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_getPlotPoint([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiParticleGraphCtrl_getPlotIndex mwle_fnGuiParticleGraphCtrl_getPlotIndex;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_getPlotIndex([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiParticleGraphCtrl_getGraphColor mwle_fnGuiParticleGraphCtrl_getGraphColor;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_getGraphColor([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiParticleGraphCtrl_getGraphMin mwle_fnGuiParticleGraphCtrl_getGraphMin;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_getGraphMin([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiParticleGraphCtrl_getGraphMax mwle_fnGuiParticleGraphCtrl_getGraphMax;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_getGraphMax([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiParticleGraphCtrl_getGraphName mwle_fnGuiParticleGraphCtrl_getGraphName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_getGraphName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiParticleGraphCtrl_setGraphMin mwle_fnGuiParticleGraphCtrl_setGraphMin;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_setGraphMin([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4);
static internal wle_fnGuiParticleGraphCtrl_setGraphMinX mwle_fnGuiParticleGraphCtrl_setGraphMinX;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_setGraphMinX([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiParticleGraphCtrl_setGraphMinY mwle_fnGuiParticleGraphCtrl_setGraphMinY;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_setGraphMinY([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiParticleGraphCtrl_setGraphMax mwle_fnGuiParticleGraphCtrl_setGraphMax;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_setGraphMax([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4);
static internal wle_fnGuiParticleGraphCtrl_setGraphMaxX mwle_fnGuiParticleGraphCtrl_setGraphMaxX;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_setGraphMaxX([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiParticleGraphCtrl_setGraphMaxY mwle_fnGuiParticleGraphCtrl_setGraphMaxY;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_setGraphMaxY([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiParticleGraphCtrl_setGraphHidden mwle_fnGuiParticleGraphCtrl_setGraphHidden;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_setGraphHidden([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiParticleGraphCtrl_setAutoGraphMax mwle_fnGuiParticleGraphCtrl_setAutoGraphMax;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_setAutoGraphMax([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiParticleGraphCtrl_setAutoRemove mwle_fnGuiParticleGraphCtrl_setAutoRemove;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_setAutoRemove([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiParticleGraphCtrl_setRenderAll mwle_fnGuiParticleGraphCtrl_setRenderAll;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_setRenderAll([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiParticleGraphCtrl_setPointXMovementClamped mwle_fnGuiParticleGraphCtrl_setPointXMovementClamped;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_setPointXMovementClamped([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiParticleGraphCtrl_setRenderGraphTooltip mwle_fnGuiParticleGraphCtrl_setRenderGraphTooltip;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_setRenderGraphTooltip([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiParticleGraphCtrl_setGraphName mwle_fnGuiParticleGraphCtrl_setGraphName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_setGraphName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiParticleGraphCtrl_resetSelectedPoint mwle_fnGuiParticleGraphCtrl_resetSelectedPoint;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiParticleGraphCtrl_resetSelectedPoint([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiparticlegraphctrl);
static internal wle_fnGuiShapeEdPreview_setOrbitPos mwle_fnGuiShapeEdPreview_setOrbitPos;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiShapeEdPreview_setOrbitPos([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pos);
static internal wle_fnGuiShapeEdPreview_setModel mwle_fnGuiShapeEdPreview_setModel;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiShapeEdPreview_setModel([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapePath);
static internal wle_fnGuiShapeEdPreview_fitToShape mwle_fnGuiShapeEdPreview_fitToShape;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiShapeEdPreview_fitToShape([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview);
static internal wle_fnGuiShapeEdPreview_refreshShape mwle_fnGuiShapeEdPreview_refreshShape;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiShapeEdPreview_refreshShape([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview);
static internal wle_fnGuiShapeEdPreview_updateNodeTransforms mwle_fnGuiShapeEdPreview_updateNodeTransforms;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiShapeEdPreview_updateNodeTransforms([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview);
static internal wle_fnGuiShapeEdPreview_computeShapeBounds mwle_fnGuiShapeEdPreview_computeShapeBounds;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiShapeEdPreview_computeShapeBounds([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiShapeEdPreview_getMeshHidden mwle_fnGuiShapeEdPreview_getMeshHidden;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiShapeEdPreview_getMeshHidden([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name);
static internal wle_fnGuiShapeEdPreview_setMeshHidden mwle_fnGuiShapeEdPreview_setMeshHidden;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiShapeEdPreview_setMeshHidden([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name, [In] bool hidden);
static internal wle_fnGuiShapeEdPreview_setAllMeshesHidden mwle_fnGuiShapeEdPreview_setAllMeshesHidden;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiShapeEdPreview_setAllMeshesHidden([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview, [In] bool hidden);
static internal wle_fnGuiShapeEdPreview_exportToCollada mwle_fnGuiShapeEdPreview_exportToCollada;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiShapeEdPreview_exportToCollada([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder path);
static internal wle_fnGuiShapeEdPreview_addThread mwle_fnGuiShapeEdPreview_addThread;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiShapeEdPreview_addThread([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview);
static internal wle_fnGuiShapeEdPreview_removeThread mwle_fnGuiShapeEdPreview_removeThread;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiShapeEdPreview_removeThread([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview, [In] int slot);
static internal wle_fnGuiShapeEdPreview_getThreadCount mwle_fnGuiShapeEdPreview_getThreadCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiShapeEdPreview_getThreadCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview);
static internal wle_fnGuiShapeEdPreview_setTimeScale mwle_fnGuiShapeEdPreview_setTimeScale;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiShapeEdPreview_setTimeScale([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview, [In] float scale);
static internal wle_fnGuiShapeEdPreview_setThreadSequence mwle_fnGuiShapeEdPreview_setThreadSequence;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiShapeEdPreview_setThreadSequence([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name, [In] float duration, [In] float pos, [In] bool play);
static internal wle_fnGuiShapeEdPreview_getThreadSequence mwle_fnGuiShapeEdPreview_getThreadSequence;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiShapeEdPreview_getThreadSequence([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiShapeEdPreview_refreshThreadSequences mwle_fnGuiShapeEdPreview_refreshThreadSequences;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiShapeEdPreview_refreshThreadSequences([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview);
static internal wle_fnGuiShapeEdPreview_mountShape mwle_fnGuiShapeEdPreview_mountShape;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiShapeEdPreview_mountShape([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapePath, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder nodeName, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder type, [In] int slot);
static internal wle_fnGuiShapeEdPreview_setMountNode mwle_fnGuiShapeEdPreview_setMountNode;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiShapeEdPreview_setMountNode([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview, [In] int slot, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder nodeName);
static internal wle_fnGuiShapeEdPreview_getMountThreadSequence mwle_fnGuiShapeEdPreview_getMountThreadSequence;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiShapeEdPreview_getMountThreadSequence([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview, [In] int slot,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiShapeEdPreview_setMountThreadSequence mwle_fnGuiShapeEdPreview_setMountThreadSequence;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiShapeEdPreview_setMountThreadSequence([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview, [In] int slot, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name);
static internal wle_fnGuiShapeEdPreview_getMountThreadPos mwle_fnGuiShapeEdPreview_getMountThreadPos;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnGuiShapeEdPreview_getMountThreadPos([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview, [In] int slot);
static internal wle_fnGuiShapeEdPreview_setMountThreadPos mwle_fnGuiShapeEdPreview_setMountThreadPos;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiShapeEdPreview_setMountThreadPos([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview, [In] int slot, [In] float pos);
static internal wle_fnGuiShapeEdPreview_getMountThreadDir mwle_fnGuiShapeEdPreview_getMountThreadDir;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnGuiShapeEdPreview_getMountThreadDir([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview, [In] int slot);
static internal wle_fnGuiShapeEdPreview_setMountThreadDir mwle_fnGuiShapeEdPreview_setMountThreadDir;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiShapeEdPreview_setMountThreadDir([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview, [In] int slot, [In] float dir);
static internal wle_fnGuiShapeEdPreview_unmountShape mwle_fnGuiShapeEdPreview_unmountShape;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiShapeEdPreview_unmountShape([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview, [In] int slot);
static internal wle_fnGuiShapeEdPreview_unmountAll mwle_fnGuiShapeEdPreview_unmountAll;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiShapeEdPreview_unmountAll([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guishapeedpreview);
static internal wle_fnGuiInspectorDynamicField_renameField mwle_fnGuiInspectorDynamicField_renameField;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiInspectorDynamicField_renameField([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspectordynamicfield, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiInspectorDynamicGroup_inspectGroup mwle_fnGuiInspectorDynamicGroup_inspectGroup;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiInspectorDynamicGroup_inspectGroup([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspectordynamicgroup);
static internal wle_fnGuiInspectorDynamicGroup_addDynamicField mwle_fnGuiInspectorDynamicGroup_addDynamicField;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiInspectorDynamicGroup_addDynamicField([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspectordynamicgroup);
static internal wle_fnGuiInspectorDynamicGroup_removeDynamicField mwle_fnGuiInspectorDynamicGroup_removeDynamicField;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiInspectorDynamicGroup_removeDynamicField([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspectordynamicgroup, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiInspectorField_getInspector mwle_fnGuiInspectorField_getInspector;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiInspectorField_getInspector([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspectorfield);
static internal wle_fnGuiInspectorField_getInspectedFieldName mwle_fnGuiInspectorField_getInspectedFieldName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiInspectorField_getInspectedFieldName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspectorfield,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiInspectorField_getInspectedFieldType mwle_fnGuiInspectorField_getInspectedFieldType;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiInspectorField_getInspectedFieldType([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspectorfield,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiInspectorField_apply mwle_fnGuiInspectorField_apply;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiInspectorField_apply([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspectorfield, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnGuiInspectorField_applyWithoutUndo mwle_fnGuiInspectorField_applyWithoutUndo;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiInspectorField_applyWithoutUndo([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspectorfield, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiInspectorField_getData mwle_fnGuiInspectorField_getData;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiInspectorField_getData([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspectorfield,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiInspectorField_reset mwle_fnGuiInspectorField_reset;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiInspectorField_reset([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiinspectorfield);
static internal wle_fnGuiVariableInspector_loadVars mwle_fnGuiVariableInspector_loadVars;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiVariableInspector_loadVars([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guivariableinspector, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiMessageVectorCtrl_attach mwle_fnGuiMessageVectorCtrl_attach;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiMessageVectorCtrl_attach([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimessagevectorctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder item);
static internal wle_fnGuiMessageVectorCtrl_detach mwle_fnGuiMessageVectorCtrl_detach;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMessageVectorCtrl_detach([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimessagevectorctrl);
static internal wle_fnGuiProgressBitmapCtrl_setBitmap mwle_fnGuiProgressBitmapCtrl_setBitmap;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiProgressBitmapCtrl_setBitmap([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiprogressbitmapctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filename);
static internal wle_fnGuiTickCtrl_setProcessTicks mwle_fnGuiTickCtrl_setProcessTicks;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTickCtrl_setProcessTicks([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitickctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnGuiTheoraCtrl_setFile mwle_fnGuiTheoraCtrl_setFile;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTheoraCtrl_setFile([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitheoractrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filename);
static internal wle_fnGuiTheoraCtrl_play mwle_fnGuiTheoraCtrl_play;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTheoraCtrl_play([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitheoractrl);
static internal wle_fnGuiTheoraCtrl_pause mwle_fnGuiTheoraCtrl_pause;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTheoraCtrl_pause([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitheoractrl);
static internal wle_fnGuiTheoraCtrl_stop mwle_fnGuiTheoraCtrl_stop;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiTheoraCtrl_stop([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitheoractrl);
static internal wle_fnGuiTheoraCtrl_getCurrentTime mwle_fnGuiTheoraCtrl_getCurrentTime;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnGuiTheoraCtrl_getCurrentTime([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitheoractrl);
static internal wle_fnGuiTheoraCtrl_isPlaybackDone mwle_fnGuiTheoraCtrl_isPlaybackDone;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGuiTheoraCtrl_isPlaybackDone([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guitheoractrl);
static internal wle_fnMessageVector_dump mwle_fnMessageVector_dump;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMessageVector_dump([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder messagevector, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnMessageVector_clear mwle_fnMessageVector_clear;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMessageVector_clear([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder messagevector);
static internal wle_fnMessageVector_pushBackLine mwle_fnMessageVector_pushBackLine;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMessageVector_pushBackLine([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder messagevector, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder msg, [In] int tag);
static internal wle_fnMessageVector_popBackLine mwle_fnMessageVector_popBackLine;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnMessageVector_popBackLine([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder messagevector);
static internal wle_fnMessageVector_pushFrontLine mwle_fnMessageVector_pushFrontLine;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMessageVector_pushFrontLine([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder messagevector, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder msg, [In] int tag);
static internal wle_fnMessageVector_popFrontLine mwle_fnMessageVector_popFrontLine;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnMessageVector_popFrontLine([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder messagevector);
static internal wle_fnMessageVector_insertLine mwle_fnMessageVector_insertLine;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnMessageVector_insertLine([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder messagevector, [In] int insertPos, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder msg, [In] int tag);
static internal wle_fnMessageVector_deleteLine mwle_fnMessageVector_deleteLine;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnMessageVector_deleteLine([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder messagevector, [In] int deletePos);
static internal wle_fnMessageVector_getNumLines mwle_fnMessageVector_getNumLines;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnMessageVector_getNumLines([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder messagevector);
static internal wle_fnMessageVector_getLineTextByTag mwle_fnMessageVector_getLineTextByTag;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMessageVector_getLineTextByTag([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder messagevector, [In] int tag,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnMessageVector_getLineIndexByTag mwle_fnMessageVector_getLineIndexByTag;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnMessageVector_getLineIndexByTag([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder messagevector, [In] int tag);
static internal wle_fnMessageVector_getLineText mwle_fnMessageVector_getLineText;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMessageVector_getLineText([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder messagevector, [In] int pos,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnMessageVector_getLineTag mwle_fnMessageVector_getLineTag;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnMessageVector_getLineTag([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder messagevector, [In] int pos);
static internal wle_fnEditTSCtrl_getDisplayType mwle_fnEditTSCtrl_getDisplayType;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnEditTSCtrl_getDisplayType([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder edittsctrl);
static internal wle_fnEditTSCtrl_setDisplayType mwle_fnEditTSCtrl_setDisplayType;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnEditTSCtrl_setDisplayType([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder edittsctrl, [In] int displayType);
static internal wle_fnEditTSCtrl_getOrthoFOV mwle_fnEditTSCtrl_getOrthoFOV;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnEditTSCtrl_getOrthoFOV([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder edittsctrl);
static internal wle_fnEditTSCtrl_setOrthoFOV mwle_fnEditTSCtrl_setOrthoFOV;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnEditTSCtrl_setOrthoFOV([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder edittsctrl, [In] float fov);
static internal wle_fnEditTSCtrl_renderBox mwle_fnEditTSCtrl_renderBox;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnEditTSCtrl_renderBox([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder edittsctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pos, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder size);
static internal wle_fnEditTSCtrl_renderSphere mwle_fnEditTSCtrl_renderSphere;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnEditTSCtrl_renderSphere([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder edittsctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pos, [In] float radius, [In] int sphereLevel);
static internal wle_fnEditTSCtrl_renderCircle mwle_fnEditTSCtrl_renderCircle;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnEditTSCtrl_renderCircle([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder edittsctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pos, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder normal, [In] float radius, [In] int segments);
static internal wle_fnEditTSCtrl_renderTriangle mwle_fnEditTSCtrl_renderTriangle;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnEditTSCtrl_renderTriangle([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder edittsctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder b, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder c);
static internal wle_fnEditTSCtrl_renderLine mwle_fnEditTSCtrl_renderLine;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnEditTSCtrl_renderLine([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder edittsctrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder start, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder end, [In] float lineWidth);
static internal wle_fnEditTSCtrl_getGizmo mwle_fnEditTSCtrl_getGizmo;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnEditTSCtrl_getGizmo([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder edittsctrl);
static internal wle_fnEditTSCtrl_isMiddleMouseDown mwle_fnEditTSCtrl_isMiddleMouseDown;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnEditTSCtrl_isMiddleMouseDown([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder edittsctrl);
static internal wle_fnGuiMissionAreaCtrl_setMissionArea mwle_fnGuiMissionAreaCtrl_setMissionArea;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMissionAreaCtrl_setMissionArea([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimissionareactrl, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder area);
static internal wle_fnGuiMissionAreaCtrl_updateTerrain mwle_fnGuiMissionAreaCtrl_updateTerrain;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMissionAreaCtrl_updateTerrain([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimissionareactrl);
static internal wle_fnMECreateUndoAction_addObject mwle_fnMECreateUndoAction_addObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMECreateUndoAction_addObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder mecreateundoaction, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnMEDeleteUndoAction_deleteObject mwle_fnMEDeleteUndoAction_deleteObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMEDeleteUndoAction_deleteObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder medeleteundoaction, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnWorldEditor_ignoreObjClass mwle_fnWorldEditor_ignoreObjClass;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_ignoreObjClass([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a12, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a13, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a14, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a15, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a16, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a17, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a18, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a19);
static internal wle_fnWorldEditor_clearIgnoreList mwle_fnWorldEditor_clearIgnoreList;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_clearIgnoreList([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor);
static internal wle_fnWorldEditor_clearSelection mwle_fnWorldEditor_clearSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_clearSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor);
static internal wle_fnWorldEditor_getActiveSelection mwle_fnWorldEditor_getActiveSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnWorldEditor_getActiveSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor);
static internal wle_fnWorldEditor_setActiveSelection mwle_fnWorldEditor_setActiveSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_setActiveSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnWorldEditor_selectObject mwle_fnWorldEditor_selectObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_selectObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnWorldEditor_unselectObject mwle_fnWorldEditor_unselectObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_unselectObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnWorldEditor_invalidateSelectionCentroid mwle_fnWorldEditor_invalidateSelectionCentroid;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_invalidateSelectionCentroid([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor);
static internal wle_fnWorldEditor_getSelectionSize mwle_fnWorldEditor_getSelectionSize;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnWorldEditor_getSelectionSize([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor);
static internal wle_fnWorldEditor_getSelectedObject mwle_fnWorldEditor_getSelectedObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnWorldEditor_getSelectedObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnWorldEditor_getSelectionRadius mwle_fnWorldEditor_getSelectionRadius;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnWorldEditor_getSelectionRadius([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor);
static internal wle_fnWorldEditor_getSelectionCentroid mwle_fnWorldEditor_getSelectionCentroid;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_getSelectionCentroid([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnWorldEditor_getSelectionExtent mwle_fnWorldEditor_getSelectionExtent;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_getSelectionExtent([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnWorldEditor_dropSelection mwle_fnWorldEditor_dropSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_dropSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnWorldEditor_cutSelection mwle_fnWorldEditor_cutSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_cutSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor);
static internal wle_fnWorldEditor_copySelection mwle_fnWorldEditor_copySelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_copySelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor);
static internal wle_fnWorldEditor_pasteSelection mwle_fnWorldEditor_pasteSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_pasteSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor);
static internal wle_fnWorldEditor_canPasteSelection mwle_fnWorldEditor_canPasteSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnWorldEditor_canPasteSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor);
static internal wle_fnWorldEditor_hideObject mwle_fnWorldEditor_hideObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_hideObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnWorldEditor_hideSelection mwle_fnWorldEditor_hideSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_hideSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnWorldEditor_lockSelection mwle_fnWorldEditor_lockSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_lockSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnWorldEditor_alignByBounds mwle_fnWorldEditor_alignByBounds;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_alignByBounds([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnWorldEditor_alignByAxis mwle_fnWorldEditor_alignByAxis;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_alignByAxis([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnWorldEditor_resetSelectedRotation mwle_fnWorldEditor_resetSelectedRotation;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_resetSelectedRotation([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor);
static internal wle_fnWorldEditor_resetSelectedScale mwle_fnWorldEditor_resetSelectedScale;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_resetSelectedScale([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor);
static internal wle_fnWorldEditor_redirectConsole mwle_fnWorldEditor_redirectConsole;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_redirectConsole([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnWorldEditor_addUndoState mwle_fnWorldEditor_addUndoState;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_addUndoState([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor);
static internal wle_fnWorldEditor_getSoftSnap mwle_fnWorldEditor_getSoftSnap;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnWorldEditor_getSoftSnap([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor);
static internal wle_fnWorldEditor_setSoftSnap mwle_fnWorldEditor_setSoftSnap;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_setSoftSnap([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnWorldEditor_getSoftSnapSize mwle_fnWorldEditor_getSoftSnapSize;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnWorldEditor_getSoftSnapSize([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor);
static internal wle_fnWorldEditor_setSoftSnapSize mwle_fnWorldEditor_setSoftSnapSize;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_setSoftSnapSize([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnWorldEditor_softSnapSizeByBounds mwle_fnWorldEditor_softSnapSizeByBounds;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_softSnapSizeByBounds([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnWorldEditor_getSoftSnapBackfaceTolerance mwle_fnWorldEditor_getSoftSnapBackfaceTolerance;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnWorldEditor_getSoftSnapBackfaceTolerance([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor);
static internal wle_fnWorldEditor_setSoftSnapBackfaceTolerance mwle_fnWorldEditor_setSoftSnapBackfaceTolerance;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_setSoftSnapBackfaceTolerance([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnWorldEditor_softSnapRender mwle_fnWorldEditor_softSnapRender;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_softSnapRender([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnWorldEditor_softSnapRenderTriangle mwle_fnWorldEditor_softSnapRenderTriangle;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_softSnapRenderTriangle([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnWorldEditor_softSnapDebugRender mwle_fnWorldEditor_softSnapDebugRender;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_softSnapDebugRender([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnWorldEditor_transformSelection mwle_fnWorldEditor_transformSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_transformSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a12);
static internal wle_fnWorldEditor_colladaExportSelection mwle_fnWorldEditor_colladaExportSelection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_colladaExportSelection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnWorldEditor_makeSelectionPrefab mwle_fnWorldEditor_makeSelectionPrefab;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_makeSelectionPrefab([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnWorldEditor_explodeSelectedPrefab mwle_fnWorldEditor_explodeSelectedPrefab;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_explodeSelectedPrefab([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor);
static internal wle_fnWorldEditor_mountRelative mwle_fnWorldEditor_mountRelative;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_mountRelative([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnWorldEditor_getSoftSnapAlignment mwle_fnWorldEditor_getSoftSnapAlignment;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnWorldEditor_getSoftSnapAlignment([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor);
static internal wle_fnWorldEditor_setSoftSnapAlignment mwle_fnWorldEditor_setSoftSnapAlignment;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_setSoftSnapAlignment([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [In] int type);
static internal wle_fnWorldEditor_getTerrainSnapAlignment mwle_fnWorldEditor_getTerrainSnapAlignment;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnWorldEditor_getTerrainSnapAlignment([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor);
static internal wle_fnWorldEditor_setTerrainSnapAlignment mwle_fnWorldEditor_setTerrainSnapAlignment;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_setTerrainSnapAlignment([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [In] int alignment);
static internal wle_fnWorldEditor_createPolyhedralObject mwle_fnWorldEditor_createPolyhedralObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_createPolyhedralObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder className, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder geometryProvider,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnWorldEditor_createConvexShapeFrom mwle_fnWorldEditor_createConvexShapeFrom;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnWorldEditor_createConvexShapeFrom([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder worldeditor, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder polyObject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnLangTable_addLanguage mwle_fnLangTable_addLanguage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnLangTable_addLanguage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder langtable, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnLangTable_getString mwle_fnLangTable_getString;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnLangTable_getString([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder langtable, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnLangTable_setDefaultLanguage mwle_fnLangTable_setDefaultLanguage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnLangTable_setDefaultLanguage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder langtable, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnLangTable_setCurrentLanguage mwle_fnLangTable_setCurrentLanguage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnLangTable_setCurrentLanguage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder langtable, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnLangTable_getCurrentLanguage mwle_fnLangTable_getCurrentLanguage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnLangTable_getCurrentLanguage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder langtable);
static internal wle_fnLangTable_getLangName mwle_fnLangTable_getLangName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnLangTable_getLangName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder langtable, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnLangTable_getNumLang mwle_fnLangTable_getNumLang;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnLangTable_getNumLang([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder langtable);
static internal wle_fn__setInteriorFocusedDebug mwle_fn__setInteriorFocusedDebug;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__setInteriorFocusedDebug([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1);
static internal wle_fn__isPointInside mwle_fn__isPointInside;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__isPointInside([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fn_setInteriorRenderMode mwle_fn_setInteriorRenderMode;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_setInteriorRenderMode([In] int mode);
static internal wle_fnPathedInterior_setPathPosition mwle_fnPathedInterior_setPathPosition;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPathedInterior_setPathPosition([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pathedinterior, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnPathedInterior_setTargetPosition mwle_fnPathedInterior_setTargetPosition;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPathedInterior_setTargetPosition([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pathedinterior, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fn_setLightManager mwle_fn_setLightManager;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_setLightManager([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name);
static internal wle_fn_lightScene mwle_fn_lightScene;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_lightScene([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder completeCallbackFn, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder mode);
static internal wle_fn_getLightManagerNames mwle_fn_getLightManagerNames;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getLightManagerNames([MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_getActiveLightManager mwle_fn_getActiveLightManager;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getActiveLightManager([MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_resetLightManager mwle_fn_resetLightManager;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_resetLightManager();
static internal wle_fn__setShadowVizLight mwle_fn__setShadowVizLight;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__setShadowVizLight([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnMaterial_flush mwle_fnMaterial_flush;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMaterial_flush([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder material);
static internal wle_fnMaterial_reload mwle_fnMaterial_reload;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMaterial_reload([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder material);
static internal wle_fnMaterial_dumpInstances mwle_fnMaterial_dumpInstances;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMaterial_dumpInstances([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder material);
static internal wle_fnMaterial_getAnimFlags mwle_fnMaterial_getAnimFlags;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMaterial_getAnimFlags([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder material, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnMaterial_getFilename mwle_fnMaterial_getFilename;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMaterial_getFilename([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder material,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnMaterial_isAutoGenerated mwle_fnMaterial_isAutoGenerated;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnMaterial_isAutoGenerated([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder material);
static internal wle_fnMaterial_setAutoGenerated mwle_fnMaterial_setAutoGenerated;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMaterial_setAutoGenerated([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder material, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fn__addMaterialMapping mwle_fn__addMaterialMapping;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__addMaterialMapping([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fn__getMaterialMapping mwle_fn__getMaterialMapping;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__getMaterialMapping([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn__getRandom mwle_fn__getRandom;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn__getRandom([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fn_VectorAdd mwle_fn_VectorAdd;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_VectorAdd([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder b,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_VectorSub mwle_fn_VectorSub;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_VectorSub([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder b,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_VectorScale mwle_fn_VectorScale;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_VectorScale([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a, [In] float scalar,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_VectorNormalize mwle_fn_VectorNormalize;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_VectorNormalize([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder v,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_VectorDot mwle_fn_VectorDot;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_VectorDot([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder b);
static internal wle_fn_VectorCross mwle_fn_VectorCross;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_VectorCross([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder b,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_VectorDist mwle_fn_VectorDist;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_VectorDist([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder b);
static internal wle_fn_VectorLen mwle_fn_VectorLen;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_VectorLen([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder v);
static internal wle_fn_VectorOrthoBasis mwle_fn_VectorOrthoBasis;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_VectorOrthoBasis([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aa,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_VectorLerp mwle_fn_VectorLerp;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_VectorLerp([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder b, [In] float t,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_MatrixCreate mwle_fn_MatrixCreate;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_MatrixCreate([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder position, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder orientation,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_MatrixCreateFromEuler mwle_fn_MatrixCreateFromEuler;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_MatrixCreateFromEuler([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder angles,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_MatrixMultiply mwle_fn_MatrixMultiply;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_MatrixMultiply([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder left, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder right,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_MatrixMulVector mwle_fn_MatrixMulVector;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_MatrixMulVector([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder transform, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder vector,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_MatrixMulPoint mwle_fn_MatrixMulPoint;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_MatrixMulPoint([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder transform, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder point,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_getBoxCenter mwle_fn_getBoxCenter;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getBoxCenter([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder box,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_setRandomSeed mwle_fn_setRandomSeed;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_setRandomSeed([In] int seed);
static internal wle_fn_getRandomSeed mwle_fn_getRandomSeed;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_getRandomSeed();
static internal wle_fn_mSolveQuadratic mwle_fn_mSolveQuadratic;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_mSolveQuadratic([In] float a, [In] float b, [In] float c,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_mSolveCubic mwle_fn_mSolveCubic;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_mSolveCubic([In] float a, [In] float b, [In] float c, [In] float d,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_mSolveQuartic mwle_fn_mSolveQuartic;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_mSolveQuartic([In] float a, [In] float b, [In] float c, [In] float d, [In] float e,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_mFloor mwle_fn_mFloor;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_mFloor([In] float v);
static internal wle_fn_mRound mwle_fn_mRound;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_mRound([In] float v);
static internal wle_fn_mCeil mwle_fn_mCeil;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_mCeil([In] float v);
static internal wle_fn_mFloatLength mwle_fn_mFloatLength;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_mFloatLength([In] float v, [In] uint precision,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_mAbs mwle_fn_mAbs;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_mAbs([In] float v);
static internal wle_fn_mFMod mwle_fn_mFMod;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_mFMod([In] float v, [In] float d);
static internal wle_fn_mSqrt mwle_fn_mSqrt;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_mSqrt([In] float v);
static internal wle_fn_mPow mwle_fn_mPow;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_mPow([In] float v, [In] float p);
static internal wle_fn_mLog mwle_fn_mLog;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_mLog([In] float v);
static internal wle_fn_mSin mwle_fn_mSin;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_mSin([In] float v);
static internal wle_fn_mCos mwle_fn_mCos;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_mCos([In] float v);
static internal wle_fn_mTan mwle_fn_mTan;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_mTan([In] float v);
static internal wle_fn_mAsin mwle_fn_mAsin;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_mAsin([In] float v);
static internal wle_fn_mAcos mwle_fn_mAcos;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_mAcos([In] float v);
static internal wle_fn_mAtan mwle_fn_mAtan;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_mAtan([In] float rise, [In] float run);
static internal wle_fn_mRadToDeg mwle_fn_mRadToDeg;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_mRadToDeg([In] float radians);
static internal wle_fn_mDegToRad mwle_fn_mDegToRad;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_mDegToRad([In] float degrees);
static internal wle_fn_mClamp mwle_fn_mClamp;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_mClamp([In] float v, [In] float min, [In] float max);
static internal wle_fn_mSaturate mwle_fn_mSaturate;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_mSaturate([In] float v);
static internal wle_fn_getMax mwle_fn_getMax;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_getMax([In] float v1, [In] float v2);
static internal wle_fn_getMin mwle_fn_getMin;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_getMin([In] float v1, [In] float v2);
static internal wle_fn_mLerp mwle_fn_mLerp;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_mLerp([In] float v1, [In] float v2, [In] float time);
static internal wle_fn_mPi mwle_fn_mPi;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_mPi();
static internal wle_fn_m2Pi mwle_fn_m2Pi;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_m2Pi();
static internal wle_fn_mIsPow2 mwle_fn_mIsPow2;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_mIsPow2([In] int v);
static internal wle_fnSimResponseCurve_addPoint mwle_fnSimResponseCurve_addPoint;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimResponseCurve_addPoint([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simresponsecurve, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnSimResponseCurve_getValue mwle_fnSimResponseCurve_getValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnSimResponseCurve_getValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simresponsecurve, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnSimResponseCurve_clear mwle_fnSimResponseCurve_clear;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSimResponseCurve_clear([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder simresponsecurve);
static internal wle_fn__getTemporaryDirectory mwle_fn__getTemporaryDirectory;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__getTemporaryDirectory([MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn__getTemporaryFileName mwle_fn__getTemporaryFileName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__getTemporaryFileName([MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_profilerMarkerEnable mwle_fn_profilerMarkerEnable;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_profilerMarkerEnable([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder markerName, [In] bool enable);
static internal wle_fn_profilerEnable mwle_fn_profilerEnable;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_profilerEnable([In] bool enable);
static internal wle_fn_profilerDump mwle_fn_profilerDump;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_profilerDump();
static internal wle_fn_profilerDumpToFile mwle_fn_profilerDumpToFile;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_profilerDumpToFile([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName);
static internal wle_fn_profilerReset mwle_fn_profilerReset;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_profilerReset();
static internal wle_fnMenuBar_attachToCanvas mwle_fnMenuBar_attachToCanvas;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMenuBar_attachToCanvas([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menubar, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnMenuBar_removeFromCanvas mwle_fnMenuBar_removeFromCanvas;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMenuBar_removeFromCanvas([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menubar);
static internal wle_fnMenuBar_insert mwle_fnMenuBar_insert;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMenuBar_insert([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder menubar, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnPopupMenu_insertItem mwle_fnPopupMenu_insertItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPopupMenu_insertItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder popupmenu, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4);
static internal wle_fnPopupMenu_removeItem mwle_fnPopupMenu_removeItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPopupMenu_removeItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder popupmenu, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnPopupMenu_insertSubMenu mwle_fnPopupMenu_insertSubMenu;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPopupMenu_insertSubMenu([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder popupmenu, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4);
static internal wle_fnPopupMenu_setItem mwle_fnPopupMenu_setItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPopupMenu_setItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder popupmenu, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4);
static internal wle_fnPopupMenu_enableItem mwle_fnPopupMenu_enableItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPopupMenu_enableItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder popupmenu, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnPopupMenu_checkItem mwle_fnPopupMenu_checkItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPopupMenu_checkItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder popupmenu, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnPopupMenu_checkRadioItem mwle_fnPopupMenu_checkRadioItem;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPopupMenu_checkRadioItem([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder popupmenu, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4);
static internal wle_fnPopupMenu_isItemChecked mwle_fnPopupMenu_isItemChecked;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPopupMenu_isItemChecked([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder popupmenu, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnPopupMenu_getItemCount mwle_fnPopupMenu_getItemCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPopupMenu_getItemCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder popupmenu);
static internal wle_fnPopupMenu_attachToMenuBar mwle_fnPopupMenu_attachToMenuBar;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPopupMenu_attachToMenuBar([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder popupmenu, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4);
static internal wle_fnPopupMenu_removeFromMenuBar mwle_fnPopupMenu_removeFromMenuBar;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPopupMenu_removeFromMenuBar([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder popupmenu);
static internal wle_fnPopupMenu_showPopup mwle_fnPopupMenu_showPopup;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPopupMenu_showPopup([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder popupmenu, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4);
static internal wle_fn_messageBox mwle_fn_messageBox;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_messageBox([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder title, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder message, [In] int buttons, [In] int icons);
static internal wle_fn__isJoystickEnabled mwle_fn__isJoystickEnabled;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__isJoystickEnabled();
static internal wle_fn__enableXInput mwle_fn__enableXInput;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__enableXInput();
static internal wle_fn__isXInputConnected mwle_fn__isXInputConnected;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__isXInputConnected([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1);
static internal wle_fn__getXInputState mwle_fn__getXInputState;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__getXInputState([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fn__rumble mwle_fn__rumble;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__rumble([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnFileDialog_Execute mwle_fnFileDialog_Execute;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnFileDialog_Execute([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filedialog);
static internal wle_fn__debug_debugbreak mwle_fn__debug_debugbreak;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__debug_debugbreak();
static internal wle_fn_dumpRandomNormalMap mwle_fn_dumpRandomNormalMap;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_dumpRandomNormalMap();
static internal wle_fnPostEffect_reload mwle_fnPostEffect_reload;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPostEffect_reload([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder posteffect);
static internal wle_fnPostEffect_enable mwle_fnPostEffect_enable;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPostEffect_enable([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder posteffect);
static internal wle_fnPostEffect_disable mwle_fnPostEffect_disable;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPostEffect_disable([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder posteffect);
static internal wle_fnPostEffect_toggle mwle_fnPostEffect_toggle;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPostEffect_toggle([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder posteffect);
static internal wle_fnPostEffect_isEnabled mwle_fnPostEffect_isEnabled;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPostEffect_isEnabled([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder posteffect);
static internal wle_fnPostEffect_setTexture mwle_fnPostEffect_setTexture;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPostEffect_setTexture([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder posteffect, [In] int index, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder filePath);
static internal wle_fnPostEffect_setShaderConst mwle_fnPostEffect_setShaderConst;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPostEffect_setShaderConst([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder posteffect, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder value);
static internal wle_fnPostEffect_getAspectRatio mwle_fnPostEffect_getAspectRatio;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnPostEffect_getAspectRatio([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder posteffect);
static internal wle_fnPostEffect_dumpShaderDisassembly mwle_fnPostEffect_dumpShaderDisassembly;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPostEffect_dumpShaderDisassembly([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder posteffect,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnPostEffect_setShaderMacro mwle_fnPostEffect_setShaderMacro;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPostEffect_setShaderMacro([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder posteffect, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder key, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder value);
static internal wle_fnPostEffect_removeShaderMacro mwle_fnPostEffect_removeShaderMacro;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPostEffect_removeShaderMacro([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder posteffect, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder key);
static internal wle_fnPostEffect_clearShaderMacros mwle_fnPostEffect_clearShaderMacros;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPostEffect_clearShaderMacros([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder posteffect);
static internal wle_fnRenderBinManager_getBinType mwle_fnRenderBinManager_getBinType;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnRenderBinManager_getBinType([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder renderbinmanager,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnRenderPassManager_getManagerCount mwle_fnRenderPassManager_getManagerCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnRenderPassManager_getManagerCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder renderpassmanager);
static internal wle_fnRenderPassManager_getManager mwle_fnRenderPassManager_getManager;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnRenderPassManager_getManager([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder renderpassmanager, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnRenderPassManager_addManager mwle_fnRenderPassManager_addManager;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnRenderPassManager_addManager([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder renderpassmanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder renderBin);
static internal wle_fnRenderPassManager_removeManager mwle_fnRenderPassManager_removeManager;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnRenderPassManager_removeManager([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder renderpassmanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder renderBin);
static internal wle_fnRenderPassStateToken_enable mwle_fnRenderPassStateToken_enable;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnRenderPassStateToken_enable([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder renderpassstatetoken);
static internal wle_fnRenderPassStateToken_disable mwle_fnRenderPassStateToken_disable;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnRenderPassStateToken_disable([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder renderpassstatetoken);
static internal wle_fnRenderPassStateToken_toggle mwle_fnRenderPassStateToken_toggle;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnRenderPassStateToken_toggle([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder renderpassstatetoken);
static internal wle_fn__clearClientPaths mwle_fn__clearClientPaths;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__clearClientPaths();
static internal wle_fn_setReflectFormat mwle_fn_setReflectFormat;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_setReflectFormat([In] int format);
static internal wle_fn_containerBoxEmpty mwle_fn_containerBoxEmpty;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_containerBoxEmpty([In] uint mask, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder center, [In] float xRadius, [In] float yRadius, [In] float zRadius, [In] bool useClientContainer);
static internal wle_fn_initContainerRadiusSearch mwle_fn_initContainerRadiusSearch;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_initContainerRadiusSearch([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pos, [In] float radius, [In] uint mask, [In] bool useClientContainer);
static internal wle_fn_initContainerTypeSearch mwle_fn_initContainerTypeSearch;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_initContainerTypeSearch([In] uint mask, [In] bool useClientContainer);
static internal wle_fn_containerSearchNext mwle_fn_containerSearchNext;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_containerSearchNext([In] bool useClientContainer,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_containerSearchCurrDist mwle_fn_containerSearchCurrDist;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_containerSearchCurrDist([In] bool useClientContainer);
static internal wle_fn_containerSearchCurrRadiusDist mwle_fn_containerSearchCurrRadiusDist;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_containerSearchCurrRadiusDist([In] bool useClientContainer);
static internal wle_fn_containerRayCast mwle_fn_containerRayCast;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_containerRayCast([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder start, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder end, [In] uint mask, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pExempt, [In] bool useClientContainer,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_sceneDumpZoneStates mwle_fn_sceneDumpZoneStates;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_sceneDumpZoneStates([In] bool updateFirst);
static internal wle_fn_sceneGetZoneOwner mwle_fn_sceneGetZoneOwner;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_sceneGetZoneOwner([In] uint zoneId,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSceneObject_getType mwle_fnSceneObject_getType;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSceneObject_getType([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject);
static internal wle_fnSceneObject_mountObject mwle_fnSceneObject_mountObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSceneObject_mountObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder objB, [In] int slot, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder txfm);
static internal wle_fnSceneObject_unmountObject mwle_fnSceneObject_unmountObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSceneObject_unmountObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder target);
static internal wle_fnSceneObject_unmount mwle_fnSceneObject_unmount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSceneObject_unmount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject);
static internal wle_fnSceneObject_isMounted mwle_fnSceneObject_isMounted;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSceneObject_isMounted([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject);
static internal wle_fnSceneObject_getObjectMount mwle_fnSceneObject_getObjectMount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSceneObject_getObjectMount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject);
static internal wle_fnSceneObject_getMountedObjectCount mwle_fnSceneObject_getMountedObjectCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSceneObject_getMountedObjectCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject);
static internal wle_fnSceneObject_getMountedObject mwle_fnSceneObject_getMountedObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSceneObject_getMountedObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject, [In] int slot);
static internal wle_fnSceneObject_getMountedObjectNode mwle_fnSceneObject_getMountedObjectNode;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSceneObject_getMountedObjectNode([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject, [In] int slot);
static internal wle_fnSceneObject_getMountNodeObject mwle_fnSceneObject_getMountNodeObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSceneObject_getMountNodeObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject, [In] int node);
static internal wle_fnSceneObject_getTransform mwle_fnSceneObject_getTransform;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSceneObject_getTransform([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSceneObject_getInverseTransform mwle_fnSceneObject_getInverseTransform;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSceneObject_getInverseTransform([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSceneObject_getPosition mwle_fnSceneObject_getPosition;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSceneObject_getPosition([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSceneObject_getEulerRotation mwle_fnSceneObject_getEulerRotation;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSceneObject_getEulerRotation([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSceneObject_getForwardVector mwle_fnSceneObject_getForwardVector;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSceneObject_getForwardVector([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSceneObject_getRightVector mwle_fnSceneObject_getRightVector;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSceneObject_getRightVector([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSceneObject_getUpVector mwle_fnSceneObject_getUpVector;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSceneObject_getUpVector([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSceneObject_setTransform mwle_fnSceneObject_setTransform;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSceneObject_setTransform([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder txfm);
static internal wle_fnSceneObject_getScale mwle_fnSceneObject_getScale;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSceneObject_getScale([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSceneObject_setScale mwle_fnSceneObject_setScale;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSceneObject_setScale([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder scale);
static internal wle_fnSceneObject_getWorldBox mwle_fnSceneObject_getWorldBox;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSceneObject_getWorldBox([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSceneObject_getWorldBoxCenter mwle_fnSceneObject_getWorldBoxCenter;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSceneObject_getWorldBoxCenter([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSceneObject_getObjectBox mwle_fnSceneObject_getObjectBox;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSceneObject_getObjectBox([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSceneObject_isGlobalBounds mwle_fnSceneObject_isGlobalBounds;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSceneObject_isGlobalBounds([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sceneobject);
static internal wle_fn_pathOnMissionLoadDone mwle_fn_pathOnMissionLoadDone;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_pathOnMissionLoadDone();
static internal wle_fnSFXController_getCurrentSlot mwle_fnSFXController_getCurrentSlot;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSFXController_getCurrentSlot([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxcontroller);
static internal wle_fnSFXController_setCurrentSlot mwle_fnSFXController_setCurrentSlot;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSFXController_setCurrentSlot([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxcontroller, [In] int index);
static internal wle_fnSFXParameter_getParameterName mwle_fnSFXParameter_getParameterName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSFXParameter_getParameterName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxparameter,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSFXParameter_reset mwle_fnSFXParameter_reset;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSFXParameter_reset([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxparameter);
static internal wle_fnSFXProfile_getSoundDuration mwle_fnSFXProfile_getSoundDuration;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnSFXProfile_getSoundDuration([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxprofile);
static internal wle_fnSFXSource_setTransform mwle_fnSFXSource_setTransform;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSFXSource_setTransform([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnSFXSource_play mwle_fnSFXSource_play;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSFXSource_play([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource, [In] float fadeInTime);
static internal wle_fnSFXSource_stop mwle_fnSFXSource_stop;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSFXSource_stop([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource, [In] float fadeOutTime);
static internal wle_fnSFXSource_pause mwle_fnSFXSource_pause;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSFXSource_pause([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource, [In] float fadeOutTime);
static internal wle_fnSFXSource_isPlaying mwle_fnSFXSource_isPlaying;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSFXSource_isPlaying([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource);
static internal wle_fnSFXSource_isPaused mwle_fnSFXSource_isPaused;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSFXSource_isPaused([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource);
static internal wle_fnSFXSource_isStopped mwle_fnSFXSource_isStopped;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSFXSource_isStopped([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource);
static internal wle_fnSFXSource_getStatus mwle_fnSFXSource_getStatus;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSFXSource_getStatus([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource);
static internal wle_fnSFXSource_getVolume mwle_fnSFXSource_getVolume;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnSFXSource_getVolume([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource);
static internal wle_fnSFXSource_setVolume mwle_fnSFXSource_setVolume;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSFXSource_setVolume([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource, [In] float volume);
static internal wle_fnSFXSource_getAttenuatedVolume mwle_fnSFXSource_getAttenuatedVolume;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnSFXSource_getAttenuatedVolume([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource);
static internal wle_fnSFXSource_getFadeInTime mwle_fnSFXSource_getFadeInTime;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnSFXSource_getFadeInTime([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource);
static internal wle_fnSFXSource_getFadeOutTime mwle_fnSFXSource_getFadeOutTime;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnSFXSource_getFadeOutTime([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource);
static internal wle_fnSFXSource_setFadeTimes mwle_fnSFXSource_setFadeTimes;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSFXSource_setFadeTimes([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource, [In] float fadeInTime, [In] float fadeOutTime);
static internal wle_fnSFXSource_getPitch mwle_fnSFXSource_getPitch;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnSFXSource_getPitch([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource);
static internal wle_fnSFXSource_setPitch mwle_fnSFXSource_setPitch;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSFXSource_setPitch([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource, [In] float pitch);
static internal wle_fnSFXSource_setCone mwle_fnSFXSource_setCone;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSFXSource_setCone([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource, [In] float innerAngle, [In] float outerAngle, [In] float outsideVolume);
static internal wle_fnSFXSource_getParameterCount mwle_fnSFXSource_getParameterCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSFXSource_getParameterCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource);
static internal wle_fnSFXSource_addParameter mwle_fnSFXSource_addParameter;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSFXSource_addParameter([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder parameter);
static internal wle_fnSFXSource_removeParameter mwle_fnSFXSource_removeParameter;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSFXSource_removeParameter([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder parameter);
static internal wle_fnSFXSource_getParameter mwle_fnSFXSource_getParameter;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSFXSource_getParameter([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSFXSource_addMarker mwle_fnSFXSource_addMarker;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSFXSource_addMarker([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder sfxsource, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name, [In] float pos);
static internal wle_fn__sfxCreateSource mwle_fn__sfxCreateSource;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__sfxCreateSource([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5);
static internal wle_fn__sfxPlay mwle_fn__sfxPlay;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__sfxPlay([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4);
static internal wle_fn__sfxPlayOnce mwle_fn__sfxPlayOnce;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__sfxPlayOnce([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5);
static internal wle_fn_sfxGetAvailableDevices mwle_fn_sfxGetAvailableDevices;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_sfxGetAvailableDevices([MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_sfxCreateDevice mwle_fn_sfxCreateDevice;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_sfxCreateDevice([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder provider, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder device, [In] bool useHardware, [In] int maxBuffers);
static internal wle_fn_sfxDeleteDevice mwle_fn_sfxDeleteDevice;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_sfxDeleteDevice();
static internal wle_fn_sfxGetDeviceInfo mwle_fn_sfxGetDeviceInfo;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_sfxGetDeviceInfo([MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_sfxStop mwle_fn_sfxStop;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_sfxStop([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder source);
static internal wle_fn_sfxStopAndDelete mwle_fn_sfxStopAndDelete;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_sfxStopAndDelete([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder source);
static internal wle_fn_sfxDeleteWhenStopped mwle_fn_sfxDeleteWhenStopped;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_sfxDeleteWhenStopped([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder source);
static internal wle_fn_sfxGetDistanceModel mwle_fn_sfxGetDistanceModel;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn_sfxGetDistanceModel();
static internal wle_fn_sfxSetDistanceModel mwle_fn_sfxSetDistanceModel;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_sfxSetDistanceModel([In] int model);
static internal wle_fn_sfxGetDopplerFactor mwle_fn_sfxGetDopplerFactor;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_sfxGetDopplerFactor();
static internal wle_fn_sfxSetDopplerFactor mwle_fn_sfxSetDopplerFactor;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_sfxSetDopplerFactor([In] float value);
static internal wle_fn_sfxGetRolloffFactor mwle_fn_sfxGetRolloffFactor;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_sfxGetRolloffFactor();
static internal wle_fn_sfxSetRolloffFactor mwle_fn_sfxSetRolloffFactor;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_sfxSetRolloffFactor([In] float value);
static internal wle_fn_sfxDumpSources mwle_fn_sfxDumpSources;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_sfxDumpSources([In] bool includeGroups);
static internal wle_fn_sfxDumpSourcesToString mwle_fn_sfxDumpSourcesToString;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_sfxDumpSourcesToString([In] bool includeGroups,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnActionMap_bind mwle_fnActionMap_bind;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnActionMap_bind([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder actionmap, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9);
static internal wle_fnActionMap_bindObj mwle_fnActionMap_bindObj;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnActionMap_bindObj([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder actionmap, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10);
static internal wle_fn_getCurrentActionMap mwle_fn_getCurrentActionMap;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getCurrentActionMap([MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnActionMap_bindCmd mwle_fnActionMap_bindCmd;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnActionMap_bindCmd([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder actionmap, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder device, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder action, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder makeCmd, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder breakCmd);
static internal wle_fnActionMap_unbind mwle_fnActionMap_unbind;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnActionMap_unbind([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder actionmap, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder device, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder action);
static internal wle_fnActionMap_unbindObj mwle_fnActionMap_unbindObj;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnActionMap_unbindObj([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder actionmap, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder device, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder action, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder obj);
static internal wle_fnActionMap_save mwle_fnActionMap_save;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnActionMap_save([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder actionmap, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName, [In] bool append);
static internal wle_fnActionMap_push mwle_fnActionMap_push;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnActionMap_push([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder actionmap);
static internal wle_fnActionMap_pop mwle_fnActionMap_pop;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnActionMap_pop([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder actionmap);
static internal wle_fnActionMap_getBinding mwle_fnActionMap_getBinding;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnActionMap_getBinding([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder actionmap, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder command,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnActionMap_getCommand mwle_fnActionMap_getCommand;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnActionMap_getCommand([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder actionmap, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder device, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder action,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnActionMap_isInverted mwle_fnActionMap_isInverted;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnActionMap_isInverted([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder actionmap, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder device, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder action);
static internal wle_fnActionMap_getScale mwle_fnActionMap_getScale;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnActionMap_getScale([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder actionmap, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder device, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder action);
static internal wle_fnActionMap_getDeadZone mwle_fnActionMap_getDeadZone;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnActionMap_getDeadZone([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder actionmap, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder device, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder action,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnNetConnection_transmitPaths mwle_fnNetConnection_transmitPaths;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnNetConnection_transmitPaths([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netconnection);
static internal wle_fnNetConnection_clearPaths mwle_fnNetConnection_clearPaths;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnNetConnection_clearPaths([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netconnection);
static internal wle_fnNetConnection_getAddress mwle_fnNetConnection_getAddress;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnNetConnection_getAddress([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netconnection,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnNetConnection_setSimulatedNetParams mwle_fnNetConnection_setSimulatedNetParams;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnNetConnection_setSimulatedNetParams([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netconnection, [In] float packetLoss, [In] int delay);
static internal wle_fnNetConnection_getPing mwle_fnNetConnection_getPing;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnNetConnection_getPing([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netconnection);
static internal wle_fnNetConnection_getPacketLoss mwle_fnNetConnection_getPacketLoss;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnNetConnection_getPacketLoss([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netconnection);
static internal wle_fnNetConnection_checkMaxRate mwle_fnNetConnection_checkMaxRate;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnNetConnection_checkMaxRate([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netconnection);
static internal wle_fnNetConnection_resolveGhostID mwle_fnNetConnection_resolveGhostID;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnNetConnection_resolveGhostID([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netconnection, [In] int ghostID);
static internal wle_fnNetConnection_resolveObjectFromGhostIndex mwle_fnNetConnection_resolveObjectFromGhostIndex;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnNetConnection_resolveObjectFromGhostIndex([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netconnection, [In] int ghostID);
static internal wle_fnNetConnection_getGhostID mwle_fnNetConnection_getGhostID;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnNetConnection_getGhostID([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netconnection, [In] int realID);
static internal wle_fnNetConnection_connect mwle_fnNetConnection_connect;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnNetConnection_connect([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netconnection, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder remoteAddress);
static internal wle_fnNetConnection_connectLocal mwle_fnNetConnection_connectLocal;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnNetConnection_connectLocal([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netconnection,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnNetConnection_getGhostsActive mwle_fnNetConnection_getGhostsActive;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnNetConnection_getGhostsActive([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netconnection);
static internal wle_fnNetObject_scopeToClient mwle_fnNetObject_scopeToClient;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnNetObject_scopeToClient([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder client);
static internal wle_fnNetObject_clearScopeToClient mwle_fnNetObject_clearScopeToClient;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnNetObject_clearScopeToClient([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netobject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder client);
static internal wle_fnNetObject_setScopeAlways mwle_fnNetObject_setScopeAlways;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnNetObject_setScopeAlways([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netobject);
static internal wle_fnNetObject_getGhostID mwle_fnNetObject_getGhostID;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnNetObject_getGhostID([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netobject);
static internal wle_fnNetObject_getClientObject mwle_fnNetObject_getClientObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnNetObject_getClientObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netobject);
static internal wle_fnNetObject_getServerObject mwle_fnNetObject_getServerObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnNetObject_getServerObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netobject);
static internal wle_fnNetObject_isClientObject mwle_fnNetObject_isClientObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnNetObject_isClientObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netobject);
static internal wle_fnNetObject_isServerObject mwle_fnNetObject_isServerObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnNetObject_isServerObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netobject);
static internal wle_fn__aiAddPlayer mwle_fn__aiAddPlayer;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__aiAddPlayer([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnAIClient_setMoveSpeed mwle_fnAIClient_setMoveSpeed;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIClient_setMoveSpeed([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiclient, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnAIClient_stop mwle_fnAIClient_stop;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIClient_stop([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiclient);
static internal wle_fnAIClient_setAimLocation mwle_fnAIClient_setAimLocation;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIClient_setAimLocation([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiclient, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnAIClient_setMoveDestination mwle_fnAIClient_setMoveDestination;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIClient_setMoveDestination([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiclient, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnAIClient_getAimLocation mwle_fnAIClient_getAimLocation;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIClient_getAimLocation([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiclient,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnAIClient_getMoveDestination mwle_fnAIClient_getMoveDestination;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIClient_getMoveDestination([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiclient,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnAIClient_setTargetObject mwle_fnAIClient_setTargetObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIClient_setTargetObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiclient, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnAIClient_getTargetObject mwle_fnAIClient_getTargetObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnAIClient_getTargetObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiclient);
static internal wle_fnAIClient_missionCycleCleanup mwle_fnAIClient_missionCycleCleanup;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIClient_missionCycleCleanup([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiclient);
static internal wle_fnAIClient_move mwle_fnAIClient_move;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIClient_move([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiclient);
static internal wle_fnAIClient_getLocation mwle_fnAIClient_getLocation;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIClient_getLocation([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiclient,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnAIClient_moveForward mwle_fnAIClient_moveForward;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIClient_moveForward([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiclient);
static internal wle_fn__aiConnect mwle_fn__aiConnect;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__aiConnect([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a12, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a13, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a14, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a15, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a16, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a17, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a18, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a19);
static internal wle_fnAIConnection_setMove mwle_fnAIConnection_setMove;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIConnection_setMove([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiconnection, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnAIConnection_getMove mwle_fnAIConnection_getMove;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnAIConnection_getMove([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiconnection, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnAIConnection_setFreeLook mwle_fnAIConnection_setFreeLook;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIConnection_setFreeLook([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiconnection, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnAIConnection_getFreeLook mwle_fnAIConnection_getFreeLook;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnAIConnection_getFreeLook([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiconnection);
static internal wle_fnAIConnection_setTrigger mwle_fnAIConnection_setTrigger;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIConnection_setTrigger([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiconnection, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnAIConnection_getTrigger mwle_fnAIConnection_getTrigger;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnAIConnection_getTrigger([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiconnection, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnAIConnection_getAddress mwle_fnAIConnection_getAddress;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIConnection_getAddress([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiconnection,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnAIPlayer_setAimObject mwle_fnAIPlayer_setAimObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIPlayer_setAimObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiplayer, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnAIPlayer_stop mwle_fnAIPlayer_stop;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIPlayer_stop([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiplayer);
static internal wle_fnAIPlayer_clearAim mwle_fnAIPlayer_clearAim;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIPlayer_clearAim([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiplayer);
static internal wle_fnAIPlayer_setMoveSpeed mwle_fnAIPlayer_setMoveSpeed;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIPlayer_setMoveSpeed([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiplayer, [In] float speed);
static internal wle_fnAIPlayer_getMoveSpeed mwle_fnAIPlayer_getMoveSpeed;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnAIPlayer_getMoveSpeed([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiplayer);
static internal wle_fnAIPlayer_setMoveDestination mwle_fnAIPlayer_setMoveDestination;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIPlayer_setMoveDestination([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiplayer, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder goal, [In] bool slowDown);
static internal wle_fnAIPlayer_getMoveDestination mwle_fnAIPlayer_getMoveDestination;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIPlayer_getMoveDestination([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiplayer,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnAIPlayer_setAimLocation mwle_fnAIPlayer_setAimLocation;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIPlayer_setAimLocation([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiplayer, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder target);
static internal wle_fnAIPlayer_getAimLocation mwle_fnAIPlayer_getAimLocation;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAIPlayer_getAimLocation([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiplayer,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnAIPlayer_getAimObject mwle_fnAIPlayer_getAimObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnAIPlayer_getAimObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiplayer);
static internal wle_fnCamera_getMode mwle_fnCamera_getMode;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnCamera_getMode([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera);
static internal wle_fnCamera_getPosition mwle_fnCamera_getPosition;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_getPosition([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnCamera_getRotation mwle_fnCamera_getRotation;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_getRotation([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnCamera_setRotation mwle_fnCamera_setRotation;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_setRotation([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder rot);
static internal wle_fnCamera_getOffset mwle_fnCamera_getOffset;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_getOffset([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnCamera_setOffset mwle_fnCamera_setOffset;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_setOffset([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder offset);
static internal wle_fnCamera_setOrbitMode mwle_fnCamera_setOrbitMode;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_setOrbitMode([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder orbitObject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder orbitPoint, [In] float minDistance, [In] float maxDistance, [In] float initDistance, [In] bool ownClientObj, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder offset, [In] bool xlocked);
static internal wle_fnCamera_setOrbitObject mwle_fnCamera_setOrbitObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnCamera_setOrbitObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder orbitObject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder rotation, [In] float minDistance, [In] float maxDistance, [In] float initDistance, [In] bool ownClientObject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder offset, [In] bool xlocked);
static internal wle_fnCamera_setOrbitPoint mwle_fnCamera_setOrbitPoint;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_setOrbitPoint([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder orbitPoint, [In] float minDistance, [In] float maxDistance, [In] float initDistance, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder offset, [In] bool xlocked);
static internal wle_fnCamera_setTrackObject mwle_fnCamera_setTrackObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnCamera_setTrackObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder trackObject, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder offset);
static internal wle_fnCamera_setEditOrbitMode mwle_fnCamera_setEditOrbitMode;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_setEditOrbitMode([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera);
static internal wle_fnCamera_setFlyMode mwle_fnCamera_setFlyMode;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_setFlyMode([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera);
static internal wle_fnCamera_setNewtonFlyMode mwle_fnCamera_setNewtonFlyMode;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_setNewtonFlyMode([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera);
static internal wle_fnCamera_isRotationDamped mwle_fnCamera_isRotationDamped;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnCamera_isRotationDamped([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera);
static internal wle_fnCamera_getAngularVelocity mwle_fnCamera_getAngularVelocity;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_getAngularVelocity([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnCamera_setAngularVelocity mwle_fnCamera_setAngularVelocity;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_setAngularVelocity([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder velocity);
static internal wle_fnCamera_setAngularForce mwle_fnCamera_setAngularForce;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_setAngularForce([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera, [In] float force);
static internal wle_fnCamera_setAngularDrag mwle_fnCamera_setAngularDrag;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_setAngularDrag([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera, [In] float drag);
static internal wle_fnCamera_setMass mwle_fnCamera_setMass;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_setMass([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera, [In] float mass);
static internal wle_fnCamera_getVelocity mwle_fnCamera_getVelocity;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_getVelocity([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnCamera_setVelocity mwle_fnCamera_setVelocity;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_setVelocity([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder velocity);
static internal wle_fnCamera_setDrag mwle_fnCamera_setDrag;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_setDrag([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera, [In] float drag);
static internal wle_fnCamera_setFlyForce mwle_fnCamera_setFlyForce;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_setFlyForce([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera, [In] float force);
static internal wle_fnCamera_setSpeedMultiplier mwle_fnCamera_setSpeedMultiplier;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_setSpeedMultiplier([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera, [In] float multiplier);
static internal wle_fnCamera_setBrakeMultiplier mwle_fnCamera_setBrakeMultiplier;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_setBrakeMultiplier([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera, [In] float multiplier);
static internal wle_fnCamera_isEditOrbitMode mwle_fnCamera_isEditOrbitMode;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnCamera_isEditOrbitMode([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera);
static internal wle_fnCamera_setValidEditOrbitPoint mwle_fnCamera_setValidEditOrbitPoint;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_setValidEditOrbitPoint([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera, [In] bool validPoint);
static internal wle_fnCamera_setEditOrbitPoint mwle_fnCamera_setEditOrbitPoint;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_setEditOrbitPoint([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder point);
static internal wle_fnCamera_autoFitRadius mwle_fnCamera_autoFitRadius;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_autoFitRadius([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera, [In] float radius);
static internal wle_fnCamera_lookAt mwle_fnCamera_lookAt;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCamera_lookAt([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder point);
static internal wle_fnDebris_init mwle_fnDebris_init;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnDebris_init([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder debris, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder inputPosition, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder inputVelocity);
static internal wle_fn__containerFindFirst mwle_fn__containerFindFirst;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__containerFindFirst([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn__containerFindNext mwle_fn__containerFindNext;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__containerFindNext([MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGroundPlane_postApply mwle_fnGroundPlane_postApply;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGroundPlane_postApply([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder groundplane);
static internal wle_fnGuiMaterialPreview_setModel mwle_fnGuiMaterialPreview_setModel;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMaterialPreview_setModel([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimaterialpreview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapeName);
static internal wle_fnGuiMaterialPreview_deleteModel mwle_fnGuiMaterialPreview_deleteModel;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMaterialPreview_deleteModel([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimaterialpreview);
static internal wle_fnGuiMaterialPreview_setOrbitDistance mwle_fnGuiMaterialPreview_setOrbitDistance;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMaterialPreview_setOrbitDistance([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimaterialpreview, [In] float distance);
static internal wle_fnGuiMaterialPreview_reset mwle_fnGuiMaterialPreview_reset;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMaterialPreview_reset([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimaterialpreview);
static internal wle_fnGuiMaterialPreview_setLightColor mwle_fnGuiMaterialPreview_setLightColor;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMaterialPreview_setLightColor([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimaterialpreview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder color);
static internal wle_fnGuiMaterialPreview_setAmbientLightColor mwle_fnGuiMaterialPreview_setAmbientLightColor;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiMaterialPreview_setAmbientLightColor([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guimaterialpreview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder color);
static internal wle_fnGuiObjectView_getModel mwle_fnGuiObjectView_getModel;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiObjectView_getModel([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiobjectview,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiObjectView_setModel mwle_fnGuiObjectView_setModel;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiObjectView_setModel([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiobjectview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapeName);
static internal wle_fnGuiObjectView_getMountedModel mwle_fnGuiObjectView_getMountedModel;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiObjectView_getMountedModel([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiobjectview,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiObjectView_setMountedModel mwle_fnGuiObjectView_setMountedModel;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiObjectView_setMountedModel([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiobjectview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapeName);
static internal wle_fnGuiObjectView_getSkin mwle_fnGuiObjectView_getSkin;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiObjectView_getSkin([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiobjectview,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiObjectView_setSkin mwle_fnGuiObjectView_setSkin;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiObjectView_setSkin([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiobjectview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder skinName);
static internal wle_fnGuiObjectView_getMountSkin mwle_fnGuiObjectView_getMountSkin;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiObjectView_getMountSkin([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiobjectview, [In] int param1, [In] int param2,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGuiObjectView_setMountSkin mwle_fnGuiObjectView_setMountSkin;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiObjectView_setMountSkin([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiobjectview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder skinName);
static internal wle_fnGuiObjectView_setSeq mwle_fnGuiObjectView_setSeq;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiObjectView_setSeq([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiobjectview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder indexOrName);
static internal wle_fnGuiObjectView_setMount mwle_fnGuiObjectView_setMount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiObjectView_setMount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiobjectview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapeName, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder mountNodeIndexOrName);
static internal wle_fnGuiObjectView_getOrbitDistance mwle_fnGuiObjectView_getOrbitDistance;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnGuiObjectView_getOrbitDistance([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiobjectview);
static internal wle_fnGuiObjectView_setOrbitDistance mwle_fnGuiObjectView_setOrbitDistance;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiObjectView_setOrbitDistance([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiobjectview, [In] float distance);
static internal wle_fnGuiObjectView_getCameraSpeed mwle_fnGuiObjectView_getCameraSpeed;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnGuiObjectView_getCameraSpeed([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiobjectview);
static internal wle_fnGuiObjectView_setCameraSpeed mwle_fnGuiObjectView_setCameraSpeed;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiObjectView_setCameraSpeed([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiobjectview, [In] float factor);
static internal wle_fnGuiObjectView_setLightColor mwle_fnGuiObjectView_setLightColor;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiObjectView_setLightColor([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiobjectview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder color);
static internal wle_fnGuiObjectView_setLightAmbient mwle_fnGuiObjectView_setLightAmbient;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiObjectView_setLightAmbient([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiobjectview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder color);
static internal wle_fnGuiObjectView_setLightDirection mwle_fnGuiObjectView_setLightDirection;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGuiObjectView_setLightDirection([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder guiobjectview, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder direction);
static internal wle_fnItem_isStatic mwle_fnItem_isStatic;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnItem_isStatic([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder item);
static internal wle_fnItem_isAtRest mwle_fnItem_isAtRest;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnItem_isAtRest([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder item);
static internal wle_fnItem_isRotating mwle_fnItem_isRotating;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnItem_isRotating([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder item);
static internal wle_fnItem_setCollisionTimeout mwle_fnItem_setCollisionTimeout;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnItem_setCollisionTimeout([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder item, [In] int ignoreColObj);
static internal wle_fnItem_getLastStickyPos mwle_fnItem_getLastStickyPos;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnItem_getLastStickyPos([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder item,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnItem_getLastStickyNormal mwle_fnItem_getLastStickyNormal;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnItem_getLastStickyNormal([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder item,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnLightBase_playAnimation mwle_fnLightBase_playAnimation;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnLightBase_playAnimation([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder lightbase, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnLightBase_pauseAnimation mwle_fnLightBase_pauseAnimation;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnLightBase_pauseAnimation([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder lightbase);
static internal wle_fnLightBase_setLightEnabled mwle_fnLightBase_setLightEnabled;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnLightBase_setLightEnabled([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder lightbase, [In] bool state);
static internal wle_fnLightDescription_apply mwle_fnLightDescription_apply;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnLightDescription_apply([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder lightdescription);
static internal wle_fnLightFlareData_apply mwle_fnLightFlareData_apply;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnLightFlareData_apply([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder lightflaredata);
static internal wle_fn_getMissionAreaServerObject mwle_fn_getMissionAreaServerObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_getMissionAreaServerObject([MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnMissionArea_getArea mwle_fnMissionArea_getArea;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMissionArea_getArea([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder missionarea,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnMissionArea_setArea mwle_fnMissionArea_setArea;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMissionArea_setArea([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder missionarea, [In] int x, [In] int y, [In] int width, [In] int height);
static internal wle_fnMissionArea_postApply mwle_fnMissionArea_postApply;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMissionArea_postApply([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder missionarea);
static internal wle_fnSpawnSphere_spawnObject mwle_fnSpawnSphere_spawnObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSpawnSphere_spawnObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder spawnsphere, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnPathCamera_setPosition mwle_fnPathCamera_setPosition;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPathCamera_setPosition([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pathcamera, [In] float position);
static internal wle_fnPathCamera_setTarget mwle_fnPathCamera_setTarget;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPathCamera_setTarget([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pathcamera, [In] float position);
static internal wle_fnPathCamera_setState mwle_fnPathCamera_setState;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPathCamera_setState([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pathcamera, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder newState);
static internal wle_fnPathCamera_reset mwle_fnPathCamera_reset;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPathCamera_reset([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pathcamera, [In] float speed);
static internal wle_fnPathCamera_pushBack mwle_fnPathCamera_pushBack;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPathCamera_pushBack([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pathcamera, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder transform, [In] float speed, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder type, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder path);
static internal wle_fnPathCamera_pushFront mwle_fnPathCamera_pushFront;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPathCamera_pushFront([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pathcamera, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder transform, [In] float speed, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder type, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder path);
static internal wle_fnPathCamera_popFront mwle_fnPathCamera_popFront;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPathCamera_popFront([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pathcamera);
static internal wle_fnPhysicalZone_activate mwle_fnPhysicalZone_activate;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPhysicalZone_activate([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder physicalzone);
static internal wle_fnPhysicalZone_deactivate mwle_fnPhysicalZone_deactivate;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPhysicalZone_deactivate([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder physicalzone);
static internal wle_fnPlayer_getPose mwle_fnPlayer_getPose;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPlayer_getPose([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder player,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnPlayer_allowAllPoses mwle_fnPlayer_allowAllPoses;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPlayer_allowAllPoses([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder player);
static internal wle_fnPlayer_allowJumping mwle_fnPlayer_allowJumping;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPlayer_allowJumping([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder player, [In] bool state);
static internal wle_fnPlayer_allowJetJumping mwle_fnPlayer_allowJetJumping;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPlayer_allowJetJumping([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder player, [In] bool state);
static internal wle_fnPlayer_allowSprinting mwle_fnPlayer_allowSprinting;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPlayer_allowSprinting([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder player, [In] bool state);
static internal wle_fnPlayer_allowCrouching mwle_fnPlayer_allowCrouching;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPlayer_allowCrouching([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder player, [In] bool state);
static internal wle_fnPlayer_allowProne mwle_fnPlayer_allowProne;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPlayer_allowProne([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder player, [In] bool state);
static internal wle_fnPlayer_allowSwimming mwle_fnPlayer_allowSwimming;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPlayer_allowSwimming([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder player, [In] bool state);
static internal wle_fnPlayer_getState mwle_fnPlayer_getState;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPlayer_getState([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder player,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnPlayer_getDamageLocation mwle_fnPlayer_getDamageLocation;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPlayer_getDamageLocation([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder player, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pos,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnPlayer_setArmThread mwle_fnPlayer_setArmThread;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPlayer_setArmThread([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder player, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name);
static internal wle_fnPlayer_setActionThread mwle_fnPlayer_setActionThread;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPlayer_setActionThread([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder player, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name, [In] bool hold, [In] bool fsp);
static internal wle_fnPlayer_setControlObject mwle_fnPlayer_setControlObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPlayer_setControlObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder player, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder obj);
static internal wle_fnPlayer_getControlObject mwle_fnPlayer_getControlObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPlayer_getControlObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder player);
static internal wle_fnPlayer_clearControlObject mwle_fnPlayer_clearControlObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPlayer_clearControlObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder player);
static internal wle_fnPlayer_checkDismountPoint mwle_fnPlayer_checkDismountPoint;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPlayer_checkDismountPoint([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder player, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder oldPos, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pos);
static internal wle_fnPlayer_getNumDeathAnimations mwle_fnPlayer_getNumDeathAnimations;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPlayer_getNumDeathAnimations([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder player);
static internal wle_fnPortal_isInteriorPortal mwle_fnPortal_isInteriorPortal;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPortal_isInteriorPortal([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder portal);
static internal wle_fnPortal_isExteriorPortal mwle_fnPortal_isExteriorPortal;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPortal_isExteriorPortal([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder portal);
static internal wle_fnProjectile_presimulate mwle_fnProjectile_presimulate;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnProjectile_presimulate([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder projectile, [In] float seconds);
static internal wle_fnProximityMine_explode mwle_fnProximityMine_explode;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnProximityMine_explode([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder proximitymine);
static internal wle_fnShapeBaseData_checkDeployPos mwle_fnShapeBaseData_checkDeployPos;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBaseData_checkDeployPos([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebasedata, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder txfm);
static internal wle_fnShapeBaseData_getDeployTransform mwle_fnShapeBaseData_getDeployTransform;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBaseData_getDeployTransform([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebasedata, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pos, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder normal,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnShapeBase_setHidden mwle_fnShapeBase_setHidden;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_setHidden([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] bool show);
static internal wle_fnShapeBase_isHidden mwle_fnShapeBase_isHidden;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_isHidden([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_playAudio mwle_fnShapeBase_playAudio;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_playAudio([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder track);
static internal wle_fnShapeBase_stopAudio mwle_fnShapeBase_stopAudio;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_stopAudio([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot);
static internal wle_fnShapeBase_playThread mwle_fnShapeBase_playThread;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_playThread([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name);
static internal wle_fnShapeBase_setThreadDir mwle_fnShapeBase_setThreadDir;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_setThreadDir([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot, [In] bool fwd);
static internal wle_fnShapeBase_setThreadTimeScale mwle_fnShapeBase_setThreadTimeScale;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_setThreadTimeScale([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot, [In] float scale);
static internal wle_fnShapeBase_setThreadPosition mwle_fnShapeBase_setThreadPosition;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_setThreadPosition([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot, [In] float pos);
static internal wle_fnShapeBase_stopThread mwle_fnShapeBase_stopThread;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_stopThread([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot);
static internal wle_fnShapeBase_destroyThread mwle_fnShapeBase_destroyThread;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_destroyThread([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot);
static internal wle_fnShapeBase_pauseThread mwle_fnShapeBase_pauseThread;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_pauseThread([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot);
static internal wle_fnShapeBase_mountImage mwle_fnShapeBase_mountImage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_mountImage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder image, [In] int slot, [In] bool loaded, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder skinTag);
static internal wle_fnShapeBase_unmountImage mwle_fnShapeBase_unmountImage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_unmountImage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot);
static internal wle_fnShapeBase_getMountedImage mwle_fnShapeBase_getMountedImage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_getMountedImage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot);
static internal wle_fnShapeBase_getPendingImage mwle_fnShapeBase_getPendingImage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_getPendingImage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot);
static internal wle_fnShapeBase_isImageFiring mwle_fnShapeBase_isImageFiring;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_isImageFiring([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot);
static internal wle_fnShapeBase_isImageMounted mwle_fnShapeBase_isImageMounted;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_isImageMounted([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder image);
static internal wle_fnShapeBase_getMountSlot mwle_fnShapeBase_getMountSlot;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_getMountSlot([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder image);
static internal wle_fnShapeBase_getImageSkinTag mwle_fnShapeBase_getImageSkinTag;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_getImageSkinTag([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot);
static internal wle_fnShapeBase_getImageState mwle_fnShapeBase_getImageState;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_getImageState([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnShapeBase_hasImageState mwle_fnShapeBase_hasImageState;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_hasImageState([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder state);
static internal wle_fnShapeBase_getImageTrigger mwle_fnShapeBase_getImageTrigger;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_getImageTrigger([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot);
static internal wle_fnShapeBase_setImageTrigger mwle_fnShapeBase_setImageTrigger;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_setImageTrigger([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot, [In] bool state);
static internal wle_fnShapeBase_getImageGenericTrigger mwle_fnShapeBase_getImageGenericTrigger;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_getImageGenericTrigger([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot, [In] int trigger);
static internal wle_fnShapeBase_setImageGenericTrigger mwle_fnShapeBase_setImageGenericTrigger;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_setImageGenericTrigger([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot, [In] int trigger, [In] bool state);
static internal wle_fnShapeBase_getImageAltTrigger mwle_fnShapeBase_getImageAltTrigger;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_getImageAltTrigger([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot);
static internal wle_fnShapeBase_setImageAltTrigger mwle_fnShapeBase_setImageAltTrigger;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_setImageAltTrigger([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot, [In] bool state);
static internal wle_fnShapeBase_getImageAmmo mwle_fnShapeBase_getImageAmmo;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_getImageAmmo([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot);
static internal wle_fnShapeBase_setImageAmmo mwle_fnShapeBase_setImageAmmo;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_setImageAmmo([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot, [In] bool state);
static internal wle_fnShapeBase_getImageLoaded mwle_fnShapeBase_getImageLoaded;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_getImageLoaded([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot);
static internal wle_fnShapeBase_setImageLoaded mwle_fnShapeBase_setImageLoaded;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_setImageLoaded([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot, [In] bool state);
static internal wle_fnShapeBase_getImageTarget mwle_fnShapeBase_getImageTarget;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_getImageTarget([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot);
static internal wle_fnShapeBase_setImageTarget mwle_fnShapeBase_setImageTarget;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_setImageTarget([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot, [In] bool state);
static internal wle_fnShapeBase_getImageScriptAnimPrefix mwle_fnShapeBase_getImageScriptAnimPrefix;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_getImageScriptAnimPrefix([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnShapeBase_setImageScriptAnimPrefix mwle_fnShapeBase_setImageScriptAnimPrefix;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_setImageScriptAnimPrefix([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder prefix);
static internal wle_fnShapeBase_getMuzzleVector mwle_fnShapeBase_getMuzzleVector;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_getMuzzleVector([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnShapeBase_getMuzzlePoint mwle_fnShapeBase_getMuzzlePoint;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_getMuzzlePoint([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnShapeBase_getSlotTransform mwle_fnShapeBase_getSlotTransform;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_getSlotTransform([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int slot,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnShapeBase_getAIRepairPoint mwle_fnShapeBase_getAIRepairPoint;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_getAIRepairPoint([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnShapeBase_getVelocity mwle_fnShapeBase_getVelocity;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_getVelocity([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnShapeBase_setVelocity mwle_fnShapeBase_setVelocity;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_setVelocity([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder vel);
static internal wle_fnShapeBase_applyImpulse mwle_fnShapeBase_applyImpulse;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_applyImpulse([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pos, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder vec);
static internal wle_fnShapeBase_getEyeVector mwle_fnShapeBase_getEyeVector;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_getEyeVector([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnShapeBase_getEyePoint mwle_fnShapeBase_getEyePoint;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_getEyePoint([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnShapeBase_getEyeTransform mwle_fnShapeBase_getEyeTransform;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_getEyeTransform([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnShapeBase_getLookAtPoint mwle_fnShapeBase_getLookAtPoint;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_getLookAtPoint([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] float distance, [In] int typeMask,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnShapeBase_setEnergyLevel mwle_fnShapeBase_setEnergyLevel;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_setEnergyLevel([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] float level);
static internal wle_fnShapeBase_getEnergyLevel mwle_fnShapeBase_getEnergyLevel;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnShapeBase_getEnergyLevel([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_getEnergyPercent mwle_fnShapeBase_getEnergyPercent;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnShapeBase_getEnergyPercent([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_setDamageLevel mwle_fnShapeBase_setDamageLevel;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_setDamageLevel([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] float level);
static internal wle_fnShapeBase_getDamageLevel mwle_fnShapeBase_getDamageLevel;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnShapeBase_getDamageLevel([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_getDamagePercent mwle_fnShapeBase_getDamagePercent;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnShapeBase_getDamagePercent([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_getMaxDamage mwle_fnShapeBase_getMaxDamage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnShapeBase_getMaxDamage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_setDamageState mwle_fnShapeBase_setDamageState;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_setDamageState([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder state);
static internal wle_fnShapeBase_getDamageState mwle_fnShapeBase_getDamageState;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_getDamageState([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnShapeBase_isDestroyed mwle_fnShapeBase_isDestroyed;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_isDestroyed([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_isDisabled mwle_fnShapeBase_isDisabled;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_isDisabled([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_isEnabled mwle_fnShapeBase_isEnabled;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_isEnabled([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_applyDamage mwle_fnShapeBase_applyDamage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_applyDamage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] float amount);
static internal wle_fnShapeBase_applyRepair mwle_fnShapeBase_applyRepair;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_applyRepair([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] float amount);
static internal wle_fnShapeBase_setRepairRate mwle_fnShapeBase_setRepairRate;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_setRepairRate([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] float rate);
static internal wle_fnShapeBase_getRepairRate mwle_fnShapeBase_getRepairRate;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnShapeBase_getRepairRate([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_setRechargeRate mwle_fnShapeBase_setRechargeRate;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_setRechargeRate([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] float rate);
static internal wle_fnShapeBase_getRechargeRate mwle_fnShapeBase_getRechargeRate;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnShapeBase_getRechargeRate([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_getControllingClient mwle_fnShapeBase_getControllingClient;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_getControllingClient([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_getControllingObject mwle_fnShapeBase_getControllingObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_getControllingObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_canCloak mwle_fnShapeBase_canCloak;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_canCloak([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_setCloaked mwle_fnShapeBase_setCloaked;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_setCloaked([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] bool cloak);
static internal wle_fnShapeBase_isCloaked mwle_fnShapeBase_isCloaked;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_isCloaked([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_setDamageFlash mwle_fnShapeBase_setDamageFlash;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_setDamageFlash([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] float level);
static internal wle_fnShapeBase_getDamageFlash mwle_fnShapeBase_getDamageFlash;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnShapeBase_getDamageFlash([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_setWhiteOut mwle_fnShapeBase_setWhiteOut;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_setWhiteOut([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] float level);
static internal wle_fnShapeBase_getWhiteOut mwle_fnShapeBase_getWhiteOut;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnShapeBase_getWhiteOut([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_getDefaultCameraFov mwle_fnShapeBase_getDefaultCameraFov;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnShapeBase_getDefaultCameraFov([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_getCameraFov mwle_fnShapeBase_getCameraFov;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnShapeBase_getCameraFov([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_setCameraFov mwle_fnShapeBase_setCameraFov;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_setCameraFov([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] float fov);
static internal wle_fnShapeBase_setInvincibleMode mwle_fnShapeBase_setInvincibleMode;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_setInvincibleMode([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] float time, [In] float speed);
static internal wle_fnShapeBase_startFade mwle_fnShapeBase_startFade;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_startFade([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int time, [In] int delay, [In] bool fadeOut);
static internal wle_fnShapeBase_setDamageVector mwle_fnShapeBase_setDamageVector;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_setDamageVector([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder vec);
static internal wle_fnShapeBase_setShapeName mwle_fnShapeBase_setShapeName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_setShapeName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name);
static internal wle_fnShapeBase_getShapeName mwle_fnShapeBase_getShapeName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_getShapeName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnShapeBase_setSkinName mwle_fnShapeBase_setSkinName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_setSkinName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name);
static internal wle_fnShapeBase_getSkinName mwle_fnShapeBase_getSkinName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_getSkinName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnShapeBase_getVisibleDistance mwle_fnShapeBase_getVisibleDistance;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_getVisibleDistance([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_setVisibleDistance mwle_fnShapeBase_setVisibleDistance;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_setVisibleDistance([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int dist);
static internal wle_fnShapeBase_setAllMeshesHidden mwle_fnShapeBase_setAllMeshesHidden;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_setAllMeshesHidden([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] bool hide);
static internal wle_fnShapeBase_setMeshHidden mwle_fnShapeBase_setMeshHidden;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_setMeshHidden([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder name, [In] bool hide);
static internal wle_fnShapeBase_dumpMeshVisibility mwle_fnShapeBase_dumpMeshVisibility;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_dumpMeshVisibility([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_getTargetName mwle_fnShapeBase_getTargetName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_getTargetName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnShapeBase_getTargetCount mwle_fnShapeBase_getTargetCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnShapeBase_getTargetCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase);
static internal wle_fnShapeBase_changeMaterial mwle_fnShapeBase_changeMaterial;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_changeMaterial([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder mapTo, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder oldMat, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder newMat);
static internal wle_fnShapeBase_getModelFile mwle_fnShapeBase_getModelFile;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnShapeBase_getModelFile([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder shapebase,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnStaticShape_setPoweredState mwle_fnStaticShape_setPoweredState;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnStaticShape_setPoweredState([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder staticshape, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnStaticShape_getPoweredState mwle_fnStaticShape_getPoweredState;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnStaticShape_getPoweredState([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder staticshape);
static internal wle_fnTrigger_getNumObjects mwle_fnTrigger_getNumObjects;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnTrigger_getNumObjects([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder trigger);
static internal wle_fnTrigger_getObject mwle_fnTrigger_getObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnTrigger_getObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder trigger, [In] int index);
static internal wle_fnTSStatic_getTargetName mwle_fnTSStatic_getTargetName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnTSStatic_getTargetName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder tsstatic, [In] int index,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnTSStatic_getTargetCount mwle_fnTSStatic_getTargetCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnTSStatic_getTargetCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder tsstatic);
static internal wle_fnTSStatic_changeMaterial mwle_fnTSStatic_changeMaterial;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnTSStatic_changeMaterial([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder tsstatic, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder mapTo, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder oldMat, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder newMat);
static internal wle_fnTSStatic_getModelFile mwle_fnTSStatic_getModelFile;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnTSStatic_getModelFile([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder tsstatic,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnZone_getZoneId mwle_fnZone_getZoneId;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnZone_getZoneId([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder zone);
static internal wle_fnZone_dumpZoneState mwle_fnZone_dumpZoneState;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnZone_dumpZoneState([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder zone, [In] bool updateFirst);
static internal wle_fnRenderMeshExample_postApply mwle_fnRenderMeshExample_postApply;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnRenderMeshExample_postApply([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder rendermeshexample);
static internal wle_fn_calcExplosionCoverage mwle_fn_calcExplosionCoverage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn_calcExplosionCoverage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pos, [In] int id, [In] uint covMask);
static internal wle_fn_StartFoliageReplication mwle_fn_StartFoliageReplication;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_StartFoliageReplication();
static internal wle_fn_StartClientReplication mwle_fn_StartClientReplication;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_StartClientReplication();
static internal wle_fnLightning_warningFlashes mwle_fnLightning_warningFlashes;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnLightning_warningFlashes([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder lightning);
static internal wle_fnLightning_strikeRandomPoint mwle_fnLightning_strikeRandomPoint;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnLightning_strikeRandomPoint([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder lightning);
static internal wle_fnLightning_strikeObject mwle_fnLightning_strikeObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnLightning_strikeObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder lightning, [In] int id);
static internal wle_fnParticleData_reload mwle_fnParticleData_reload;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnParticleData_reload([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder particledata);
static internal wle_fnParticleEmitterData_reload mwle_fnParticleEmitterData_reload;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnParticleEmitterData_reload([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder particleemitterdata);
static internal wle_fnParticleEmitterNode_setEmitterDataBlock mwle_fnParticleEmitterNode_setEmitterDataBlock;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnParticleEmitterNode_setEmitterDataBlock([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder particleemitternode, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder emitterDatablock);
static internal wle_fnParticleEmitterNode_setActive mwle_fnParticleEmitterNode_setActive;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnParticleEmitterNode_setActive([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder particleemitternode, [In] bool active);
static internal wle_fnPrecipitation_setPercentage mwle_fnPrecipitation_setPercentage;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPrecipitation_setPercentage([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder precipitation, [In] float percentage);
static internal wle_fnPrecipitation_modifyStorm mwle_fnPrecipitation_modifyStorm;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPrecipitation_modifyStorm([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder precipitation, [In] float percentage, [In] float seconds);
static internal wle_fnPrecipitation_setTurbulence mwle_fnPrecipitation_setTurbulence;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPrecipitation_setTurbulence([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder precipitation, [In] float max, [In] float speed, [In] float seconds);
static internal wle_fnGameBase_getDataBlock mwle_fnGameBase_getDataBlock;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGameBase_getDataBlock([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gamebase);
static internal wle_fnGameBase_setDataBlock mwle_fnGameBase_setDataBlock;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGameBase_setDataBlock([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gamebase, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder data);
static internal wle_fnGameBase_applyImpulse mwle_fnGameBase_applyImpulse;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGameBase_applyImpulse([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gamebase, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder pos, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder vel);
static internal wle_fnGameBase_applyRadialImpulse mwle_fnGameBase_applyRadialImpulse;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGameBase_applyRadialImpulse([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gamebase, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder origin, [In] float radius, [In] float magnitude);
static internal wle_fnGameConnection_setConnectArgs mwle_fnGameConnection_setConnectArgs;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGameConnection_setConnectArgs([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a12, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a13, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a14, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a15, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a16);
static internal wle_fnGameConnection_setJoinPassword mwle_fnGameConnection_setJoinPassword;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGameConnection_setJoinPassword([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder password);
static internal wle_fnGameConnection_transmitDataBlocks mwle_fnGameConnection_transmitDataBlocks;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGameConnection_transmitDataBlocks([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection, [In] int sequence);
static internal wle_fnGameConnection_activateGhosting mwle_fnGameConnection_activateGhosting;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGameConnection_activateGhosting([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection);
static internal wle_fnGameConnection_resetGhosting mwle_fnGameConnection_resetGhosting;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGameConnection_resetGhosting([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection);
static internal wle_fnGameConnection_setControlObject mwle_fnGameConnection_setControlObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGameConnection_setControlObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder ctrlObj);
static internal wle_fnGameConnection_getControlObject mwle_fnGameConnection_getControlObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGameConnection_getControlObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGameConnection_isAIControlled mwle_fnGameConnection_isAIControlled;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGameConnection_isAIControlled([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection);
static internal wle_fnGameConnection_isControlObjectRotDampedCamera mwle_fnGameConnection_isControlObjectRotDampedCamera;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGameConnection_isControlObjectRotDampedCamera([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection);
static internal wle_fnGameConnection_play2D mwle_fnGameConnection_play2D;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGameConnection_play2D([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder profile);
static internal wle_fnGameConnection_play3D mwle_fnGameConnection_play3D;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGameConnection_play3D([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder profile, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder location);
static internal wle_fnGameConnection_chaseCam mwle_fnGameConnection_chaseCam;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGameConnection_chaseCam([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection, [In] int size);
static internal wle_fnGameConnection_getControlCameraDefaultFov mwle_fnGameConnection_getControlCameraDefaultFov;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnGameConnection_getControlCameraDefaultFov([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection);
static internal wle_fnGameConnection_setControlCameraFov mwle_fnGameConnection_setControlCameraFov;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGameConnection_setControlCameraFov([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection, [In] float newFOV);
static internal wle_fnGameConnection_getControlCameraFov mwle_fnGameConnection_getControlCameraFov;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnGameConnection_getControlCameraFov([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection);
static internal wle_fnGameConnection_getDamageFlash mwle_fnGameConnection_getDamageFlash;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnGameConnection_getDamageFlash([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection);
static internal wle_fnGameConnection_getWhiteOut mwle_fnGameConnection_getWhiteOut;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnGameConnection_getWhiteOut([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection);
static internal wle_fnGameConnection_setBlackOut mwle_fnGameConnection_setBlackOut;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGameConnection_setBlackOut([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection, [In] bool doFade, [In] int timeMS);
static internal wle_fnGameConnection_setMissionCRC mwle_fnGameConnection_setMissionCRC;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGameConnection_setMissionCRC([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection, [In] int CRC);
static internal wle_fnGameConnection_delete mwle_fnGameConnection_delete;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGameConnection_delete([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder reason);
static internal wle_fnGameConnection_startRecording mwle_fnGameConnection_startRecording;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGameConnection_startRecording([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName);
static internal wle_fnGameConnection_stopRecording mwle_fnGameConnection_stopRecording;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGameConnection_stopRecording([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection);
static internal wle_fnGameConnection_playDemo mwle_fnGameConnection_playDemo;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGameConnection_playDemo([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder demoFileName);
static internal wle_fnGameConnection_isDemoPlaying mwle_fnGameConnection_isDemoPlaying;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGameConnection_isDemoPlaying([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection);
static internal wle_fnGameConnection_isDemoRecording mwle_fnGameConnection_isDemoRecording;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGameConnection_isDemoRecording([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection);
static internal wle_fnGameConnection_listClassIDs mwle_fnGameConnection_listClassIDs;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGameConnection_listClassIDs([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection);
static internal wle_fnGameConnection_setCameraObject mwle_fnGameConnection_setCameraObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGameConnection_setCameraObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder camera);
static internal wle_fnGameConnection_getCameraObject mwle_fnGameConnection_getCameraObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGameConnection_getCameraObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnGameConnection_clearCameraObject mwle_fnGameConnection_clearCameraObject;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGameConnection_clearCameraObject([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection);
static internal wle_fnGameConnection_isFirstPerson mwle_fnGameConnection_isFirstPerson;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnGameConnection_isFirstPerson([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection);
static internal wle_fnGameConnection_setFirstPerson mwle_fnGameConnection_setFirstPerson;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnGameConnection_setFirstPerson([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder gameconnection, [In] bool firstPerson);
static internal wle_fn__dumpProcessList mwle_fn__dumpProcessList;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__dumpProcessList();
static internal wle_fnPhysicsDebrisData_preload mwle_fnPhysicsDebrisData_preload;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPhysicsDebrisData_preload([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder physicsdebrisdata);
static internal wle_fnPhysicsForce_attach mwle_fnPhysicsForce_attach;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPhysicsForce_attach([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder physicsforce, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder start, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder direction, [In] float maxDist);
static internal wle_fnPhysicsForce_detach mwle_fnPhysicsForce_detach;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPhysicsForce_detach([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder physicsforce, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder force);
static internal wle_fnPhysicsForce_isAttached mwle_fnPhysicsForce_isAttached;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPhysicsForce_isAttached([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder physicsforce);
static internal wle_fn__physicsStartSimulation mwle_fn__physicsStartSimulation;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__physicsStartSimulation([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1);
static internal wle_fn__physicsStopSimulation mwle_fn__physicsStopSimulation;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__physicsStopSimulation([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1);
static internal wle_fn__physicsSimulationEnabled mwle_fn__physicsSimulationEnabled;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fn__physicsSimulationEnabled();
static internal wle_fn__physicsGetTimeScale mwle_fn__physicsGetTimeScale;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fn__physicsGetTimeScale();
static internal wle_fn__physicsStoreState mwle_fn__physicsStoreState;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__physicsStoreState();
static internal wle_fnPhysicsShape_isDestroyed mwle_fnPhysicsShape_isDestroyed;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnPhysicsShape_isDestroyed([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder physicsshape);
static internal wle_fnPhysicsShape_destroy mwle_fnPhysicsShape_destroy;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPhysicsShape_destroy([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder physicsshape);
static internal wle_fnPhysicsShape_restore mwle_fnPhysicsShape_restore;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnPhysicsShape_restore([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder physicsshape);
static internal wle_fnAITurretShape_addToIgnoreList mwle_fnAITurretShape_addToIgnoreList;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAITurretShape_addToIgnoreList([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiturretshape, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder obj);
static internal wle_fnAITurretShape_removeFromIgnoreList mwle_fnAITurretShape_removeFromIgnoreList;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAITurretShape_removeFromIgnoreList([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiturretshape, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder obj);
static internal wle_fnAITurretShape_setTurretState mwle_fnAITurretShape_setTurretState;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAITurretShape_setTurretState([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiturretshape, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder newState, [In] bool force);
static internal wle_fnAITurretShape_activateTurret mwle_fnAITurretShape_activateTurret;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAITurretShape_activateTurret([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiturretshape);
static internal wle_fnAITurretShape_deactivateTurret mwle_fnAITurretShape_deactivateTurret;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAITurretShape_deactivateTurret([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiturretshape);
static internal wle_fnAITurretShape_startScanForTargets mwle_fnAITurretShape_startScanForTargets;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAITurretShape_startScanForTargets([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiturretshape);
static internal wle_fnAITurretShape_stopScanForTargets mwle_fnAITurretShape_stopScanForTargets;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAITurretShape_stopScanForTargets([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiturretshape);
static internal wle_fnAITurretShape_startTrackingTarget mwle_fnAITurretShape_startTrackingTarget;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAITurretShape_startTrackingTarget([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiturretshape);
static internal wle_fnAITurretShape_stopTrackingTarget mwle_fnAITurretShape_stopTrackingTarget;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAITurretShape_stopTrackingTarget([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiturretshape);
static internal wle_fnAITurretShape_hasTarget mwle_fnAITurretShape_hasTarget;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnAITurretShape_hasTarget([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiturretshape);
static internal wle_fnAITurretShape_getTarget mwle_fnAITurretShape_getTarget;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAITurretShape_getTarget([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiturretshape,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnAITurretShape_resetTarget mwle_fnAITurretShape_resetTarget;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAITurretShape_resetTarget([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiturretshape);
static internal wle_fnAITurretShape_setWeaponLeadVelocity mwle_fnAITurretShape_setWeaponLeadVelocity;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAITurretShape_setWeaponLeadVelocity([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiturretshape, [In] float velocity);
static internal wle_fnAITurretShape_getWeaponLeadVelocity mwle_fnAITurretShape_getWeaponLeadVelocity;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate float wle_fnAITurretShape_getWeaponLeadVelocity([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiturretshape);
static internal wle_fnAITurretShape_setAllGunsFiring mwle_fnAITurretShape_setAllGunsFiring;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAITurretShape_setAllGunsFiring([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiturretshape, [In] bool fire);
static internal wle_fnAITurretShape_setGunSlotFiring mwle_fnAITurretShape_setGunSlotFiring;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAITurretShape_setGunSlotFiring([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiturretshape, [In] int slot, [In] bool fire);
static internal wle_fnAITurretShape_recenterTurret mwle_fnAITurretShape_recenterTurret;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnAITurretShape_recenterTurret([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder aiturretshape);
static internal wle_fnTurretShape_getAllowManualRotation mwle_fnTurretShape_getAllowManualRotation;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnTurretShape_getAllowManualRotation([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder turretshape);
static internal wle_fnTurretShape_setAllowManualRotation mwle_fnTurretShape_setAllowManualRotation;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnTurretShape_setAllowManualRotation([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder turretshape, [In] bool allow);
static internal wle_fnTurretShape_getAllowManualFire mwle_fnTurretShape_getAllowManualFire;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnTurretShape_getAllowManualFire([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder turretshape);
static internal wle_fnTurretShape_setAllowManualFire mwle_fnTurretShape_setAllowManualFire;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnTurretShape_setAllowManualFire([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder turretshape, [In] bool allow);
static internal wle_fnTurretShape_getState mwle_fnTurretShape_getState;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnTurretShape_getState([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder turretshape,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnTurretShape_getTurretEulerRotation mwle_fnTurretShape_getTurretEulerRotation;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnTurretShape_getTurretEulerRotation([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder turretshape,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnTurretShape_setTurretEulerRotation mwle_fnTurretShape_setTurretEulerRotation;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnTurretShape_setTurretEulerRotation([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder turretshape, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder rot);
static internal wle_fnTurretShape_doRespawn mwle_fnTurretShape_doRespawn;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnTurretShape_doRespawn([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder turretshape);
static internal wle_fnFlyingVehicle_useCreateHeight mwle_fnFlyingVehicle_useCreateHeight;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnFlyingVehicle_useCreateHeight([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder flyingvehicle, [In] bool enabled);
static internal wle_fnWheeledVehicle_setWheelSteering mwle_fnWheeledVehicle_setWheelSteering;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnWheeledVehicle_setWheelSteering([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder wheeledvehicle, [In] int wheel, [In] float steering);
static internal wle_fnWheeledVehicle_setWheelPowered mwle_fnWheeledVehicle_setWheelPowered;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnWheeledVehicle_setWheelPowered([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder wheeledvehicle, [In] int wheel, [In] bool powered);
static internal wle_fnWheeledVehicle_setWheelTire mwle_fnWheeledVehicle_setWheelTire;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnWheeledVehicle_setWheelTire([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder wheeledvehicle, [In] int wheel, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder tire);
static internal wle_fnWheeledVehicle_setWheelSpring mwle_fnWheeledVehicle_setWheelSpring;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnWheeledVehicle_setWheelSpring([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder wheeledvehicle, [In] int wheel, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder spring);
static internal wle_fnWheeledVehicle_getWheelCount mwle_fnWheeledVehicle_getWheelCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnWheeledVehicle_getWheelCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder wheeledvehicle);
static internal wle_fnTerrainBlock_save mwle_fnTerrainBlock_save;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnTerrainBlock_save([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder terrainblock, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder fileName);
static internal wle_fn__enableSamples mwle_fn__enableSamples;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__enableSamples([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnSettings_findFirstValue mwle_fnSettings_findFirstValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSettings_findFirstValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder settings, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSettings_findNextValue mwle_fnSettings_findNextValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSettings_findNextValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder settings,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSettings_setValue mwle_fnSettings_setValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSettings_setValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder settings, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnSettings_setDefaultValue mwle_fnSettings_setDefaultValue;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSettings_setDefaultValue([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder settings, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnSettings_value mwle_fnSettings_value;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSettings_value([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder settings, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnSettings_remove mwle_fnSettings_remove;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSettings_remove([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder settings, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnSettings_write mwle_fnSettings_write;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSettings_write([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder settings);
static internal wle_fnSettings_read mwle_fnSettings_read;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnSettings_read([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder settings);
static internal wle_fnSettings_beginGroup mwle_fnSettings_beginGroup;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSettings_beginGroup([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder settings, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnSettings_endGroup mwle_fnSettings_endGroup;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSettings_endGroup([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder settings);
static internal wle_fnSettings_clearGroups mwle_fnSettings_clearGroups;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSettings_clearGroups([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder settings);
static internal wle_fnSettings_getCurrentGroups mwle_fnSettings_getCurrentGroups;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnSettings_getCurrentGroups([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder settings,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnCompoundUndoAction_addAction mwle_fnCompoundUndoAction_addAction;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnCompoundUndoAction_addAction([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder compoundundoaction, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnUndoManager_clearAll mwle_fnUndoManager_clearAll;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnUndoManager_clearAll([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder undomanager);
static internal wle_fnUndoManager_getUndoCount mwle_fnUndoManager_getUndoCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnUndoManager_getUndoCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder undomanager);
static internal wle_fnUndoManager_getUndoName mwle_fnUndoManager_getUndoName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnUndoManager_getUndoName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder undomanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnUndoManager_getUndoAction mwle_fnUndoManager_getUndoAction;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnUndoManager_getUndoAction([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder undomanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnUndoManager_getRedoCount mwle_fnUndoManager_getRedoCount;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnUndoManager_getRedoCount([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder undomanager);
static internal wle_fnUndoManager_getRedoName mwle_fnUndoManager_getRedoName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnUndoManager_getRedoName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder undomanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnUndoManager_getRedoAction mwle_fnUndoManager_getRedoAction;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnUndoManager_getRedoAction([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder undomanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnUndoAction_addToManager mwle_fnUndoAction_addToManager;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnUndoAction_addToManager([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder undoaction, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnUndoAction_undo mwle_fnUndoAction_undo;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnUndoAction_undo([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder undoaction);
static internal wle_fnUndoAction_redo mwle_fnUndoAction_redo;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnUndoAction_redo([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder undoaction);
static internal wle_fnUndoManager_undo mwle_fnUndoManager_undo;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnUndoManager_undo([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder undomanager);
static internal wle_fnUndoManager_redo mwle_fnUndoManager_redo;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnUndoManager_redo([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder undomanager);
static internal wle_fnUndoManager_getNextUndoName mwle_fnUndoManager_getNextUndoName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnUndoManager_getNextUndoName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder undomanager,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnUndoManager_getNextRedoName mwle_fnUndoManager_getNextRedoName;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnUndoManager_getNextRedoName([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder undomanager,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnUndoManager_pushCompound mwle_fnUndoManager_pushCompound;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnUndoManager_pushCompound([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder undomanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnUndoManager_popCompound mwle_fnUndoManager_popCompound;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnUndoManager_popCompound([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder undomanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnEventManager_registerEvent mwle_fnEventManager_registerEvent;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnEventManager_registerEvent([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder eventmanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnEventManager_unregisterEvent mwle_fnEventManager_unregisterEvent;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnEventManager_unregisterEvent([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder eventmanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnEventManager_isRegisteredEvent mwle_fnEventManager_isRegisteredEvent;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnEventManager_isRegisteredEvent([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder eventmanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnEventManager_postEvent mwle_fnEventManager_postEvent;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnEventManager_postEvent([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder eventmanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnEventManager_subscribe mwle_fnEventManager_subscribe;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnEventManager_subscribe([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder eventmanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4);
static internal wle_fnEventManager_remove mwle_fnEventManager_remove;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnEventManager_remove([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder eventmanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3);
static internal wle_fnEventManager_removeAll mwle_fnEventManager_removeAll;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnEventManager_removeAll([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder eventmanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnEventManager_dumpEvents mwle_fnEventManager_dumpEvents;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnEventManager_dumpEvents([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder eventmanager);
static internal wle_fnEventManager_dumpSubscribers mwle_fnEventManager_dumpSubscribers;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnEventManager_dumpSubscribers([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder eventmanager, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2);
static internal wle_fnMessage_getType mwle_fnMessage_getType;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMessage_getType([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder message,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnMessage_addReference mwle_fnMessage_addReference;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMessage_addReference([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder message);
static internal wle_fnMessage_freeReference mwle_fnMessage_freeReference;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fnMessage_freeReference([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder message);
static internal wle_fn__dnEval_Direct_New mwle_fn__dnEval_Direct_New;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn__dnEval_Direct_New([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a1, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a2, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a3, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a4, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a5, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a6, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a7, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a8, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a9, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a10, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a11, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a12, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a13, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a14, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a15, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a16, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a17, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a18, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder a19,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fn_dnEval mwle_fn_dnEval;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate void wle_fn_dnEval([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder script,[MarshalAs(UnmanagedType.LPStr)] [Out] StringBuilder retval);
static internal wle_fnNetConnection_GetGhostIndex mwle_fnNetConnection_GetGhostIndex;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnNetConnection_GetGhostIndex([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netconnection, [MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder obj);
static internal wle_fnNetConnection_ResolveGhost mwle_fnNetConnection_ResolveGhost;
[UnmanagedFunctionPointer(CallingConvention.Cdecl, CharSet = CharSet.Ansi, SetLastError = true)] 
 internal delegate int wle_fnNetConnection_ResolveGhost([MarshalAs(UnmanagedType.LPStr)] [In]  StringBuilder netconnection, [In] int ghostIndex);
 static private  void ClearAutoExterns(){
mwle_fn_addBadWord= null;
mwle_fn_filterString= null;
mwle_fn_containsBadWords= null;
mwle_fn__strToPlayerName= null;
mwle_fn__lockMouse= null;
mwle_fn__setNetPort= null;
mwle_fn__getVersionNumber= null;
mwle_fn__getVersionString= null;
mwle_fn__getEngineName= null;
mwle_fn__getBuildString= null;
mwle_fnHTTPObject_get= null;
mwle_fnHTTPObject_post= null;
mwle_fn__removeTaggedString= null;
mwle_fn__addTaggedString= null;
mwle_fn__buildTaggedString= null;
mwle_fn__queryAllServers= null;
mwle_fn__queryLanServers= null;
mwle_fn__queryMasterServer= null;
mwle_fn__querySingleServer= null;
mwle_fn__setServerInfo= null;
mwle_fnTCPObject_send= null;
mwle_fnTCPObject_listen= null;
mwle_fnTCPObject_connect= null;
mwle_fnTCPObject_disconnect= null;
mwle_fn__testJavaScriptBridge= null;
mwle_fn__TestFunction2Args= null;
mwle_fnDynamicConsoleMethodComponent_callMethod= null;
mwle_fnSimComponent_addComponents= null;
mwle_fnSimComponent_removeComponents= null;
mwle_fnSimComponent_getComponentCount= null;
mwle_fnSimComponent_getComponent= null;
mwle_fnSimComponent_setEnabled= null;
mwle_fnSimComponent_isEnabled= null;
mwle_fnSimComponent_setIsTemplate= null;
mwle_fnSimComponent_getIsTemplate= null;
mwle_fnArrayObject_getIndexFromValue= null;
mwle_fnArrayObject_getIndexFromKey= null;
mwle_fnArrayObject_getValue= null;
mwle_fnArrayObject_getKey= null;
mwle_fnArrayObject_setKey= null;
mwle_fnArrayObject_setValue= null;
mwle_fnArrayObject_count= null;
mwle_fnArrayObject_countValue= null;
mwle_fnArrayObject_countKey= null;
mwle_fnArrayObject_add= null;
mwle_fnArrayObject_push_back= null;
mwle_fnArrayObject_push_front= null;
mwle_fnArrayObject_insert= null;
mwle_fnArrayObject_pop_back= null;
mwle_fnArrayObject_pop_front= null;
mwle_fnArrayObject_erase= null;
mwle_fnArrayObject_empty= null;
mwle_fnArrayObject_uniqueValue= null;
mwle_fnArrayObject_uniqueKey= null;
mwle_fnArrayObject_duplicate= null;
mwle_fnArrayObject_crop= null;
mwle_fnArrayObject_append= null;
mwle_fnArrayObject_sort= null;
mwle_fnArrayObject_sorta= null;
mwle_fnArrayObject_sortd= null;
mwle_fnArrayObject_sortk= null;
mwle_fnArrayObject_sortka= null;
mwle_fnArrayObject_sortkd= null;
mwle_fnArrayObject_sortn= null;
mwle_fnArrayObject_sortna= null;
mwle_fnArrayObject_sortnd= null;
mwle_fnArrayObject_sortnk= null;
mwle_fnArrayObject_sortnka= null;
mwle_fnArrayObject_sortnkd= null;
mwle_fnArrayObject_sortf= null;
mwle_fnArrayObject_sortfk= null;
mwle_fnArrayObject_sortfd= null;
mwle_fnArrayObject_sortfkd= null;
mwle_fnArrayObject_moveFirst= null;
mwle_fnArrayObject_moveLast= null;
mwle_fnArrayObject_moveNext= null;
mwle_fnArrayObject_movePrev= null;
mwle_fnArrayObject_getCurrent= null;
mwle_fnArrayObject_setCurrent= null;
mwle_fnArrayObject_echo= null;
mwle_fn_log= null;
mwle_fn_logError= null;
mwle_fn_logWarning= null;
mwle_fn_dumpConsoleClasses= null;
mwle_fn_dumpConsoleFunctions= null;
mwle_fn__nextToken= null;
mwle_fn__getTag= null;
mwle_fn__echo= null;
mwle_fn__warn= null;
mwle_fn__error= null;
mwle_fn__realQuit= null;
mwle_fn__call= null;
mwle_fn__eval= null;
mwle_fn__getVariable= null;
mwle_fn__setVariable= null;
mwle_fn__isFunction= null;
mwle_fn__isMethod= null;
mwle_fn__getMethodPackage= null;
mwle_fn__isDefined= null;
mwle_fn__getModNameFromPath= null;
mwle_fn__getPrefsPath= null;
mwle_fn__execPrefs= null;
mwle_fn_strasc= null;
mwle_fn_strformat= null;
mwle_fn_strcmp= null;
mwle_fn_stricmp= null;
mwle_fn_strnatcmp= null;
mwle_fn_strinatcmp= null;
mwle_fn_strlen= null;
mwle_fn_strstr= null;
mwle_fn_strpos= null;
mwle_fn_ltrim= null;
mwle_fn_rtrim= null;
mwle_fn_trim= null;
mwle_fn_stripChars= null;
mwle_fn_strlwr= null;
mwle_fn_strupr= null;
mwle_fn_strchr= null;
mwle_fn_strrchr= null;
mwle_fn_strreplace= null;
mwle_fn_strrepeat= null;
mwle_fn_getSubStr= null;
mwle_fn_strIsMatchExpr= null;
mwle_fn_strIsMatchMultipleExpr= null;
mwle_fn_getTrailingNumber= null;
mwle_fn_stripTrailingNumber= null;
mwle_fn_isspace= null;
mwle_fn_isalnum= null;
mwle_fn_startsWith= null;
mwle_fn_endsWith= null;
mwle_fn_strchrpos= null;
mwle_fn_strrchrpos= null;
mwle_fn_getWord= null;
mwle_fn_getWords= null;
mwle_fn_setWord= null;
mwle_fn_removeWord= null;
mwle_fn_getWordCount= null;
mwle_fn_getField= null;
mwle_fn_getFields= null;
mwle_fn_setField= null;
mwle_fn_removeField= null;
mwle_fn_getFieldCount= null;
mwle_fn_getRecord= null;
mwle_fn_getRecords= null;
mwle_fn_setRecord= null;
mwle_fn_removeRecord= null;
mwle_fn_getRecordCount= null;
mwle_fn_firstWord= null;
mwle_fn_restWords= null;
mwle_fn_expandEscape= null;
mwle_fn_collapseEscape= null;
mwle_fn_quit= null;
mwle_fn_quitWithErrorMessage= null;
mwle_fn_export= null;
mwle_fn_trace= null;
mwle_fn_debug= null;
mwle_fn_detag= null;
mwle_fn_debugv= null;
mwle_fn_setLogMode= null;
mwle_fn_gotoWebPage= null;
mwle_fn_displaySplashWindow= null;
mwle_fn_getWebDeployment= null;
mwle_fn_countBits= null;
mwle_fn_compile= null;
mwle_fn_exec= null;
mwle_fn_deleteVariables= null;
mwle_fn_isShippingBuild= null;
mwle_fn_isDebugBuild= null;
mwle_fn_isToolBuild= null;
mwle_fn_backtrace= null;
mwle_fn_isPackage= null;
mwle_fn_activatePackage= null;
mwle_fn_deactivatePackage= null;
mwle_fn_getPackageList= null;
mwle_fnConsoleLogger_attach= null;
mwle_fnConsoleLogger_detach= null;
mwle_fn_isClass= null;
mwle_fn_isMemberOfClass= null;
mwle_fn_getDescriptionOfClass= null;
mwle_fn_getCategoryOfClass= null;
mwle_fn_dumpNetStats= null;
mwle_fnFieldBrushObject_queryGroups= null;
mwle_fnFieldBrushObject_queryFields= null;
mwle_fnFieldBrushObject_copyFields= null;
mwle_fnFieldBrushObject_pasteFields= null;
mwle_fn_findFirstFile= null;
mwle_fn_findNextFile= null;
mwle_fn_getFileCount= null;
mwle_fn_findFirstFileMultiExpr= null;
mwle_fn_findNextFileMultiExpr= null;
mwle_fn_getFileCountMultiExpr= null;
mwle_fn_getFileCRC= null;
mwle_fn_isFile= null;
mwle_fn_IsDirectory= null;
mwle_fn_isWriteableFileName= null;
mwle_fn_startFileChangeNotifications= null;
mwle_fn_stopFileChangeNotifications= null;
mwle_fn_getDirectoryList= null;
mwle_fn_fileSize= null;
mwle_fn_fileModifiedTime= null;
mwle_fn_fileCreatedTime= null;
mwle_fn_fileDelete= null;
mwle_fn_fileExt= null;
mwle_fn_fileBase= null;
mwle_fn_fileName= null;
mwle_fn_filePath= null;
mwle_fn_getWorkingDirectory= null;
mwle_fn_makeFullPath= null;
mwle_fn_makeRelativePath= null;
mwle_fn_pathConcat= null;
mwle_fn_getExecutableName= null;
mwle_fn_getMainDotCsDir= null;
mwle_fn_openFolder= null;
mwle_fn_openFile= null;
mwle_fn_pathCopy= null;
mwle_fn_getCurrentDirectory= null;
mwle_fn_setCurrentDirectory= null;
mwle_fn_createPath= null;
mwle_fnPersistenceManager_deleteObjectsFromFile= null;
mwle_fnPersistenceManager_setDirty= null;
mwle_fnPersistenceManager_removeDirty= null;
mwle_fnPersistenceManager_isDirty= null;
mwle_fnPersistenceManager_hasDirty= null;
mwle_fnPersistenceManager_getDirtyObjectCount= null;
mwle_fnPersistenceManager_getDirtyObject= null;
mwle_fnPersistenceManager_listDirty= null;
mwle_fnPersistenceManager_saveDirty= null;
mwle_fnPersistenceManager_saveDirtyObject= null;
mwle_fnPersistenceManager_clearAll= null;
mwle_fnPersistenceManager_removeObjectFromFile= null;
mwle_fnPersistenceManager_removeField= null;
mwle_fn__expandFilename= null;
mwle_fn__isObject= null;
mwle_fn__spawnObject= null;
mwle_fn__schedule= null;
mwle_fn__getUniqueName= null;
mwle_fn__getUniqueInternalName= null;
mwle_fn__isValidObjectName= null;
mwle_fn_SimDataBlock_reloadOnLocalClient= null;
mwle_fn_preloadClientDataBlocks= null;
mwle_fn_deleteDataBlocks= null;
mwle_fnSimObject_call= null;
mwle_fnSimObject_schedule= null;
mwle_fn_SimObject_isMethod= null;
mwle_fn_SimObject_getClassNamespace= null;
mwle_fn_SimObject_getSuperClassNamespace= null;
mwle_fn_SimObject_setClassNamespace= null;
mwle_fn_SimObject_setSuperClassNamespace= null;
mwle_fn_SimObject_isExpanded= null;
mwle_fn_SimObject_setIsExpanded= null;
mwle_fn_SimObject_getFilename= null;
mwle_fn_SimObject_setFilename= null;
mwle_fn_SimObject_getDeclarationLine= null;
mwle_fn_SimObject_assignFieldsFrom= null;
mwle_fn_SimObject_getCanSave= null;
mwle_fn_SimObject_setCanSave= null;
mwle_fn_SimObject_dumpMethods= null;
mwle_fn_SimObject_save= null;
mwle_fn_SimObject_getClassName= null;
mwle_fn_SimObject_isField= null;
mwle_fn_SimObject_getFieldValue= null;
mwle_fn_SimObject_setFieldValue= null;
mwle_fn_SimObject_getFieldType= null;
mwle_fn_SimObject_setFieldType= null;
mwle_fn_SimObject_dumpClassHierarchy= null;
mwle_fn_SimObject_isMemberOfClass= null;
mwle_fn_SimObject_isInNamespaceHierarchy= null;
mwle_fn_SimObject_delete= null;
mwle_fn_SimObject_getDynamicFieldCount= null;
mwle_fn_SimObject_getDynamicField= null;
mwle_fn_SimObject_getFieldCount= null;
mwle_fn_SimObject_getField= null;
mwle_fnSimObject_dumpGroupHierarchy= null;
mwle_fnSimObject_isChildOfGroup= null;
mwle_fnSimObject_isSelected= null;
mwle_fnSimObject_setIsSelected= null;
mwle_fnSimObject_assignPersistentId= null;
mwle_fnSimObject_isEditorOnly= null;
mwle_fnSimObject_setEditorOnly= null;
mwle_fnSimObject_isNameChangeAllowed= null;
mwle_fnSimObject_setNameChangeAllowed= null;
mwle_fnSimObject_clone= null;
mwle_fnSimObject_deepClone= null;
mwle_fnSimObject_setLocked= null;
mwle_fnSimObject_setHidden= null;
mwle_fnSimObject_dump= null;
mwle_fnSimObject_setName= null;
mwle_fnSimObject_getName= null;
mwle_fnSimObject_setInternalName= null;
mwle_fnSimObject_getInternalName= null;
mwle_fnSimObject_getId= null;
mwle_fnSimObject_getGroup= null;
mwle_fnSimObject_getDebugInfo= null;
mwle_fnSimPersistSet_resolvePersistentIds= null;
mwle_fn_saveObject= null;
mwle_fn_loadObject= null;
mwle_fnSimSet_add= null;
mwle_fnSimSet_remove= null;
mwle_fnSimSet_deleteAllObjects= null;
mwle_fnSimSet_callOnChildren= null;
mwle_fnSimSet_callOnChildrenNoRecurse= null;
mwle_fnSimSet_getFullCount= null;
mwle_fnSimSet_sort= null;
mwle_fnSimSet_listObjects= null;
mwle_fnSimSet_clear= null;
mwle_fnSimSet_getRandom= null;
mwle_fnSimSet_reorderChild= null;
mwle_fnSimSet_getCount= null;
mwle_fnSimSet_getObject= null;
mwle_fnSimSet_getObjectIndex= null;
mwle_fnSimSet_isMember= null;
mwle_fnSimSet_findObjectByInternalName= null;
mwle_fnSimSet_bringToFront= null;
mwle_fnSimSet_pushToBack= null;
mwle_fnSimSet_acceptsAsChild= null;
mwle_fnSimXMLDocument_attributeF32= null;
mwle_fnSimXMLDocument_attributeS32= null;
mwle_fnSimXMLDocument_reset= null;
mwle_fnSimXMLDocument_loadFile= null;
mwle_fnSimXMLDocument_saveFile= null;
mwle_fnSimXMLDocument_parse= null;
mwle_fnSimXMLDocument_clear= null;
mwle_fnSimXMLDocument_getErrorDesc= null;
mwle_fnSimXMLDocument_clearError= null;
mwle_fnSimXMLDocument_pushFirstChildElement= null;
mwle_fnSimXMLDocument_pushChildElement= null;
mwle_fnSimXMLDocument_nextSiblingElement= null;
mwle_fnSimXMLDocument_elementValue= null;
mwle_fnSimXMLDocument_popElement= null;
mwle_fnSimXMLDocument_attribute= null;
mwle_fnSimXMLDocument_attributeExists= null;
mwle_fnSimXMLDocument_firstAttribute= null;
mwle_fnSimXMLDocument_lastAttribute= null;
mwle_fnSimXMLDocument_nextAttribute= null;
mwle_fnSimXMLDocument_prevAttribute= null;
mwle_fnSimXMLDocument_setAttribute= null;
mwle_fnSimXMLDocument_setObjectAttributes= null;
mwle_fnSimXMLDocument_pushNewElement= null;
mwle_fnSimXMLDocument_addNewElement= null;
mwle_fnSimXMLDocument_addHeader= null;
mwle_fnSimXMLDocument_addComment= null;
mwle_fnSimXMLDocument_readComment= null;
mwle_fnSimXMLDocument_addText= null;
mwle_fnSimXMLDocument_getText= null;
mwle_fnSimXMLDocument_removeText= null;
mwle_fnSimXMLDocument_addData= null;
mwle_fnSimXMLDocument_getData= null;
mwle_fnFileObject_writeObject= null;
mwle_fnFileObject_openForRead= null;
mwle_fnFileObject_openForWrite= null;
mwle_fnFileObject_openForAppend= null;
mwle_fnFileObject_isEOF= null;
mwle_fnFileObject_readLine= null;
mwle_fnFileObject_peekLine= null;
mwle_fnFileObject_writeLine= null;
mwle_fnFileObject_close= null;
mwle_fn_reloadResource= null;
mwle_fnFileStreamObject_open= null;
mwle_fnFileStreamObject_close= null;
mwle_fnStreamObject_getStatus= null;
mwle_fnStreamObject_isEOS= null;
mwle_fnStreamObject_isEOF= null;
mwle_fnStreamObject_getPosition= null;
mwle_fnStreamObject_setPosition= null;
mwle_fnStreamObject_getStreamSize= null;
mwle_fnStreamObject_readLine= null;
mwle_fnStreamObject_writeLine= null;
mwle_fnStreamObject_readSTString= null;
mwle_fnStreamObject_readString= null;
mwle_fnStreamObject_readLongString= null;
mwle_fnStreamObject_writeLongString= null;
mwle_fnStreamObject_writeString= null;
mwle_fnStreamObject_copyFrom= null;
mwle_fnZipObject_openArchive= null;
mwle_fnZipObject_closeArchive= null;
mwle_fnZipObject_openFileForRead= null;
mwle_fnZipObject_openFileForWrite= null;
mwle_fnZipObject_closeFile= null;
mwle_fnZipObject_addFile= null;
mwle_fnZipObject_extractFile= null;
mwle_fnZipObject_deleteFile= null;
mwle_fnZipObject_getFileEntryCount= null;
mwle_fnZipObject_getFileEntry= null;
mwle_fnDecalRoad_regenerate= null;
mwle_fnDecalRoad_postApply= null;
mwle_fnMeshRoad_setNodeDepth= null;
mwle_fnMeshRoad_regenerate= null;
mwle_fnMeshRoad_postApply= null;
mwle_fnRiver_regenerate= null;
mwle_fnRiver_setMetersPerSegment= null;
mwle_fnRiver_setBatchSize= null;
mwle_fnRiver_setNodeDepth= null;
mwle_fnRiver_setMaxDivisionSize= null;
mwle_fnScatterSky_applyChanges= null;
mwle_fnSkyBox_postApply= null;
mwle_fnSun_apply= null;
mwle_fnSun_animate= null;
mwle_fnGuiRoadEditorCtrl_deleteNode= null;
mwle_fnGuiRoadEditorCtrl_getMode= null;
mwle_fnGuiRoadEditorCtrl_getNodeWidth= null;
mwle_fnGuiRoadEditorCtrl_setNodeWidth= null;
mwle_fnGuiRoadEditorCtrl_getNodePosition= null;
mwle_fnGuiRoadEditorCtrl_setNodePosition= null;
mwle_fnGuiRoadEditorCtrl_setSelectedRoad= null;
mwle_fnGuiRoadEditorCtrl_getSelectedRoad= null;
mwle_fnGuiRoadEditorCtrl_getSelectedNode= null;
mwle_fnGuiRoadEditorCtrl_deleteRoad= null;
mwle_fnForest_saveDataFile= null;
mwle_fnForest_isDirty= null;
mwle_fnForest_regenCells= null;
mwle_fnForest_clear= null;
mwle_fnForestWindEmitter_attachToObject= null;
mwle_fnForestBrush_containsItemData= null;
mwle_fnForestBrushTool_collectElements= null;
mwle_fnForestEditorCtrl_updateActiveForest= null;
mwle_fnForestEditorCtrl_setActiveTool= null;
mwle_fnForestEditorCtrl_getActiveTool= null;
mwle_fnForestEditorCtrl_deleteMeshSafe= null;
mwle_fnForestEditorCtrl_isDirty= null;
mwle_fnForestSelectionTool_getSelectionCount= null;
mwle_fnForestSelectionTool_deleteSelection= null;
mwle_fnForestSelectionTool_clearSelection= null;
mwle_fnForestSelectionTool_cutSelection= null;
mwle_fnForestSelectionTool_copySelection= null;
mwle_fnForestSelectionTool_pasteSelection= null;
mwle_fn_populateFontCacheString= null;
mwle_fn_populateFontCacheRange= null;
mwle_fn_dumpFontCacheStatus= null;
mwle_fn_writeFontCache= null;
mwle_fn_populateAllFontCacheString= null;
mwle_fn_populateAllFontCacheRange= null;
mwle_fn_exportCachedFont= null;
mwle_fn_importCachedFont= null;
mwle_fn_duplicateCachedFont= null;
mwle_fn_getDisplayDeviceList= null;
mwle_fn_listGFXResources= null;
mwle_fn_flagCurrentGFXResources= null;
mwle_fn_clearGFXResourceFlags= null;
mwle_fn_describeGFXResources= null;
mwle_fn_describeGFXStateBlocks= null;
mwle_fn_getPixelShaderVersion= null;
mwle_fn_setPixelShaderVersion= null;
mwle_fn_getDisplayDeviceInformation= null;
mwle_fn_getBestHDRFormat= null;
mwle_fn_getDesktopResolution= null;
mwle_fn_addGlobalShaderMacro= null;
mwle_fn_removeGlobalShaderMacro= null;
mwle_fn_flushTextureCache= null;
mwle_fn_cleanupTexturePool= null;
mwle_fn_reloadTextures= null;
mwle_fn_getTextureProfileStats= null;
mwle_fn_screenShot= null;
mwle_fn_getActiveDDSFiles= null;
mwle_fn_getBitmapInfo= null;
mwle_fnCubemapData_updateFaces= null;
mwle_fnCubemapData_getFilename= null;
mwle_fnDebugDrawer_drawLine= null;
mwle_fnDebugDrawer_drawBox= null;
mwle_fnDebugDrawer_setLastTTL= null;
mwle_fnDebugDrawer_setLastZTest= null;
mwle_fnDebugDrawer_toggleFreeze= null;
mwle_fnDebugDrawer_toggleDrawing= null;
mwle_fn_startVideoCapture= null;
mwle_fn_stopVideoCapture= null;
mwle_fn_playJournalToVideo= null;
mwle_fnGuiTSCtrl_unproject= null;
mwle_fnGuiTSCtrl_project= null;
mwle_fnGuiTSCtrl_getWorldToScreenScale= null;
mwle_fnGuiTSCtrl_calculateViewDistance= null;
mwle_fnGuiBitmapButtonCtrl_setBitmap= null;
mwle_fnGuiButtonBaseCtrl_performClick= null;
mwle_fnGuiButtonBaseCtrl_setText= null;
mwle_fnGuiButtonBaseCtrl_setTextID= null;
mwle_fnGuiButtonBaseCtrl_getText= null;
mwle_fnGuiButtonBaseCtrl_setStateOn= null;
mwle_fnGuiButtonBaseCtrl_resetState= null;
mwle_fnGuiCheckBoxCtrl_setStateOn= null;
mwle_fnGuiCheckBoxCtrl_isStateOn= null;
mwle_fnGuiIconButtonCtrl_setBitmap= null;
mwle_fnGuiSwatchButtonCtrl_setColor= null;
mwle_fnGuiToolboxButtonCtrl_setNormalBitmap= null;
mwle_fnGuiToolboxButtonCtrl_setLoweredBitmap= null;
mwle_fnGuiToolboxButtonCtrl_setHoverBitmap= null;
mwle_fnGuiAutoScrollCtrl_reset= null;
mwle_fnGuiDynamicCtrlArrayControl_refresh= null;
mwle_fnGuiFormCtrl_setCaption= null;
mwle_fnGuiFrameSetCtrl_frameBorder= null;
mwle_fnGuiFrameSetCtrl_frameMovable= null;
mwle_fnGuiFrameSetCtrl_frameMinExtent= null;
mwle_fnGuiFrameSetCtrl_framePadding= null;
mwle_fnGuiFrameSetCtrl_getFramePadding= null;
mwle_fnGuiFrameSetCtrl_addColumn= null;
mwle_fnGuiFrameSetCtrl_addRow= null;
mwle_fnGuiFrameSetCtrl_removeColumn= null;
mwle_fnGuiFrameSetCtrl_removeRow= null;
mwle_fnGuiFrameSetCtrl_getColumnCount= null;
mwle_fnGuiFrameSetCtrl_getRowCount= null;
mwle_fnGuiFrameSetCtrl_getColumnOffset= null;
mwle_fnGuiFrameSetCtrl_getRowOffset= null;
mwle_fnGuiFrameSetCtrl_setColumnOffset= null;
mwle_fnGuiFrameSetCtrl_setRowOffset= null;
mwle_fnGuiFrameSetCtrl_updateSizes= null;
mwle_fnGuiPaneControl_setCollapsed= null;
mwle_fnGuiRolloutCtrl_isExpanded= null;
mwle_fnGuiRolloutCtrl_collapse= null;
mwle_fnGuiRolloutCtrl_expand= null;
mwle_fnGuiRolloutCtrl_toggleCollapse= null;
mwle_fnGuiRolloutCtrl_toggleExpanded= null;
mwle_fnGuiRolloutCtrl_instantCollapse= null;
mwle_fnGuiRolloutCtrl_instantExpand= null;
mwle_fnGuiRolloutCtrl_sizeToContents= null;
mwle_fnGuiScrollCtrl_scrollToTop= null;
mwle_fnGuiScrollCtrl_scrollToBottom= null;
mwle_fnGuiScrollCtrl_setScrollPosition= null;
mwle_fnGuiScrollCtrl_scrollToObject= null;
mwle_fnGuiScrollCtrl_getScrollPosition= null;
mwle_fnGuiScrollCtrl_getScrollPositionX= null;
mwle_fnGuiScrollCtrl_getScrollPositionY= null;
mwle_fnGuiScrollCtrl_computeSizes= null;
mwle_fnGuiStackControl_isFrozen= null;
mwle_fnGuiStackControl_freeze= null;
mwle_fnGuiStackControl_updateStack= null;
mwle_fnGuiTabBookCtrl_addPage= null;
mwle_fnGuiTabBookCtrl_selectPage= null;
mwle_fnGuiTabBookCtrl_getSelectedPage= null;
mwle_fnGuiBitmapCtrl_setBitmap= null;
mwle_fnGuiBitmapCtrl_setValue= null;
mwle_fnGuiColorPickerCtrl_getSelectorPos= null;
mwle_fnGuiColorPickerCtrl_setSelectorPos= null;
mwle_fnGuiColorPickerCtrl_updateColor= null;
mwle_fnGuiDirectoryFileListCtrl_setFilter= null;
mwle_fnGuiDirectoryFileListCtrl_reload= null;
mwle_fnGuiDirectoryFileListCtrl_setPath= null;
mwle_fnGuiDirectoryFileListCtrl_getSelectedFiles= null;
mwle_fnGuiDirectoryFileListCtrl_getSelectedFile= null;
mwle_fnGuiFileTreeCtrl_getSelectedPath= null;
mwle_fnGuiFileTreeCtrl_setSelectedPath= null;
mwle_fnGuiFileTreeCtrl_reload= null;
mwle_fnGuiGameListMenuCtrl_addRow= null;
mwle_fnGuiGameListMenuCtrl_isRowEnabled= null;
mwle_fnGuiGameListMenuCtrl_setRowEnabled= null;
mwle_fnGuiGameListMenuCtrl_activateRow= null;
mwle_fnGuiGameListMenuCtrl_getRowCount= null;
mwle_fnGuiGameListMenuCtrl_getRowLabel= null;
mwle_fnGuiGameListMenuCtrl_setRowLabel= null;
mwle_fnGuiGameListMenuCtrl_setSelected= null;
mwle_fnGuiGameListMenuCtrl_getSelectedRow= null;
mwle_fnGuiGameListOptionsCtrl_addRow= null;
mwle_fnGuiGameListOptionsCtrl_getCurrentOption= null;
mwle_fnGuiGameListOptionsCtrl_selectOption= null;
mwle_fnGuiGameListOptionsCtrl_setOptions= null;
mwle_fnGuiGradientCtrl_getColorCount= null;
mwle_fnGuiGradientCtrl_getColor= null;
mwle_fnGuiListBoxCtrl_setMultipleSelection= null;
mwle_fnGuiListBoxCtrl_clearItems= null;
mwle_fnGuiListBoxCtrl_clearSelection= null;
mwle_fnGuiListBoxCtrl_setSelected= null;
mwle_fnGuiListBoxCtrl_getItemCount= null;
mwle_fnGuiListBoxCtrl_getSelCount= null;
mwle_fnGuiListBoxCtrl_getSelectedItem= null;
mwle_fnGuiListBoxCtrl_getSelectedItems= null;
mwle_fnGuiListBoxCtrl_findItemText= null;
mwle_fnGuiListBoxCtrl_setCurSel= null;
mwle_fnGuiListBoxCtrl_setCurSelRange= null;
mwle_fnGuiListBoxCtrl_addItem= null;
mwle_fnGuiListBoxCtrl_setItemColor= null;
mwle_fnGuiListBoxCtrl_clearItemColor= null;
mwle_fnGuiListBoxCtrl_insertItem= null;
mwle_fnGuiListBoxCtrl_deleteItem= null;
mwle_fnGuiListBoxCtrl_getItemText= null;
mwle_fnGuiListBoxCtrl_getItemObject= null;
mwle_fnGuiListBoxCtrl_setItemText= null;
mwle_fnGuiListBoxCtrl_setItemTooltip= null;
mwle_fnGuiListBoxCtrl_getLastClickItem= null;
mwle_fnGuiListBoxCtrl_doMirror= null;
mwle_fnGuiListBoxCtrl_addFilteredItem= null;
mwle_fnGuiListBoxCtrl_removeFilteredItem= null;
mwle_fnGuiMaterialCtrl_setMaterial= null;
mwle_fn_StripMLControlChars= null;
mwle_fnGuiMLTextCtrl_setText= null;
mwle_fnGuiMLTextCtrl_getText= null;
mwle_fnGuiMLTextCtrl_addText= null;
mwle_fnGuiMLTextCtrl_setCursorPosition= null;
mwle_fnGuiMLTextCtrl_scrollToTag= null;
mwle_fnGuiMLTextCtrl_scrollToTop= null;
mwle_fnGuiMLTextCtrl_scrollToBottom= null;
mwle_fnGuiMLTextCtrl_forceReflow= null;
mwle_fnGuiMLTextCtrl_setAlpha= null;
mwle_fnGuiPopUpMenuCtrl_add= null;
mwle_fnGuiPopUpMenuCtrl_addScheme= null;
mwle_fnGuiPopUpMenuCtrl_getText= null;
mwle_fnGuiPopUpMenuCtrl_clear= null;
mwle_fnGuiPopUpMenuCtrl_sort= null;
mwle_fnGuiPopUpMenuCtrl_sortID= null;
mwle_fnGuiPopUpMenuCtrl_forceOnAction= null;
mwle_fnGuiPopUpMenuCtrl_forceClose= null;
mwle_fnGuiPopUpMenuCtrl_getSelected= null;
mwle_fnGuiPopUpMenuCtrl_setSelected= null;
mwle_fnGuiPopUpMenuCtrl_setFirstSelected= null;
mwle_fnGuiPopUpMenuCtrl_setNoneSelected= null;
mwle_fnGuiPopUpMenuCtrl_getTextById= null;
mwle_fnGuiPopUpMenuCtrl_changeTextById= null;
mwle_fnGuiPopUpMenuCtrl_setEnumContent= null;
mwle_fnGuiPopUpMenuCtrl_findText= null;
mwle_fnGuiPopUpMenuCtrl_size= null;
mwle_fnGuiPopUpMenuCtrl_replaceText= null;
mwle_fnGuiPopUpMenuCtrl_clearEntry= null;
mwle_fnGuiPopUpMenuCtrlEx_add= null;
mwle_fnGuiPopUpMenuCtrlEx_setSelected= null;
mwle_fnGuiPopUpMenuCtrlEx_setFirstSelected= null;
mwle_fnGuiPopUpMenuCtrlEx_getColorById= null;
mwle_fnGuiPopUpMenuCtrlEx_setEnumContent= null;
mwle_fnGuiPopUpMenuCtrlEx_findText= null;
mwle_fnGuiPopUpMenuCtrlEx_size= null;
mwle_fnGuiPopUpMenuCtrlEx_replaceText= null;
mwle_fnGuiPopUpMenuCtrlEx_clearEntry= null;
mwle_fnGuiPopUpMenuCtrlEx_addCategory= null;
mwle_fnGuiPopUpMenuCtrlEx_addScheme= null;
mwle_fnGuiPopUpMenuCtrlEx_setText= null;
mwle_fnGuiPopUpMenuCtrlEx_getText= null;
mwle_fnGuiPopUpMenuCtrlEx_clear= null;
mwle_fnGuiPopUpMenuCtrlEx_sort= null;
mwle_fnGuiPopUpMenuCtrlEx_sortID= null;
mwle_fnGuiPopUpMenuCtrlEx_forceOnAction= null;
mwle_fnGuiPopUpMenuCtrlEx_forceClose= null;
mwle_fnGuiPopUpMenuCtrlEx_getSelected= null;
mwle_fnGuiPopUpMenuCtrlEx_setNoneSelected= null;
mwle_fnGuiPopUpMenuCtrlEx_getTextById= null;
mwle_fnGuiSliderCtrl_getValue= null;
mwle_fnGuiSliderCtrl_setValue= null;
mwle_fnGuiSliderCtrl_isThumbBeingDragged= null;
mwle_fnGuiTabPageCtrl_select= null;
mwle_fnGuiTextCtrl_setText= null;
mwle_fnGuiTextCtrl_setTextID= null;
mwle_fnGuiTextEditCtrl_getText= null;
mwle_fnGuiTextEditCtrl_setText= null;
mwle_fnGuiTextEditCtrl_getCursorPos= null;
mwle_fnGuiTextEditCtrl_setCursorPos= null;
mwle_fnGuiTextEditCtrl_isAllTextSelected= null;
mwle_fnGuiTextEditCtrl_selectAllText= null;
mwle_fnGuiTextEditCtrl_clearSelectedText= null;
mwle_fnGuiTextEditCtrl_forceValidateText= null;
mwle_fnGuiTextListCtrl_getSelectedId= null;
mwle_fnGuiTextListCtrl_setSelectedById= null;
mwle_fnGuiTextListCtrl_setSelectedRow= null;
mwle_fnGuiTextListCtrl_getSelectedRow= null;
mwle_fnGuiTextListCtrl_clearSelection= null;
mwle_fnGuiTextListCtrl_addRow= null;
mwle_fnGuiTextListCtrl_setRowById= null;
mwle_fnGuiTextListCtrl_sort= null;
mwle_fnGuiTextListCtrl_sortNumerical= null;
mwle_fnGuiTextListCtrl_clear= null;
mwle_fnGuiTextListCtrl_rowCount= null;
mwle_fnGuiTextListCtrl_getRowId= null;
mwle_fnGuiTextListCtrl_getRowTextById= null;
mwle_fnGuiTextListCtrl_getRowNumById= null;
mwle_fnGuiTextListCtrl_getRowText= null;
mwle_fnGuiTextListCtrl_removeRowById= null;
mwle_fnGuiTextListCtrl_removeRow= null;
mwle_fnGuiTextListCtrl_scrollVisible= null;
mwle_fnGuiTextListCtrl_findTextIndex= null;
mwle_fnGuiTextListCtrl_setRowActive= null;
mwle_fnGuiTextListCtrl_isRowActive= null;
mwle_fnGuiTreeViewCtrl_addChildSelectionByValue= null;
mwle_fnGuiTreeViewCtrl_removeSelection= null;
mwle_fnGuiTreeViewCtrl_removeChildSelectionByValue= null;
mwle_fnGuiTreeViewCtrl_selectItem= null;
mwle_fnGuiTreeViewCtrl_expandItem= null;
mwle_fnGuiTreeViewCtrl_markItem= null;
mwle_fnGuiTreeViewCtrl_scrollVisible= null;
mwle_fnGuiTreeViewCtrl_buildIconTable= null;
mwle_fnGuiTreeViewCtrl_open= null;
mwle_fnGuiTreeViewCtrl_setItemTooltip= null;
mwle_fnGuiTreeViewCtrl_setItemImages= null;
mwle_fnGuiTreeViewCtrl_isParentItem= null;
mwle_fnGuiTreeViewCtrl_getItemText= null;
mwle_fnGuiTreeViewCtrl_getItemValue= null;
mwle_fnGuiTreeViewCtrl_editItem= null;
mwle_fnGuiTreeViewCtrl_removeItem= null;
mwle_fnGuiTreeViewCtrl_removeAllChildren= null;
mwle_fnGuiTreeViewCtrl_clear= null;
mwle_fnGuiTreeViewCtrl_getFirstRootItem= null;
mwle_fnGuiTreeViewCtrl_getChild= null;
mwle_fnGuiTreeViewCtrl_buildVisibleTree= null;
mwle_fnGuiTreeViewCtrl_getParent= null;
mwle_fnGuiTreeViewCtrl_getNextSibling= null;
mwle_fnGuiTreeViewCtrl_getPrevSibling= null;
mwle_fnGuiTreeViewCtrl_getItemCount= null;
mwle_fnGuiTreeViewCtrl_getSelectedItem= null;
mwle_fnGuiTreeViewCtrl_getSelectedObject= null;
mwle_fnGuiTreeViewCtrl_getSelectedObjectList= null;
mwle_fnGuiTreeViewCtrl_moveItemUp= null;
mwle_fnGuiTreeViewCtrl_getSelectedItemsCount= null;
mwle_fnGuiTreeViewCtrl_moveItemDown= null;
mwle_fnGuiTreeViewCtrl_getTextToRoot= null;
mwle_fnGuiTreeViewCtrl_getSelectedItemList= null;
mwle_fnGuiTreeViewCtrl_findItemByObjectId= null;
mwle_fnGuiTreeViewCtrl_scrollVisibleByObjectId= null;
mwle_fnGuiTreeViewCtrl_sort= null;
mwle_fnGuiTreeViewCtrl_cancelRename= null;
mwle_fnGuiTreeViewCtrl_onRenameValidate= null;
mwle_fnGuiTreeViewCtrl_showItemRenameCtrl= null;
mwle_fnGuiTreeViewCtrl_setDebug= null;
mwle_fnGuiTreeViewCtrl_findItemByName= null;
mwle_fnGuiTreeViewCtrl_findItemByValue= null;
mwle_fnGuiTreeViewCtrl_findChildItemByName= null;
mwle_fnGuiTreeViewCtrl_insertItem= null;
mwle_fnGuiTreeViewCtrl_lockSelection= null;
mwle_fnGuiTreeViewCtrl_hideSelection= null;
mwle_fnGuiTreeViewCtrl_toggleLockSelection= null;
mwle_fnGuiTreeViewCtrl_toggleHideSelection= null;
mwle_fnGuiTreeViewCtrl_clearSelection= null;
mwle_fnGuiTreeViewCtrl_deleteSelection= null;
mwle_fnGuiTreeViewCtrl_addSelection= null;
mwle_fnGuiTreeViewCtrl_isItemSelected= null;
mwle_fnGuiTreeViewCtrl_getFilterText= null;
mwle_fnGuiTreeViewCtrl_setFilterText= null;
mwle_fnGuiTreeViewCtrl_clearFilterText= null;
mwle_fnGuiCanvas_pushDialog= null;
mwle_fnGuiCanvas_popDialog= null;
mwle_fnGuiCanvas_popLayer= null;
mwle_fnGuiCanvas_setCursorPos= null;
mwle_fnGuiCanvas_isFullscreen= null;
mwle_fnGuiCanvas_minimizeWindow= null;
mwle_fnGuiCanvas_isMinimized= null;
mwle_fnGuiCanvas_isMaximized= null;
mwle_fnGuiCanvas_maximizeWindow= null;
mwle_fnGuiCanvas_restoreWindow= null;
mwle_fnGuiCanvas_setFocus= null;
mwle_fnGuiCanvas_setVideoMode= null;
mwle_fn_excludeOtherInstance= null;
mwle_fnGuiCanvas_getContent= null;
mwle_fnGuiCanvas_setContent= null;
mwle_fnGuiCanvas_cursorOn= null;
mwle_fnGuiCanvas_cursorOff= null;
mwle_fnGuiCanvas_setCursor= null;
mwle_fnGuiCanvas_renderFront= null;
mwle_fnGuiCanvas_showCursor= null;
mwle_fnGuiCanvas_hideCursor= null;
mwle_fnGuiCanvas_isCursorOn= null;
mwle_fnGuiCanvas_isCursorShown= null;
mwle_fnGuiCanvas_repaint= null;
mwle_fnGuiCanvas_reset= null;
mwle_fnGuiCanvas_getCursorPos= null;
mwle_fnGuiCanvas_getMouseControl= null;
mwle_fnGuiCanvas_getExtent= null;
mwle_fnGuiCanvas_setWindowTitle= null;
mwle_fnGuiCanvas_getVideoMode= null;
mwle_fnGuiCanvas_getModeCount= null;
mwle_fnGuiCanvas_getMode= null;
mwle_fnGuiCanvas_toggleFullscreen= null;
mwle_fnGuiCanvas_clientToScreen= null;
mwle_fnGuiCanvas_screenToClient= null;
mwle_fnGuiCanvas_getWindowPosition= null;
mwle_fnGuiCanvas_setWindowPosition= null;
mwle_fnGuiControl_getValue= null;
mwle_fnGuiControl_makeFirstResponder= null;
mwle_fnGuiControl_isActive= null;
mwle_fnGuiControl_setExtent= null;
mwle_fnGuiControl_findHitControl= null;
mwle_fnGuiControl_findHitControls= null;
mwle_fnGuiControl_controlIsChild= null;
mwle_fnGuiControl_isFirstResponder= null;
mwle_fnGuiControl_setFirstResponder= null;
mwle_fnGuiControl_getFirstResponder= null;
mwle_fnGuiControl_clearFirstResponder= null;
mwle_fnGuiControl_pointInControl= null;
mwle_fnGuiControl_addGuiControl= null;
mwle_fnGuiControl_getRoot= null;
mwle_fnGuiControl_getParent= null;
mwle_fnGuiControl_isMouseLocked= null;
mwle_fnGuiControl_setValue= null;
mwle_fnGuiControl_setActive= null;
mwle_fnGuiControl_isVisible= null;
mwle_fnGuiControl_setVisible= null;
mwle_fnGuiControl_isAwake= null;
mwle_fnGuiControl_setProfile= null;
mwle_fnGuiControl_resize= null;
mwle_fnGuiControl_getPosition= null;
mwle_fnGuiControl_getCenter= null;
mwle_fnGuiControl_setCenter= null;
mwle_fnGuiControl_getGlobalCenter= null;
mwle_fnGuiControl_getGlobalPosition= null;
mwle_fnGuiControl_setPositionGlobal= null;
mwle_fnGuiControl_setPosition= null;
mwle_fnGuiControl_getExtent= null;
mwle_fnGuiControl_getMinExtent= null;
mwle_fnGuiControl_getAspect= null;
mwle_fnGuiControlProfile_getStringWidth= null;
mwle_fnDbgFileView_setCurrentLine= null;
mwle_fnDbgFileView_getCurrentLine= null;
mwle_fnDbgFileView_open= null;
mwle_fnDbgFileView_clearBreakPositions= null;
mwle_fnDbgFileView_setBreakPosition= null;
mwle_fnDbgFileView_setBreak= null;
mwle_fnDbgFileView_removeBreak= null;
mwle_fnDbgFileView_findString= null;
mwle_fnGuiEditCtrl_getContentControl= null;
mwle_fnGuiEditCtrl_setContentControl= null;
mwle_fnGuiEditCtrl_addNewCtrl= null;
mwle_fnGuiEditCtrl_addSelection= null;
mwle_fnGuiEditCtrl_removeSelection= null;
mwle_fnGuiEditCtrl_clearSelection= null;
mwle_fnGuiEditCtrl_select= null;
mwle_fnGuiEditCtrl_setCurrentAddSet= null;
mwle_fnGuiEditCtrl_getCurrentAddSet= null;
mwle_fnGuiEditCtrl_toggle= null;
mwle_fnGuiEditCtrl_justify= null;
mwle_fnGuiEditCtrl_bringToFront= null;
mwle_fnGuiEditCtrl_pushToBack= null;
mwle_fnGuiEditCtrl_deleteSelection= null;
mwle_fnGuiEditCtrl_moveSelection= null;
mwle_fnGuiEditCtrl_saveSelection= null;
mwle_fnGuiEditCtrl_loadSelection= null;
mwle_fnGuiEditCtrl_selectAll= null;
mwle_fnGuiEditCtrl_getNumSelected= null;
mwle_fnGuiEditCtrl_getSelectionGlobalBounds= null;
mwle_fnGuiEditCtrl_selectParents= null;
mwle_fnGuiEditCtrl_selectChildren= null;
mwle_fnGuiEditCtrl_setSnapToGrid= null;
mwle_fnGuiEditCtrl_readGuides= null;
mwle_fnGuiEditCtrl_writeGuides= null;
mwle_fnGuiEditCtrl_clearGuides= null;
mwle_fnGuiEditCtrl_fitIntoParents= null;
mwle_fnGuiEditCtrl_getMouseMode= null;
mwle_fnGuiEditCtrl_getSelection= null;
mwle_fnGuiEditCtrl_getTrash= null;
mwle_fnGuiFilterCtrl_getValue= null;
mwle_fnGuiFilterCtrl_setValue= null;
mwle_fnGuiFilterCtrl_identity= null;
mwle_fnGuiGraphCtrl_addDatum= null;
mwle_fnGuiGraphCtrl_getDatum= null;
mwle_fnGuiGraphCtrl_addAutoPlot= null;
mwle_fnGuiGraphCtrl_removeAutoPlot= null;
mwle_fnGuiGraphCtrl_setGraphType= null;
mwle_fnGuiImageList_getImage= null;
mwle_fnGuiImageList_clear= null;
mwle_fnGuiImageList_count= null;
mwle_fnGuiImageList_remove= null;
mwle_fnGuiImageList_getIndex= null;
mwle_fnGuiImageList_insert= null;
mwle_fnGuiInspector_inspect= null;
mwle_fnGuiInspector_addInspect= null;
mwle_fnGuiInspector_removeInspect= null;
mwle_fnGuiInspector_refresh= null;
mwle_fnGuiInspector_getInspectObject= null;
mwle_fnGuiInspector_getNumInspectObjects= null;
mwle_fnGuiInspector_setName= null;
mwle_fnGuiInspector_apply= null;
mwle_fnGuiInspector_setObjectField= null;
mwle_fnGuiInspectorTypeFileName_apply= null;
mwle_fnGuiInspectorTypeBitMask32_applyBit= null;
mwle_fnGuiMenuBar_clearMenus= null;
mwle_fnGuiMenuBar_setMenuMargins= null;
mwle_fnGuiMenuBar_addMenu= null;
mwle_fnGuiMenuBar_addMenuItem= null;
mwle_fnGuiMenuBar_setMenuItemEnable= null;
mwle_fnGuiMenuBar_setCheckmarkBitmapIndex= null;
mwle_fnGuiMenuBar_setMenuItemChecked= null;
mwle_fnGuiMenuBar_setMenuText= null;
mwle_fnGuiMenuBar_setMenuBitmapIndex= null;
mwle_fnGuiMenuBar_setMenuVisible= null;
mwle_fnGuiMenuBar_setMenuItemText= null;
mwle_fnGuiMenuBar_setMenuItemVisible= null;
mwle_fnGuiMenuBar_setMenuItemBitmap= null;
mwle_fnGuiMenuBar_removeMenuItem= null;
mwle_fnGuiMenuBar_clearMenuItems= null;
mwle_fnGuiMenuBar_removeMenu= null;
mwle_fnGuiMenuBar_setMenuItemSubmenuState= null;
mwle_fnGuiMenuBar_addSubmenuItem= null;
mwle_fnGuiMenuBar_clearSubmenuItems= null;
mwle_fnGuiMenuBar_setSubmenuItemChecked= null;
mwle_fnGuiParticleGraphCtrl_setSelectedPoint= null;
mwle_fnGuiParticleGraphCtrl_setSelectedPlot= null;
mwle_fnGuiParticleGraphCtrl_clearGraph= null;
mwle_fnGuiParticleGraphCtrl_clearAllGraphs= null;
mwle_fnGuiParticleGraphCtrl_addPlotPoint= null;
mwle_fnGuiParticleGraphCtrl_insertPlotPoint= null;
mwle_fnGuiParticleGraphCtrl_changePlotPoint= null;
mwle_fnGuiParticleGraphCtrl_getSelectedPlot= null;
mwle_fnGuiParticleGraphCtrl_getSelectedPoint= null;
mwle_fnGuiParticleGraphCtrl_isExistingPoint= null;
mwle_fnGuiParticleGraphCtrl_getPlotPoint= null;
mwle_fnGuiParticleGraphCtrl_getPlotIndex= null;
mwle_fnGuiParticleGraphCtrl_getGraphColor= null;
mwle_fnGuiParticleGraphCtrl_getGraphMin= null;
mwle_fnGuiParticleGraphCtrl_getGraphMax= null;
mwle_fnGuiParticleGraphCtrl_getGraphName= null;
mwle_fnGuiParticleGraphCtrl_setGraphMin= null;
mwle_fnGuiParticleGraphCtrl_setGraphMinX= null;
mwle_fnGuiParticleGraphCtrl_setGraphMinY= null;
mwle_fnGuiParticleGraphCtrl_setGraphMax= null;
mwle_fnGuiParticleGraphCtrl_setGraphMaxX= null;
mwle_fnGuiParticleGraphCtrl_setGraphMaxY= null;
mwle_fnGuiParticleGraphCtrl_setGraphHidden= null;
mwle_fnGuiParticleGraphCtrl_setAutoGraphMax= null;
mwle_fnGuiParticleGraphCtrl_setAutoRemove= null;
mwle_fnGuiParticleGraphCtrl_setRenderAll= null;
mwle_fnGuiParticleGraphCtrl_setPointXMovementClamped= null;
mwle_fnGuiParticleGraphCtrl_setRenderGraphTooltip= null;
mwle_fnGuiParticleGraphCtrl_setGraphName= null;
mwle_fnGuiParticleGraphCtrl_resetSelectedPoint= null;
mwle_fnGuiShapeEdPreview_setOrbitPos= null;
mwle_fnGuiShapeEdPreview_setModel= null;
mwle_fnGuiShapeEdPreview_fitToShape= null;
mwle_fnGuiShapeEdPreview_refreshShape= null;
mwle_fnGuiShapeEdPreview_updateNodeTransforms= null;
mwle_fnGuiShapeEdPreview_computeShapeBounds= null;
mwle_fnGuiShapeEdPreview_getMeshHidden= null;
mwle_fnGuiShapeEdPreview_setMeshHidden= null;
mwle_fnGuiShapeEdPreview_setAllMeshesHidden= null;
mwle_fnGuiShapeEdPreview_exportToCollada= null;
mwle_fnGuiShapeEdPreview_addThread= null;
mwle_fnGuiShapeEdPreview_removeThread= null;
mwle_fnGuiShapeEdPreview_getThreadCount= null;
mwle_fnGuiShapeEdPreview_setTimeScale= null;
mwle_fnGuiShapeEdPreview_setThreadSequence= null;
mwle_fnGuiShapeEdPreview_getThreadSequence= null;
mwle_fnGuiShapeEdPreview_refreshThreadSequences= null;
mwle_fnGuiShapeEdPreview_mountShape= null;
mwle_fnGuiShapeEdPreview_setMountNode= null;
mwle_fnGuiShapeEdPreview_getMountThreadSequence= null;
mwle_fnGuiShapeEdPreview_setMountThreadSequence= null;
mwle_fnGuiShapeEdPreview_getMountThreadPos= null;
mwle_fnGuiShapeEdPreview_setMountThreadPos= null;
mwle_fnGuiShapeEdPreview_getMountThreadDir= null;
mwle_fnGuiShapeEdPreview_setMountThreadDir= null;
mwle_fnGuiShapeEdPreview_unmountShape= null;
mwle_fnGuiShapeEdPreview_unmountAll= null;
mwle_fnGuiInspectorDynamicField_renameField= null;
mwle_fnGuiInspectorDynamicGroup_inspectGroup= null;
mwle_fnGuiInspectorDynamicGroup_addDynamicField= null;
mwle_fnGuiInspectorDynamicGroup_removeDynamicField= null;
mwle_fnGuiInspectorField_getInspector= null;
mwle_fnGuiInspectorField_getInspectedFieldName= null;
mwle_fnGuiInspectorField_getInspectedFieldType= null;
mwle_fnGuiInspectorField_apply= null;
mwle_fnGuiInspectorField_applyWithoutUndo= null;
mwle_fnGuiInspectorField_getData= null;
mwle_fnGuiInspectorField_reset= null;
mwle_fnGuiVariableInspector_loadVars= null;
mwle_fnGuiMessageVectorCtrl_attach= null;
mwle_fnGuiMessageVectorCtrl_detach= null;
mwle_fnGuiProgressBitmapCtrl_setBitmap= null;
mwle_fnGuiTickCtrl_setProcessTicks= null;
mwle_fnGuiTheoraCtrl_setFile= null;
mwle_fnGuiTheoraCtrl_play= null;
mwle_fnGuiTheoraCtrl_pause= null;
mwle_fnGuiTheoraCtrl_stop= null;
mwle_fnGuiTheoraCtrl_getCurrentTime= null;
mwle_fnGuiTheoraCtrl_isPlaybackDone= null;
mwle_fnMessageVector_dump= null;
mwle_fnMessageVector_clear= null;
mwle_fnMessageVector_pushBackLine= null;
mwle_fnMessageVector_popBackLine= null;
mwle_fnMessageVector_pushFrontLine= null;
mwle_fnMessageVector_popFrontLine= null;
mwle_fnMessageVector_insertLine= null;
mwle_fnMessageVector_deleteLine= null;
mwle_fnMessageVector_getNumLines= null;
mwle_fnMessageVector_getLineTextByTag= null;
mwle_fnMessageVector_getLineIndexByTag= null;
mwle_fnMessageVector_getLineText= null;
mwle_fnMessageVector_getLineTag= null;
mwle_fnEditTSCtrl_getDisplayType= null;
mwle_fnEditTSCtrl_setDisplayType= null;
mwle_fnEditTSCtrl_getOrthoFOV= null;
mwle_fnEditTSCtrl_setOrthoFOV= null;
mwle_fnEditTSCtrl_renderBox= null;
mwle_fnEditTSCtrl_renderSphere= null;
mwle_fnEditTSCtrl_renderCircle= null;
mwle_fnEditTSCtrl_renderTriangle= null;
mwle_fnEditTSCtrl_renderLine= null;
mwle_fnEditTSCtrl_getGizmo= null;
mwle_fnEditTSCtrl_isMiddleMouseDown= null;
mwle_fnGuiMissionAreaCtrl_setMissionArea= null;
mwle_fnGuiMissionAreaCtrl_updateTerrain= null;
mwle_fnMECreateUndoAction_addObject= null;
mwle_fnMEDeleteUndoAction_deleteObject= null;
mwle_fnWorldEditor_ignoreObjClass= null;
mwle_fnWorldEditor_clearIgnoreList= null;
mwle_fnWorldEditor_clearSelection= null;
mwle_fnWorldEditor_getActiveSelection= null;
mwle_fnWorldEditor_setActiveSelection= null;
mwle_fnWorldEditor_selectObject= null;
mwle_fnWorldEditor_unselectObject= null;
mwle_fnWorldEditor_invalidateSelectionCentroid= null;
mwle_fnWorldEditor_getSelectionSize= null;
mwle_fnWorldEditor_getSelectedObject= null;
mwle_fnWorldEditor_getSelectionRadius= null;
mwle_fnWorldEditor_getSelectionCentroid= null;
mwle_fnWorldEditor_getSelectionExtent= null;
mwle_fnWorldEditor_dropSelection= null;
mwle_fnWorldEditor_cutSelection= null;
mwle_fnWorldEditor_copySelection= null;
mwle_fnWorldEditor_pasteSelection= null;
mwle_fnWorldEditor_canPasteSelection= null;
mwle_fnWorldEditor_hideObject= null;
mwle_fnWorldEditor_hideSelection= null;
mwle_fnWorldEditor_lockSelection= null;
mwle_fnWorldEditor_alignByBounds= null;
mwle_fnWorldEditor_alignByAxis= null;
mwle_fnWorldEditor_resetSelectedRotation= null;
mwle_fnWorldEditor_resetSelectedScale= null;
mwle_fnWorldEditor_redirectConsole= null;
mwle_fnWorldEditor_addUndoState= null;
mwle_fnWorldEditor_getSoftSnap= null;
mwle_fnWorldEditor_setSoftSnap= null;
mwle_fnWorldEditor_getSoftSnapSize= null;
mwle_fnWorldEditor_setSoftSnapSize= null;
mwle_fnWorldEditor_softSnapSizeByBounds= null;
mwle_fnWorldEditor_getSoftSnapBackfaceTolerance= null;
mwle_fnWorldEditor_setSoftSnapBackfaceTolerance= null;
mwle_fnWorldEditor_softSnapRender= null;
mwle_fnWorldEditor_softSnapRenderTriangle= null;
mwle_fnWorldEditor_softSnapDebugRender= null;
mwle_fnWorldEditor_transformSelection= null;
mwle_fnWorldEditor_colladaExportSelection= null;
mwle_fnWorldEditor_makeSelectionPrefab= null;
mwle_fnWorldEditor_explodeSelectedPrefab= null;
mwle_fnWorldEditor_mountRelative= null;
mwle_fnWorldEditor_getSoftSnapAlignment= null;
mwle_fnWorldEditor_setSoftSnapAlignment= null;
mwle_fnWorldEditor_getTerrainSnapAlignment= null;
mwle_fnWorldEditor_setTerrainSnapAlignment= null;
mwle_fnWorldEditor_createPolyhedralObject= null;
mwle_fnWorldEditor_createConvexShapeFrom= null;
mwle_fnLangTable_addLanguage= null;
mwle_fnLangTable_getString= null;
mwle_fnLangTable_setDefaultLanguage= null;
mwle_fnLangTable_setCurrentLanguage= null;
mwle_fnLangTable_getCurrentLanguage= null;
mwle_fnLangTable_getLangName= null;
mwle_fnLangTable_getNumLang= null;
mwle_fn__setInteriorFocusedDebug= null;
mwle_fn__isPointInside= null;
mwle_fn_setInteriorRenderMode= null;
mwle_fnPathedInterior_setPathPosition= null;
mwle_fnPathedInterior_setTargetPosition= null;
mwle_fn_setLightManager= null;
mwle_fn_lightScene= null;
mwle_fn_getLightManagerNames= null;
mwle_fn_getActiveLightManager= null;
mwle_fn_resetLightManager= null;
mwle_fn__setShadowVizLight= null;
mwle_fnMaterial_flush= null;
mwle_fnMaterial_reload= null;
mwle_fnMaterial_dumpInstances= null;
mwle_fnMaterial_getAnimFlags= null;
mwle_fnMaterial_getFilename= null;
mwle_fnMaterial_isAutoGenerated= null;
mwle_fnMaterial_setAutoGenerated= null;
mwle_fn__addMaterialMapping= null;
mwle_fn__getMaterialMapping= null;
mwle_fn__getRandom= null;
mwle_fn_VectorAdd= null;
mwle_fn_VectorSub= null;
mwle_fn_VectorScale= null;
mwle_fn_VectorNormalize= null;
mwle_fn_VectorDot= null;
mwle_fn_VectorCross= null;
mwle_fn_VectorDist= null;
mwle_fn_VectorLen= null;
mwle_fn_VectorOrthoBasis= null;
mwle_fn_VectorLerp= null;
mwle_fn_MatrixCreate= null;
mwle_fn_MatrixCreateFromEuler= null;
mwle_fn_MatrixMultiply= null;
mwle_fn_MatrixMulVector= null;
mwle_fn_MatrixMulPoint= null;
mwle_fn_getBoxCenter= null;
mwle_fn_setRandomSeed= null;
mwle_fn_getRandomSeed= null;
mwle_fn_mSolveQuadratic= null;
mwle_fn_mSolveCubic= null;
mwle_fn_mSolveQuartic= null;
mwle_fn_mFloor= null;
mwle_fn_mRound= null;
mwle_fn_mCeil= null;
mwle_fn_mFloatLength= null;
mwle_fn_mAbs= null;
mwle_fn_mFMod= null;
mwle_fn_mSqrt= null;
mwle_fn_mPow= null;
mwle_fn_mLog= null;
mwle_fn_mSin= null;
mwle_fn_mCos= null;
mwle_fn_mTan= null;
mwle_fn_mAsin= null;
mwle_fn_mAcos= null;
mwle_fn_mAtan= null;
mwle_fn_mRadToDeg= null;
mwle_fn_mDegToRad= null;
mwle_fn_mClamp= null;
mwle_fn_mSaturate= null;
mwle_fn_getMax= null;
mwle_fn_getMin= null;
mwle_fn_mLerp= null;
mwle_fn_mPi= null;
mwle_fn_m2Pi= null;
mwle_fn_mIsPow2= null;
mwle_fnSimResponseCurve_addPoint= null;
mwle_fnSimResponseCurve_getValue= null;
mwle_fnSimResponseCurve_clear= null;
mwle_fn__getTemporaryDirectory= null;
mwle_fn__getTemporaryFileName= null;
mwle_fn_profilerMarkerEnable= null;
mwle_fn_profilerEnable= null;
mwle_fn_profilerDump= null;
mwle_fn_profilerDumpToFile= null;
mwle_fn_profilerReset= null;
mwle_fnMenuBar_attachToCanvas= null;
mwle_fnMenuBar_removeFromCanvas= null;
mwle_fnMenuBar_insert= null;
mwle_fnPopupMenu_insertItem= null;
mwle_fnPopupMenu_removeItem= null;
mwle_fnPopupMenu_insertSubMenu= null;
mwle_fnPopupMenu_setItem= null;
mwle_fnPopupMenu_enableItem= null;
mwle_fnPopupMenu_checkItem= null;
mwle_fnPopupMenu_checkRadioItem= null;
mwle_fnPopupMenu_isItemChecked= null;
mwle_fnPopupMenu_getItemCount= null;
mwle_fnPopupMenu_attachToMenuBar= null;
mwle_fnPopupMenu_removeFromMenuBar= null;
mwle_fnPopupMenu_showPopup= null;
mwle_fn_messageBox= null;
mwle_fn__isJoystickEnabled= null;
mwle_fn__enableXInput= null;
mwle_fn__isXInputConnected= null;
mwle_fn__getXInputState= null;
mwle_fn__rumble= null;
mwle_fnFileDialog_Execute= null;
mwle_fn__debug_debugbreak= null;
mwle_fn_dumpRandomNormalMap= null;
mwle_fnPostEffect_reload= null;
mwle_fnPostEffect_enable= null;
mwle_fnPostEffect_disable= null;
mwle_fnPostEffect_toggle= null;
mwle_fnPostEffect_isEnabled= null;
mwle_fnPostEffect_setTexture= null;
mwle_fnPostEffect_setShaderConst= null;
mwle_fnPostEffect_getAspectRatio= null;
mwle_fnPostEffect_dumpShaderDisassembly= null;
mwle_fnPostEffect_setShaderMacro= null;
mwle_fnPostEffect_removeShaderMacro= null;
mwle_fnPostEffect_clearShaderMacros= null;
mwle_fnRenderBinManager_getBinType= null;
mwle_fnRenderPassManager_getManagerCount= null;
mwle_fnRenderPassManager_getManager= null;
mwle_fnRenderPassManager_addManager= null;
mwle_fnRenderPassManager_removeManager= null;
mwle_fnRenderPassStateToken_enable= null;
mwle_fnRenderPassStateToken_disable= null;
mwle_fnRenderPassStateToken_toggle= null;
mwle_fn__clearClientPaths= null;
mwle_fn_setReflectFormat= null;
mwle_fn_containerBoxEmpty= null;
mwle_fn_initContainerRadiusSearch= null;
mwle_fn_initContainerTypeSearch= null;
mwle_fn_containerSearchNext= null;
mwle_fn_containerSearchCurrDist= null;
mwle_fn_containerSearchCurrRadiusDist= null;
mwle_fn_containerRayCast= null;
mwle_fn_sceneDumpZoneStates= null;
mwle_fn_sceneGetZoneOwner= null;
mwle_fnSceneObject_getType= null;
mwle_fnSceneObject_mountObject= null;
mwle_fnSceneObject_unmountObject= null;
mwle_fnSceneObject_unmount= null;
mwle_fnSceneObject_isMounted= null;
mwle_fnSceneObject_getObjectMount= null;
mwle_fnSceneObject_getMountedObjectCount= null;
mwle_fnSceneObject_getMountedObject= null;
mwle_fnSceneObject_getMountedObjectNode= null;
mwle_fnSceneObject_getMountNodeObject= null;
mwle_fnSceneObject_getTransform= null;
mwle_fnSceneObject_getInverseTransform= null;
mwle_fnSceneObject_getPosition= null;
mwle_fnSceneObject_getEulerRotation= null;
mwle_fnSceneObject_getForwardVector= null;
mwle_fnSceneObject_getRightVector= null;
mwle_fnSceneObject_getUpVector= null;
mwle_fnSceneObject_setTransform= null;
mwle_fnSceneObject_getScale= null;
mwle_fnSceneObject_setScale= null;
mwle_fnSceneObject_getWorldBox= null;
mwle_fnSceneObject_getWorldBoxCenter= null;
mwle_fnSceneObject_getObjectBox= null;
mwle_fnSceneObject_isGlobalBounds= null;
mwle_fn_pathOnMissionLoadDone= null;
mwle_fnSFXController_getCurrentSlot= null;
mwle_fnSFXController_setCurrentSlot= null;
mwle_fnSFXParameter_getParameterName= null;
mwle_fnSFXParameter_reset= null;
mwle_fnSFXProfile_getSoundDuration= null;
mwle_fnSFXSource_setTransform= null;
mwle_fnSFXSource_play= null;
mwle_fnSFXSource_stop= null;
mwle_fnSFXSource_pause= null;
mwle_fnSFXSource_isPlaying= null;
mwle_fnSFXSource_isPaused= null;
mwle_fnSFXSource_isStopped= null;
mwle_fnSFXSource_getStatus= null;
mwle_fnSFXSource_getVolume= null;
mwle_fnSFXSource_setVolume= null;
mwle_fnSFXSource_getAttenuatedVolume= null;
mwle_fnSFXSource_getFadeInTime= null;
mwle_fnSFXSource_getFadeOutTime= null;
mwle_fnSFXSource_setFadeTimes= null;
mwle_fnSFXSource_getPitch= null;
mwle_fnSFXSource_setPitch= null;
mwle_fnSFXSource_setCone= null;
mwle_fnSFXSource_getParameterCount= null;
mwle_fnSFXSource_addParameter= null;
mwle_fnSFXSource_removeParameter= null;
mwle_fnSFXSource_getParameter= null;
mwle_fnSFXSource_addMarker= null;
mwle_fn__sfxCreateSource= null;
mwle_fn__sfxPlay= null;
mwle_fn__sfxPlayOnce= null;
mwle_fn_sfxGetAvailableDevices= null;
mwle_fn_sfxCreateDevice= null;
mwle_fn_sfxDeleteDevice= null;
mwle_fn_sfxGetDeviceInfo= null;
mwle_fn_sfxStop= null;
mwle_fn_sfxStopAndDelete= null;
mwle_fn_sfxDeleteWhenStopped= null;
mwle_fn_sfxGetDistanceModel= null;
mwle_fn_sfxSetDistanceModel= null;
mwle_fn_sfxGetDopplerFactor= null;
mwle_fn_sfxSetDopplerFactor= null;
mwle_fn_sfxGetRolloffFactor= null;
mwle_fn_sfxSetRolloffFactor= null;
mwle_fn_sfxDumpSources= null;
mwle_fn_sfxDumpSourcesToString= null;
mwle_fnActionMap_bind= null;
mwle_fnActionMap_bindObj= null;
mwle_fn_getCurrentActionMap= null;
mwle_fnActionMap_bindCmd= null;
mwle_fnActionMap_unbind= null;
mwle_fnActionMap_unbindObj= null;
mwle_fnActionMap_save= null;
mwle_fnActionMap_push= null;
mwle_fnActionMap_pop= null;
mwle_fnActionMap_getBinding= null;
mwle_fnActionMap_getCommand= null;
mwle_fnActionMap_isInverted= null;
mwle_fnActionMap_getScale= null;
mwle_fnActionMap_getDeadZone= null;
mwle_fnNetConnection_transmitPaths= null;
mwle_fnNetConnection_clearPaths= null;
mwle_fnNetConnection_getAddress= null;
mwle_fnNetConnection_setSimulatedNetParams= null;
mwle_fnNetConnection_getPing= null;
mwle_fnNetConnection_getPacketLoss= null;
mwle_fnNetConnection_checkMaxRate= null;
mwle_fnNetConnection_resolveGhostID= null;
mwle_fnNetConnection_resolveObjectFromGhostIndex= null;
mwle_fnNetConnection_getGhostID= null;
mwle_fnNetConnection_connect= null;
mwle_fnNetConnection_connectLocal= null;
mwle_fnNetConnection_getGhostsActive= null;
mwle_fnNetObject_scopeToClient= null;
mwle_fnNetObject_clearScopeToClient= null;
mwle_fnNetObject_setScopeAlways= null;
mwle_fnNetObject_getGhostID= null;
mwle_fnNetObject_getClientObject= null;
mwle_fnNetObject_getServerObject= null;
mwle_fnNetObject_isClientObject= null;
mwle_fnNetObject_isServerObject= null;
mwle_fn__aiAddPlayer= null;
mwle_fnAIClient_setMoveSpeed= null;
mwle_fnAIClient_stop= null;
mwle_fnAIClient_setAimLocation= null;
mwle_fnAIClient_setMoveDestination= null;
mwle_fnAIClient_getAimLocation= null;
mwle_fnAIClient_getMoveDestination= null;
mwle_fnAIClient_setTargetObject= null;
mwle_fnAIClient_getTargetObject= null;
mwle_fnAIClient_missionCycleCleanup= null;
mwle_fnAIClient_move= null;
mwle_fnAIClient_getLocation= null;
mwle_fnAIClient_moveForward= null;
mwle_fn__aiConnect= null;
mwle_fnAIConnection_setMove= null;
mwle_fnAIConnection_getMove= null;
mwle_fnAIConnection_setFreeLook= null;
mwle_fnAIConnection_getFreeLook= null;
mwle_fnAIConnection_setTrigger= null;
mwle_fnAIConnection_getTrigger= null;
mwle_fnAIConnection_getAddress= null;
mwle_fnAIPlayer_setAimObject= null;
mwle_fnAIPlayer_stop= null;
mwle_fnAIPlayer_clearAim= null;
mwle_fnAIPlayer_setMoveSpeed= null;
mwle_fnAIPlayer_getMoveSpeed= null;
mwle_fnAIPlayer_setMoveDestination= null;
mwle_fnAIPlayer_getMoveDestination= null;
mwle_fnAIPlayer_setAimLocation= null;
mwle_fnAIPlayer_getAimLocation= null;
mwle_fnAIPlayer_getAimObject= null;
mwle_fnCamera_getMode= null;
mwle_fnCamera_getPosition= null;
mwle_fnCamera_getRotation= null;
mwle_fnCamera_setRotation= null;
mwle_fnCamera_getOffset= null;
mwle_fnCamera_setOffset= null;
mwle_fnCamera_setOrbitMode= null;
mwle_fnCamera_setOrbitObject= null;
mwle_fnCamera_setOrbitPoint= null;
mwle_fnCamera_setTrackObject= null;
mwle_fnCamera_setEditOrbitMode= null;
mwle_fnCamera_setFlyMode= null;
mwle_fnCamera_setNewtonFlyMode= null;
mwle_fnCamera_isRotationDamped= null;
mwle_fnCamera_getAngularVelocity= null;
mwle_fnCamera_setAngularVelocity= null;
mwle_fnCamera_setAngularForce= null;
mwle_fnCamera_setAngularDrag= null;
mwle_fnCamera_setMass= null;
mwle_fnCamera_getVelocity= null;
mwle_fnCamera_setVelocity= null;
mwle_fnCamera_setDrag= null;
mwle_fnCamera_setFlyForce= null;
mwle_fnCamera_setSpeedMultiplier= null;
mwle_fnCamera_setBrakeMultiplier= null;
mwle_fnCamera_isEditOrbitMode= null;
mwle_fnCamera_setValidEditOrbitPoint= null;
mwle_fnCamera_setEditOrbitPoint= null;
mwle_fnCamera_autoFitRadius= null;
mwle_fnCamera_lookAt= null;
mwle_fnDebris_init= null;
mwle_fn__containerFindFirst= null;
mwle_fn__containerFindNext= null;
mwle_fnGroundPlane_postApply= null;
mwle_fnGuiMaterialPreview_setModel= null;
mwle_fnGuiMaterialPreview_deleteModel= null;
mwle_fnGuiMaterialPreview_setOrbitDistance= null;
mwle_fnGuiMaterialPreview_reset= null;
mwle_fnGuiMaterialPreview_setLightColor= null;
mwle_fnGuiMaterialPreview_setAmbientLightColor= null;
mwle_fnGuiObjectView_getModel= null;
mwle_fnGuiObjectView_setModel= null;
mwle_fnGuiObjectView_getMountedModel= null;
mwle_fnGuiObjectView_setMountedModel= null;
mwle_fnGuiObjectView_getSkin= null;
mwle_fnGuiObjectView_setSkin= null;
mwle_fnGuiObjectView_getMountSkin= null;
mwle_fnGuiObjectView_setMountSkin= null;
mwle_fnGuiObjectView_setSeq= null;
mwle_fnGuiObjectView_setMount= null;
mwle_fnGuiObjectView_getOrbitDistance= null;
mwle_fnGuiObjectView_setOrbitDistance= null;
mwle_fnGuiObjectView_getCameraSpeed= null;
mwle_fnGuiObjectView_setCameraSpeed= null;
mwle_fnGuiObjectView_setLightColor= null;
mwle_fnGuiObjectView_setLightAmbient= null;
mwle_fnGuiObjectView_setLightDirection= null;
mwle_fnItem_isStatic= null;
mwle_fnItem_isAtRest= null;
mwle_fnItem_isRotating= null;
mwle_fnItem_setCollisionTimeout= null;
mwle_fnItem_getLastStickyPos= null;
mwle_fnItem_getLastStickyNormal= null;
mwle_fnLightBase_playAnimation= null;
mwle_fnLightBase_pauseAnimation= null;
mwle_fnLightBase_setLightEnabled= null;
mwle_fnLightDescription_apply= null;
mwle_fnLightFlareData_apply= null;
mwle_fn_getMissionAreaServerObject= null;
mwle_fnMissionArea_getArea= null;
mwle_fnMissionArea_setArea= null;
mwle_fnMissionArea_postApply= null;
mwle_fnSpawnSphere_spawnObject= null;
mwle_fnPathCamera_setPosition= null;
mwle_fnPathCamera_setTarget= null;
mwle_fnPathCamera_setState= null;
mwle_fnPathCamera_reset= null;
mwle_fnPathCamera_pushBack= null;
mwle_fnPathCamera_pushFront= null;
mwle_fnPathCamera_popFront= null;
mwle_fnPhysicalZone_activate= null;
mwle_fnPhysicalZone_deactivate= null;
mwle_fnPlayer_getPose= null;
mwle_fnPlayer_allowAllPoses= null;
mwle_fnPlayer_allowJumping= null;
mwle_fnPlayer_allowJetJumping= null;
mwle_fnPlayer_allowSprinting= null;
mwle_fnPlayer_allowCrouching= null;
mwle_fnPlayer_allowProne= null;
mwle_fnPlayer_allowSwimming= null;
mwle_fnPlayer_getState= null;
mwle_fnPlayer_getDamageLocation= null;
mwle_fnPlayer_setArmThread= null;
mwle_fnPlayer_setActionThread= null;
mwle_fnPlayer_setControlObject= null;
mwle_fnPlayer_getControlObject= null;
mwle_fnPlayer_clearControlObject= null;
mwle_fnPlayer_checkDismountPoint= null;
mwle_fnPlayer_getNumDeathAnimations= null;
mwle_fnPortal_isInteriorPortal= null;
mwle_fnPortal_isExteriorPortal= null;
mwle_fnProjectile_presimulate= null;
mwle_fnProximityMine_explode= null;
mwle_fnShapeBaseData_checkDeployPos= null;
mwle_fnShapeBaseData_getDeployTransform= null;
mwle_fnShapeBase_setHidden= null;
mwle_fnShapeBase_isHidden= null;
mwle_fnShapeBase_playAudio= null;
mwle_fnShapeBase_stopAudio= null;
mwle_fnShapeBase_playThread= null;
mwle_fnShapeBase_setThreadDir= null;
mwle_fnShapeBase_setThreadTimeScale= null;
mwle_fnShapeBase_setThreadPosition= null;
mwle_fnShapeBase_stopThread= null;
mwle_fnShapeBase_destroyThread= null;
mwle_fnShapeBase_pauseThread= null;
mwle_fnShapeBase_mountImage= null;
mwle_fnShapeBase_unmountImage= null;
mwle_fnShapeBase_getMountedImage= null;
mwle_fnShapeBase_getPendingImage= null;
mwle_fnShapeBase_isImageFiring= null;
mwle_fnShapeBase_isImageMounted= null;
mwle_fnShapeBase_getMountSlot= null;
mwle_fnShapeBase_getImageSkinTag= null;
mwle_fnShapeBase_getImageState= null;
mwle_fnShapeBase_hasImageState= null;
mwle_fnShapeBase_getImageTrigger= null;
mwle_fnShapeBase_setImageTrigger= null;
mwle_fnShapeBase_getImageGenericTrigger= null;
mwle_fnShapeBase_setImageGenericTrigger= null;
mwle_fnShapeBase_getImageAltTrigger= null;
mwle_fnShapeBase_setImageAltTrigger= null;
mwle_fnShapeBase_getImageAmmo= null;
mwle_fnShapeBase_setImageAmmo= null;
mwle_fnShapeBase_getImageLoaded= null;
mwle_fnShapeBase_setImageLoaded= null;
mwle_fnShapeBase_getImageTarget= null;
mwle_fnShapeBase_setImageTarget= null;
mwle_fnShapeBase_getImageScriptAnimPrefix= null;
mwle_fnShapeBase_setImageScriptAnimPrefix= null;
mwle_fnShapeBase_getMuzzleVector= null;
mwle_fnShapeBase_getMuzzlePoint= null;
mwle_fnShapeBase_getSlotTransform= null;
mwle_fnShapeBase_getAIRepairPoint= null;
mwle_fnShapeBase_getVelocity= null;
mwle_fnShapeBase_setVelocity= null;
mwle_fnShapeBase_applyImpulse= null;
mwle_fnShapeBase_getEyeVector= null;
mwle_fnShapeBase_getEyePoint= null;
mwle_fnShapeBase_getEyeTransform= null;
mwle_fnShapeBase_getLookAtPoint= null;
mwle_fnShapeBase_setEnergyLevel= null;
mwle_fnShapeBase_getEnergyLevel= null;
mwle_fnShapeBase_getEnergyPercent= null;
mwle_fnShapeBase_setDamageLevel= null;
mwle_fnShapeBase_getDamageLevel= null;
mwle_fnShapeBase_getDamagePercent= null;
mwle_fnShapeBase_getMaxDamage= null;
mwle_fnShapeBase_setDamageState= null;
mwle_fnShapeBase_getDamageState= null;
mwle_fnShapeBase_isDestroyed= null;
mwle_fnShapeBase_isDisabled= null;
mwle_fnShapeBase_isEnabled= null;
mwle_fnShapeBase_applyDamage= null;
mwle_fnShapeBase_applyRepair= null;
mwle_fnShapeBase_setRepairRate= null;
mwle_fnShapeBase_getRepairRate= null;
mwle_fnShapeBase_setRechargeRate= null;
mwle_fnShapeBase_getRechargeRate= null;
mwle_fnShapeBase_getControllingClient= null;
mwle_fnShapeBase_getControllingObject= null;
mwle_fnShapeBase_canCloak= null;
mwle_fnShapeBase_setCloaked= null;
mwle_fnShapeBase_isCloaked= null;
mwle_fnShapeBase_setDamageFlash= null;
mwle_fnShapeBase_getDamageFlash= null;
mwle_fnShapeBase_setWhiteOut= null;
mwle_fnShapeBase_getWhiteOut= null;
mwle_fnShapeBase_getDefaultCameraFov= null;
mwle_fnShapeBase_getCameraFov= null;
mwle_fnShapeBase_setCameraFov= null;
mwle_fnShapeBase_setInvincibleMode= null;
mwle_fnShapeBase_startFade= null;
mwle_fnShapeBase_setDamageVector= null;
mwle_fnShapeBase_setShapeName= null;
mwle_fnShapeBase_getShapeName= null;
mwle_fnShapeBase_setSkinName= null;
mwle_fnShapeBase_getSkinName= null;
mwle_fnShapeBase_getVisibleDistance= null;
mwle_fnShapeBase_setVisibleDistance= null;
mwle_fnShapeBase_setAllMeshesHidden= null;
mwle_fnShapeBase_setMeshHidden= null;
mwle_fnShapeBase_dumpMeshVisibility= null;
mwle_fnShapeBase_getTargetName= null;
mwle_fnShapeBase_getTargetCount= null;
mwle_fnShapeBase_changeMaterial= null;
mwle_fnShapeBase_getModelFile= null;
mwle_fnStaticShape_setPoweredState= null;
mwle_fnStaticShape_getPoweredState= null;
mwle_fnTrigger_getNumObjects= null;
mwle_fnTrigger_getObject= null;
mwle_fnTSStatic_getTargetName= null;
mwle_fnTSStatic_getTargetCount= null;
mwle_fnTSStatic_changeMaterial= null;
mwle_fnTSStatic_getModelFile= null;
mwle_fnZone_getZoneId= null;
mwle_fnZone_dumpZoneState= null;
mwle_fnRenderMeshExample_postApply= null;
mwle_fn_calcExplosionCoverage= null;
mwle_fn_StartFoliageReplication= null;
mwle_fn_StartClientReplication= null;
mwle_fnLightning_warningFlashes= null;
mwle_fnLightning_strikeRandomPoint= null;
mwle_fnLightning_strikeObject= null;
mwle_fnParticleData_reload= null;
mwle_fnParticleEmitterData_reload= null;
mwle_fnParticleEmitterNode_setEmitterDataBlock= null;
mwle_fnParticleEmitterNode_setActive= null;
mwle_fnPrecipitation_setPercentage= null;
mwle_fnPrecipitation_modifyStorm= null;
mwle_fnPrecipitation_setTurbulence= null;
mwle_fnGameBase_getDataBlock= null;
mwle_fnGameBase_setDataBlock= null;
mwle_fnGameBase_applyImpulse= null;
mwle_fnGameBase_applyRadialImpulse= null;
mwle_fnGameConnection_setConnectArgs= null;
mwle_fnGameConnection_setJoinPassword= null;
mwle_fnGameConnection_transmitDataBlocks= null;
mwle_fnGameConnection_activateGhosting= null;
mwle_fnGameConnection_resetGhosting= null;
mwle_fnGameConnection_setControlObject= null;
mwle_fnGameConnection_getControlObject= null;
mwle_fnGameConnection_isAIControlled= null;
mwle_fnGameConnection_isControlObjectRotDampedCamera= null;
mwle_fnGameConnection_play2D= null;
mwle_fnGameConnection_play3D= null;
mwle_fnGameConnection_chaseCam= null;
mwle_fnGameConnection_getControlCameraDefaultFov= null;
mwle_fnGameConnection_setControlCameraFov= null;
mwle_fnGameConnection_getControlCameraFov= null;
mwle_fnGameConnection_getDamageFlash= null;
mwle_fnGameConnection_getWhiteOut= null;
mwle_fnGameConnection_setBlackOut= null;
mwle_fnGameConnection_setMissionCRC= null;
mwle_fnGameConnection_delete= null;
mwle_fnGameConnection_startRecording= null;
mwle_fnGameConnection_stopRecording= null;
mwle_fnGameConnection_playDemo= null;
mwle_fnGameConnection_isDemoPlaying= null;
mwle_fnGameConnection_isDemoRecording= null;
mwle_fnGameConnection_listClassIDs= null;
mwle_fnGameConnection_setCameraObject= null;
mwle_fnGameConnection_getCameraObject= null;
mwle_fnGameConnection_clearCameraObject= null;
mwle_fnGameConnection_isFirstPerson= null;
mwle_fnGameConnection_setFirstPerson= null;
mwle_fn__dumpProcessList= null;
mwle_fnPhysicsDebrisData_preload= null;
mwle_fnPhysicsForce_attach= null;
mwle_fnPhysicsForce_detach= null;
mwle_fnPhysicsForce_isAttached= null;
mwle_fn__physicsStartSimulation= null;
mwle_fn__physicsStopSimulation= null;
mwle_fn__physicsSimulationEnabled= null;
mwle_fn__physicsGetTimeScale= null;
mwle_fn__physicsStoreState= null;
mwle_fnPhysicsShape_isDestroyed= null;
mwle_fnPhysicsShape_destroy= null;
mwle_fnPhysicsShape_restore= null;
mwle_fnAITurretShape_addToIgnoreList= null;
mwle_fnAITurretShape_removeFromIgnoreList= null;
mwle_fnAITurretShape_setTurretState= null;
mwle_fnAITurretShape_activateTurret= null;
mwle_fnAITurretShape_deactivateTurret= null;
mwle_fnAITurretShape_startScanForTargets= null;
mwle_fnAITurretShape_stopScanForTargets= null;
mwle_fnAITurretShape_startTrackingTarget= null;
mwle_fnAITurretShape_stopTrackingTarget= null;
mwle_fnAITurretShape_hasTarget= null;
mwle_fnAITurretShape_getTarget= null;
mwle_fnAITurretShape_resetTarget= null;
mwle_fnAITurretShape_setWeaponLeadVelocity= null;
mwle_fnAITurretShape_getWeaponLeadVelocity= null;
mwle_fnAITurretShape_setAllGunsFiring= null;
mwle_fnAITurretShape_setGunSlotFiring= null;
mwle_fnAITurretShape_recenterTurret= null;
mwle_fnTurretShape_getAllowManualRotation= null;
mwle_fnTurretShape_setAllowManualRotation= null;
mwle_fnTurretShape_getAllowManualFire= null;
mwle_fnTurretShape_setAllowManualFire= null;
mwle_fnTurretShape_getState= null;
mwle_fnTurretShape_getTurretEulerRotation= null;
mwle_fnTurretShape_setTurretEulerRotation= null;
mwle_fnTurretShape_doRespawn= null;
mwle_fnFlyingVehicle_useCreateHeight= null;
mwle_fnWheeledVehicle_setWheelSteering= null;
mwle_fnWheeledVehicle_setWheelPowered= null;
mwle_fnWheeledVehicle_setWheelTire= null;
mwle_fnWheeledVehicle_setWheelSpring= null;
mwle_fnWheeledVehicle_getWheelCount= null;
mwle_fnTerrainBlock_save= null;
mwle_fn__enableSamples= null;
mwle_fnSettings_findFirstValue= null;
mwle_fnSettings_findNextValue= null;
mwle_fnSettings_setValue= null;
mwle_fnSettings_setDefaultValue= null;
mwle_fnSettings_value= null;
mwle_fnSettings_remove= null;
mwle_fnSettings_write= null;
mwle_fnSettings_read= null;
mwle_fnSettings_beginGroup= null;
mwle_fnSettings_endGroup= null;
mwle_fnSettings_clearGroups= null;
mwle_fnSettings_getCurrentGroups= null;
mwle_fnCompoundUndoAction_addAction= null;
mwle_fnUndoManager_clearAll= null;
mwle_fnUndoManager_getUndoCount= null;
mwle_fnUndoManager_getUndoName= null;
mwle_fnUndoManager_getUndoAction= null;
mwle_fnUndoManager_getRedoCount= null;
mwle_fnUndoManager_getRedoName= null;
mwle_fnUndoManager_getRedoAction= null;
mwle_fnUndoAction_addToManager= null;
mwle_fnUndoAction_undo= null;
mwle_fnUndoAction_redo= null;
mwle_fnUndoManager_undo= null;
mwle_fnUndoManager_redo= null;
mwle_fnUndoManager_getNextUndoName= null;
mwle_fnUndoManager_getNextRedoName= null;
mwle_fnUndoManager_pushCompound= null;
mwle_fnUndoManager_popCompound= null;
mwle_fnEventManager_registerEvent= null;
mwle_fnEventManager_unregisterEvent= null;
mwle_fnEventManager_isRegisteredEvent= null;
mwle_fnEventManager_postEvent= null;
mwle_fnEventManager_subscribe= null;
mwle_fnEventManager_remove= null;
mwle_fnEventManager_removeAll= null;
mwle_fnEventManager_dumpEvents= null;
mwle_fnEventManager_dumpSubscribers= null;
mwle_fnMessage_getType= null;
mwle_fnMessage_addReference= null;
mwle_fnMessage_freeReference= null;
mwle_fn__dnEval_Direct_New= null;
mwle_fn_dnEval= null;
mwle_fnNetConnection_GetGhostIndex= null;
mwle_fnNetConnection_ResolveGhost= null;
} static private  void MapDynamicExterns(string dllname){
mwle_fn_addBadWord= (wle_fn_addBadWord)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_addBadWord"), typeof(wle_fn_addBadWord));
mwle_fn_filterString= (wle_fn_filterString)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_filterString"), typeof(wle_fn_filterString));
mwle_fn_containsBadWords= (wle_fn_containsBadWords)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_containsBadWords"), typeof(wle_fn_containsBadWords));
mwle_fn__strToPlayerName= (wle_fn__strToPlayerName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__strToPlayerName"), typeof(wle_fn__strToPlayerName));
mwle_fn__lockMouse= (wle_fn__lockMouse)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__lockMouse"), typeof(wle_fn__lockMouse));
mwle_fn__setNetPort= (wle_fn__setNetPort)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__setNetPort"), typeof(wle_fn__setNetPort));
mwle_fn__getVersionNumber= (wle_fn__getVersionNumber)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__getVersionNumber"), typeof(wle_fn__getVersionNumber));
mwle_fn__getVersionString= (wle_fn__getVersionString)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__getVersionString"), typeof(wle_fn__getVersionString));
mwle_fn__getEngineName= (wle_fn__getEngineName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__getEngineName"), typeof(wle_fn__getEngineName));
mwle_fn__getBuildString= (wle_fn__getBuildString)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__getBuildString"), typeof(wle_fn__getBuildString));
mwle_fnHTTPObject_get= (wle_fnHTTPObject_get)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnHTTPObject_get"), typeof(wle_fnHTTPObject_get));
mwle_fnHTTPObject_post= (wle_fnHTTPObject_post)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnHTTPObject_post"), typeof(wle_fnHTTPObject_post));
mwle_fn__removeTaggedString= (wle_fn__removeTaggedString)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__removeTaggedString"), typeof(wle_fn__removeTaggedString));
mwle_fn__addTaggedString= (wle_fn__addTaggedString)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__addTaggedString"), typeof(wle_fn__addTaggedString));
mwle_fn__buildTaggedString= (wle_fn__buildTaggedString)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__buildTaggedString"), typeof(wle_fn__buildTaggedString));
mwle_fn__queryAllServers= (wle_fn__queryAllServers)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__queryAllServers"), typeof(wle_fn__queryAllServers));
mwle_fn__queryLanServers= (wle_fn__queryLanServers)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__queryLanServers"), typeof(wle_fn__queryLanServers));
mwle_fn__queryMasterServer= (wle_fn__queryMasterServer)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__queryMasterServer"), typeof(wle_fn__queryMasterServer));
mwle_fn__querySingleServer= (wle_fn__querySingleServer)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__querySingleServer"), typeof(wle_fn__querySingleServer));
mwle_fn__setServerInfo= (wle_fn__setServerInfo)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__setServerInfo"), typeof(wle_fn__setServerInfo));
mwle_fnTCPObject_send= (wle_fnTCPObject_send)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnTCPObject_send"), typeof(wle_fnTCPObject_send));
mwle_fnTCPObject_listen= (wle_fnTCPObject_listen)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnTCPObject_listen"), typeof(wle_fnTCPObject_listen));
mwle_fnTCPObject_connect= (wle_fnTCPObject_connect)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnTCPObject_connect"), typeof(wle_fnTCPObject_connect));
mwle_fnTCPObject_disconnect= (wle_fnTCPObject_disconnect)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnTCPObject_disconnect"), typeof(wle_fnTCPObject_disconnect));
mwle_fn__testJavaScriptBridge= (wle_fn__testJavaScriptBridge)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__testJavaScriptBridge"), typeof(wle_fn__testJavaScriptBridge));
mwle_fn__TestFunction2Args= (wle_fn__TestFunction2Args)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__TestFunction2Args"), typeof(wle_fn__TestFunction2Args));
mwle_fnDynamicConsoleMethodComponent_callMethod= (wle_fnDynamicConsoleMethodComponent_callMethod)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnDynamicConsoleMethodComponent_callMethod"), typeof(wle_fnDynamicConsoleMethodComponent_callMethod));
mwle_fnSimComponent_addComponents= (wle_fnSimComponent_addComponents)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimComponent_addComponents"), typeof(wle_fnSimComponent_addComponents));
mwle_fnSimComponent_removeComponents= (wle_fnSimComponent_removeComponents)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimComponent_removeComponents"), typeof(wle_fnSimComponent_removeComponents));
mwle_fnSimComponent_getComponentCount= (wle_fnSimComponent_getComponentCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimComponent_getComponentCount"), typeof(wle_fnSimComponent_getComponentCount));
mwle_fnSimComponent_getComponent= (wle_fnSimComponent_getComponent)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimComponent_getComponent"), typeof(wle_fnSimComponent_getComponent));
mwle_fnSimComponent_setEnabled= (wle_fnSimComponent_setEnabled)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimComponent_setEnabled"), typeof(wle_fnSimComponent_setEnabled));
mwle_fnSimComponent_isEnabled= (wle_fnSimComponent_isEnabled)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimComponent_isEnabled"), typeof(wle_fnSimComponent_isEnabled));
mwle_fnSimComponent_setIsTemplate= (wle_fnSimComponent_setIsTemplate)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimComponent_setIsTemplate"), typeof(wle_fnSimComponent_setIsTemplate));
mwle_fnSimComponent_getIsTemplate= (wle_fnSimComponent_getIsTemplate)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimComponent_getIsTemplate"), typeof(wle_fnSimComponent_getIsTemplate));
mwle_fnArrayObject_getIndexFromValue= (wle_fnArrayObject_getIndexFromValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_getIndexFromValue"), typeof(wle_fnArrayObject_getIndexFromValue));
mwle_fnArrayObject_getIndexFromKey= (wle_fnArrayObject_getIndexFromKey)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_getIndexFromKey"), typeof(wle_fnArrayObject_getIndexFromKey));
mwle_fnArrayObject_getValue= (wle_fnArrayObject_getValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_getValue"), typeof(wle_fnArrayObject_getValue));
mwle_fnArrayObject_getKey= (wle_fnArrayObject_getKey)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_getKey"), typeof(wle_fnArrayObject_getKey));
mwle_fnArrayObject_setKey= (wle_fnArrayObject_setKey)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_setKey"), typeof(wle_fnArrayObject_setKey));
mwle_fnArrayObject_setValue= (wle_fnArrayObject_setValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_setValue"), typeof(wle_fnArrayObject_setValue));
mwle_fnArrayObject_count= (wle_fnArrayObject_count)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_count"), typeof(wle_fnArrayObject_count));
mwle_fnArrayObject_countValue= (wle_fnArrayObject_countValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_countValue"), typeof(wle_fnArrayObject_countValue));
mwle_fnArrayObject_countKey= (wle_fnArrayObject_countKey)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_countKey"), typeof(wle_fnArrayObject_countKey));
mwle_fnArrayObject_add= (wle_fnArrayObject_add)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_add"), typeof(wle_fnArrayObject_add));
mwle_fnArrayObject_push_back= (wle_fnArrayObject_push_back)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_push_back"), typeof(wle_fnArrayObject_push_back));
mwle_fnArrayObject_push_front= (wle_fnArrayObject_push_front)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_push_front"), typeof(wle_fnArrayObject_push_front));
mwle_fnArrayObject_insert= (wle_fnArrayObject_insert)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_insert"), typeof(wle_fnArrayObject_insert));
mwle_fnArrayObject_pop_back= (wle_fnArrayObject_pop_back)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_pop_back"), typeof(wle_fnArrayObject_pop_back));
mwle_fnArrayObject_pop_front= (wle_fnArrayObject_pop_front)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_pop_front"), typeof(wle_fnArrayObject_pop_front));
mwle_fnArrayObject_erase= (wle_fnArrayObject_erase)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_erase"), typeof(wle_fnArrayObject_erase));
mwle_fnArrayObject_empty= (wle_fnArrayObject_empty)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_empty"), typeof(wle_fnArrayObject_empty));
mwle_fnArrayObject_uniqueValue= (wle_fnArrayObject_uniqueValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_uniqueValue"), typeof(wle_fnArrayObject_uniqueValue));
mwle_fnArrayObject_uniqueKey= (wle_fnArrayObject_uniqueKey)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_uniqueKey"), typeof(wle_fnArrayObject_uniqueKey));
mwle_fnArrayObject_duplicate= (wle_fnArrayObject_duplicate)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_duplicate"), typeof(wle_fnArrayObject_duplicate));
mwle_fnArrayObject_crop= (wle_fnArrayObject_crop)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_crop"), typeof(wle_fnArrayObject_crop));
mwle_fnArrayObject_append= (wle_fnArrayObject_append)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_append"), typeof(wle_fnArrayObject_append));
mwle_fnArrayObject_sort= (wle_fnArrayObject_sort)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_sort"), typeof(wle_fnArrayObject_sort));
mwle_fnArrayObject_sorta= (wle_fnArrayObject_sorta)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_sorta"), typeof(wle_fnArrayObject_sorta));
mwle_fnArrayObject_sortd= (wle_fnArrayObject_sortd)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_sortd"), typeof(wle_fnArrayObject_sortd));
mwle_fnArrayObject_sortk= (wle_fnArrayObject_sortk)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_sortk"), typeof(wle_fnArrayObject_sortk));
mwle_fnArrayObject_sortka= (wle_fnArrayObject_sortka)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_sortka"), typeof(wle_fnArrayObject_sortka));
mwle_fnArrayObject_sortkd= (wle_fnArrayObject_sortkd)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_sortkd"), typeof(wle_fnArrayObject_sortkd));
mwle_fnArrayObject_sortn= (wle_fnArrayObject_sortn)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_sortn"), typeof(wle_fnArrayObject_sortn));
mwle_fnArrayObject_sortna= (wle_fnArrayObject_sortna)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_sortna"), typeof(wle_fnArrayObject_sortna));
mwle_fnArrayObject_sortnd= (wle_fnArrayObject_sortnd)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_sortnd"), typeof(wle_fnArrayObject_sortnd));
mwle_fnArrayObject_sortnk= (wle_fnArrayObject_sortnk)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_sortnk"), typeof(wle_fnArrayObject_sortnk));
mwle_fnArrayObject_sortnka= (wle_fnArrayObject_sortnka)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_sortnka"), typeof(wle_fnArrayObject_sortnka));
mwle_fnArrayObject_sortnkd= (wle_fnArrayObject_sortnkd)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_sortnkd"), typeof(wle_fnArrayObject_sortnkd));
mwle_fnArrayObject_sortf= (wle_fnArrayObject_sortf)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_sortf"), typeof(wle_fnArrayObject_sortf));
mwle_fnArrayObject_sortfk= (wle_fnArrayObject_sortfk)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_sortfk"), typeof(wle_fnArrayObject_sortfk));
mwle_fnArrayObject_sortfd= (wle_fnArrayObject_sortfd)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_sortfd"), typeof(wle_fnArrayObject_sortfd));
mwle_fnArrayObject_sortfkd= (wle_fnArrayObject_sortfkd)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_sortfkd"), typeof(wle_fnArrayObject_sortfkd));
mwle_fnArrayObject_moveFirst= (wle_fnArrayObject_moveFirst)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_moveFirst"), typeof(wle_fnArrayObject_moveFirst));
mwle_fnArrayObject_moveLast= (wle_fnArrayObject_moveLast)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_moveLast"), typeof(wle_fnArrayObject_moveLast));
mwle_fnArrayObject_moveNext= (wle_fnArrayObject_moveNext)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_moveNext"), typeof(wle_fnArrayObject_moveNext));
mwle_fnArrayObject_movePrev= (wle_fnArrayObject_movePrev)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_movePrev"), typeof(wle_fnArrayObject_movePrev));
mwle_fnArrayObject_getCurrent= (wle_fnArrayObject_getCurrent)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_getCurrent"), typeof(wle_fnArrayObject_getCurrent));
mwle_fnArrayObject_setCurrent= (wle_fnArrayObject_setCurrent)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_setCurrent"), typeof(wle_fnArrayObject_setCurrent));
mwle_fnArrayObject_echo= (wle_fnArrayObject_echo)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnArrayObject_echo"), typeof(wle_fnArrayObject_echo));
mwle_fn_log= (wle_fn_log)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_log"), typeof(wle_fn_log));
mwle_fn_logError= (wle_fn_logError)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_logError"), typeof(wle_fn_logError));
mwle_fn_logWarning= (wle_fn_logWarning)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_logWarning"), typeof(wle_fn_logWarning));
mwle_fn_dumpConsoleClasses= (wle_fn_dumpConsoleClasses)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_dumpConsoleClasses"), typeof(wle_fn_dumpConsoleClasses));
mwle_fn_dumpConsoleFunctions= (wle_fn_dumpConsoleFunctions)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_dumpConsoleFunctions"), typeof(wle_fn_dumpConsoleFunctions));
mwle_fn__nextToken= (wle_fn__nextToken)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__nextToken"), typeof(wle_fn__nextToken));
mwle_fn__getTag= (wle_fn__getTag)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__getTag"), typeof(wle_fn__getTag));
mwle_fn__echo= (wle_fn__echo)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__echo"), typeof(wle_fn__echo));
mwle_fn__warn= (wle_fn__warn)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__warn"), typeof(wle_fn__warn));
mwle_fn__error= (wle_fn__error)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__error"), typeof(wle_fn__error));
mwle_fn__realQuit= (wle_fn__realQuit)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__realQuit"), typeof(wle_fn__realQuit));
mwle_fn__call= (wle_fn__call)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__call"), typeof(wle_fn__call));
mwle_fn__eval= (wle_fn__eval)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__eval"), typeof(wle_fn__eval));
mwle_fn__getVariable= (wle_fn__getVariable)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__getVariable"), typeof(wle_fn__getVariable));
mwle_fn__setVariable= (wle_fn__setVariable)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__setVariable"), typeof(wle_fn__setVariable));
mwle_fn__isFunction= (wle_fn__isFunction)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__isFunction"), typeof(wle_fn__isFunction));
mwle_fn__isMethod= (wle_fn__isMethod)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__isMethod"), typeof(wle_fn__isMethod));
mwle_fn__getMethodPackage= (wle_fn__getMethodPackage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__getMethodPackage"), typeof(wle_fn__getMethodPackage));
mwle_fn__isDefined= (wle_fn__isDefined)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__isDefined"), typeof(wle_fn__isDefined));
mwle_fn__getModNameFromPath= (wle_fn__getModNameFromPath)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__getModNameFromPath"), typeof(wle_fn__getModNameFromPath));
mwle_fn__getPrefsPath= (wle_fn__getPrefsPath)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__getPrefsPath"), typeof(wle_fn__getPrefsPath));
mwle_fn__execPrefs= (wle_fn__execPrefs)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__execPrefs"), typeof(wle_fn__execPrefs));
mwle_fn_strasc= (wle_fn_strasc)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_strasc"), typeof(wle_fn_strasc));
mwle_fn_strformat= (wle_fn_strformat)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_strformat"), typeof(wle_fn_strformat));
mwle_fn_strcmp= (wle_fn_strcmp)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_strcmp"), typeof(wle_fn_strcmp));
mwle_fn_stricmp= (wle_fn_stricmp)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_stricmp"), typeof(wle_fn_stricmp));
mwle_fn_strnatcmp= (wle_fn_strnatcmp)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_strnatcmp"), typeof(wle_fn_strnatcmp));
mwle_fn_strinatcmp= (wle_fn_strinatcmp)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_strinatcmp"), typeof(wle_fn_strinatcmp));
mwle_fn_strlen= (wle_fn_strlen)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_strlen"), typeof(wle_fn_strlen));
mwle_fn_strstr= (wle_fn_strstr)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_strstr"), typeof(wle_fn_strstr));
mwle_fn_strpos= (wle_fn_strpos)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_strpos"), typeof(wle_fn_strpos));
mwle_fn_ltrim= (wle_fn_ltrim)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_ltrim"), typeof(wle_fn_ltrim));
mwle_fn_rtrim= (wle_fn_rtrim)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_rtrim"), typeof(wle_fn_rtrim));
mwle_fn_trim= (wle_fn_trim)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_trim"), typeof(wle_fn_trim));
mwle_fn_stripChars= (wle_fn_stripChars)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_stripChars"), typeof(wle_fn_stripChars));
mwle_fn_strlwr= (wle_fn_strlwr)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_strlwr"), typeof(wle_fn_strlwr));
mwle_fn_strupr= (wle_fn_strupr)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_strupr"), typeof(wle_fn_strupr));
mwle_fn_strchr= (wle_fn_strchr)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_strchr"), typeof(wle_fn_strchr));
mwle_fn_strrchr= (wle_fn_strrchr)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_strrchr"), typeof(wle_fn_strrchr));
mwle_fn_strreplace= (wle_fn_strreplace)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_strreplace"), typeof(wle_fn_strreplace));
mwle_fn_strrepeat= (wle_fn_strrepeat)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_strrepeat"), typeof(wle_fn_strrepeat));
mwle_fn_getSubStr= (wle_fn_getSubStr)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getSubStr"), typeof(wle_fn_getSubStr));
mwle_fn_strIsMatchExpr= (wle_fn_strIsMatchExpr)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_strIsMatchExpr"), typeof(wle_fn_strIsMatchExpr));
mwle_fn_strIsMatchMultipleExpr= (wle_fn_strIsMatchMultipleExpr)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_strIsMatchMultipleExpr"), typeof(wle_fn_strIsMatchMultipleExpr));
mwle_fn_getTrailingNumber= (wle_fn_getTrailingNumber)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getTrailingNumber"), typeof(wle_fn_getTrailingNumber));
mwle_fn_stripTrailingNumber= (wle_fn_stripTrailingNumber)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_stripTrailingNumber"), typeof(wle_fn_stripTrailingNumber));
mwle_fn_isspace= (wle_fn_isspace)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_isspace"), typeof(wle_fn_isspace));
mwle_fn_isalnum= (wle_fn_isalnum)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_isalnum"), typeof(wle_fn_isalnum));
mwle_fn_startsWith= (wle_fn_startsWith)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_startsWith"), typeof(wle_fn_startsWith));
mwle_fn_endsWith= (wle_fn_endsWith)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_endsWith"), typeof(wle_fn_endsWith));
mwle_fn_strchrpos= (wle_fn_strchrpos)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_strchrpos"), typeof(wle_fn_strchrpos));
mwle_fn_strrchrpos= (wle_fn_strrchrpos)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_strrchrpos"), typeof(wle_fn_strrchrpos));
mwle_fn_getWord= (wle_fn_getWord)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getWord"), typeof(wle_fn_getWord));
mwle_fn_getWords= (wle_fn_getWords)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getWords"), typeof(wle_fn_getWords));
mwle_fn_setWord= (wle_fn_setWord)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_setWord"), typeof(wle_fn_setWord));
mwle_fn_removeWord= (wle_fn_removeWord)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_removeWord"), typeof(wle_fn_removeWord));
mwle_fn_getWordCount= (wle_fn_getWordCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getWordCount"), typeof(wle_fn_getWordCount));
mwle_fn_getField= (wle_fn_getField)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getField"), typeof(wle_fn_getField));
mwle_fn_getFields= (wle_fn_getFields)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getFields"), typeof(wle_fn_getFields));
mwle_fn_setField= (wle_fn_setField)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_setField"), typeof(wle_fn_setField));
mwle_fn_removeField= (wle_fn_removeField)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_removeField"), typeof(wle_fn_removeField));
mwle_fn_getFieldCount= (wle_fn_getFieldCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getFieldCount"), typeof(wle_fn_getFieldCount));
mwle_fn_getRecord= (wle_fn_getRecord)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getRecord"), typeof(wle_fn_getRecord));
mwle_fn_getRecords= (wle_fn_getRecords)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getRecords"), typeof(wle_fn_getRecords));
mwle_fn_setRecord= (wle_fn_setRecord)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_setRecord"), typeof(wle_fn_setRecord));
mwle_fn_removeRecord= (wle_fn_removeRecord)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_removeRecord"), typeof(wle_fn_removeRecord));
mwle_fn_getRecordCount= (wle_fn_getRecordCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getRecordCount"), typeof(wle_fn_getRecordCount));
mwle_fn_firstWord= (wle_fn_firstWord)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_firstWord"), typeof(wle_fn_firstWord));
mwle_fn_restWords= (wle_fn_restWords)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_restWords"), typeof(wle_fn_restWords));
mwle_fn_expandEscape= (wle_fn_expandEscape)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_expandEscape"), typeof(wle_fn_expandEscape));
mwle_fn_collapseEscape= (wle_fn_collapseEscape)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_collapseEscape"), typeof(wle_fn_collapseEscape));
mwle_fn_quit= (wle_fn_quit)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_quit"), typeof(wle_fn_quit));
mwle_fn_quitWithErrorMessage= (wle_fn_quitWithErrorMessage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_quitWithErrorMessage"), typeof(wle_fn_quitWithErrorMessage));
mwle_fn_export= (wle_fn_export)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_export"), typeof(wle_fn_export));
mwle_fn_trace= (wle_fn_trace)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_trace"), typeof(wle_fn_trace));
mwle_fn_debug= (wle_fn_debug)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_debug"), typeof(wle_fn_debug));
mwle_fn_detag= (wle_fn_detag)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_detag"), typeof(wle_fn_detag));
mwle_fn_debugv= (wle_fn_debugv)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_debugv"), typeof(wle_fn_debugv));
mwle_fn_setLogMode= (wle_fn_setLogMode)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_setLogMode"), typeof(wle_fn_setLogMode));
mwle_fn_gotoWebPage= (wle_fn_gotoWebPage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_gotoWebPage"), typeof(wle_fn_gotoWebPage));
mwle_fn_displaySplashWindow= (wle_fn_displaySplashWindow)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_displaySplashWindow"), typeof(wle_fn_displaySplashWindow));
mwle_fn_getWebDeployment= (wle_fn_getWebDeployment)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getWebDeployment"), typeof(wle_fn_getWebDeployment));
mwle_fn_countBits= (wle_fn_countBits)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_countBits"), typeof(wle_fn_countBits));
mwle_fn_compile= (wle_fn_compile)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_compile"), typeof(wle_fn_compile));
mwle_fn_exec= (wle_fn_exec)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_exec"), typeof(wle_fn_exec));
mwle_fn_deleteVariables= (wle_fn_deleteVariables)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_deleteVariables"), typeof(wle_fn_deleteVariables));
mwle_fn_isShippingBuild= (wle_fn_isShippingBuild)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_isShippingBuild"), typeof(wle_fn_isShippingBuild));
mwle_fn_isDebugBuild= (wle_fn_isDebugBuild)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_isDebugBuild"), typeof(wle_fn_isDebugBuild));
mwle_fn_isToolBuild= (wle_fn_isToolBuild)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_isToolBuild"), typeof(wle_fn_isToolBuild));
mwle_fn_backtrace= (wle_fn_backtrace)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_backtrace"), typeof(wle_fn_backtrace));
mwle_fn_isPackage= (wle_fn_isPackage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_isPackage"), typeof(wle_fn_isPackage));
mwle_fn_activatePackage= (wle_fn_activatePackage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_activatePackage"), typeof(wle_fn_activatePackage));
mwle_fn_deactivatePackage= (wle_fn_deactivatePackage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_deactivatePackage"), typeof(wle_fn_deactivatePackage));
mwle_fn_getPackageList= (wle_fn_getPackageList)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getPackageList"), typeof(wle_fn_getPackageList));
mwle_fnConsoleLogger_attach= (wle_fnConsoleLogger_attach)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnConsoleLogger_attach"), typeof(wle_fnConsoleLogger_attach));
mwle_fnConsoleLogger_detach= (wle_fnConsoleLogger_detach)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnConsoleLogger_detach"), typeof(wle_fnConsoleLogger_detach));
mwle_fn_isClass= (wle_fn_isClass)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_isClass"), typeof(wle_fn_isClass));
mwle_fn_isMemberOfClass= (wle_fn_isMemberOfClass)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_isMemberOfClass"), typeof(wle_fn_isMemberOfClass));
mwle_fn_getDescriptionOfClass= (wle_fn_getDescriptionOfClass)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getDescriptionOfClass"), typeof(wle_fn_getDescriptionOfClass));
mwle_fn_getCategoryOfClass= (wle_fn_getCategoryOfClass)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getCategoryOfClass"), typeof(wle_fn_getCategoryOfClass));
mwle_fn_dumpNetStats= (wle_fn_dumpNetStats)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_dumpNetStats"), typeof(wle_fn_dumpNetStats));
mwle_fnFieldBrushObject_queryGroups= (wle_fnFieldBrushObject_queryGroups)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnFieldBrushObject_queryGroups"), typeof(wle_fnFieldBrushObject_queryGroups));
mwle_fnFieldBrushObject_queryFields= (wle_fnFieldBrushObject_queryFields)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnFieldBrushObject_queryFields"), typeof(wle_fnFieldBrushObject_queryFields));
mwle_fnFieldBrushObject_copyFields= (wle_fnFieldBrushObject_copyFields)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnFieldBrushObject_copyFields"), typeof(wle_fnFieldBrushObject_copyFields));
mwle_fnFieldBrushObject_pasteFields= (wle_fnFieldBrushObject_pasteFields)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnFieldBrushObject_pasteFields"), typeof(wle_fnFieldBrushObject_pasteFields));
mwle_fn_findFirstFile= (wle_fn_findFirstFile)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_findFirstFile"), typeof(wle_fn_findFirstFile));
mwle_fn_findNextFile= (wle_fn_findNextFile)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_findNextFile"), typeof(wle_fn_findNextFile));
mwle_fn_getFileCount= (wle_fn_getFileCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getFileCount"), typeof(wle_fn_getFileCount));
mwle_fn_findFirstFileMultiExpr= (wle_fn_findFirstFileMultiExpr)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_findFirstFileMultiExpr"), typeof(wle_fn_findFirstFileMultiExpr));
mwle_fn_findNextFileMultiExpr= (wle_fn_findNextFileMultiExpr)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_findNextFileMultiExpr"), typeof(wle_fn_findNextFileMultiExpr));
mwle_fn_getFileCountMultiExpr= (wle_fn_getFileCountMultiExpr)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getFileCountMultiExpr"), typeof(wle_fn_getFileCountMultiExpr));
mwle_fn_getFileCRC= (wle_fn_getFileCRC)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getFileCRC"), typeof(wle_fn_getFileCRC));
mwle_fn_isFile= (wle_fn_isFile)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_isFile"), typeof(wle_fn_isFile));
mwle_fn_IsDirectory= (wle_fn_IsDirectory)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_IsDirectory"), typeof(wle_fn_IsDirectory));
mwle_fn_isWriteableFileName= (wle_fn_isWriteableFileName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_isWriteableFileName"), typeof(wle_fn_isWriteableFileName));
mwle_fn_startFileChangeNotifications= (wle_fn_startFileChangeNotifications)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_startFileChangeNotifications"), typeof(wle_fn_startFileChangeNotifications));
mwle_fn_stopFileChangeNotifications= (wle_fn_stopFileChangeNotifications)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_stopFileChangeNotifications"), typeof(wle_fn_stopFileChangeNotifications));
mwle_fn_getDirectoryList= (wle_fn_getDirectoryList)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getDirectoryList"), typeof(wle_fn_getDirectoryList));
mwle_fn_fileSize= (wle_fn_fileSize)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_fileSize"), typeof(wle_fn_fileSize));
mwle_fn_fileModifiedTime= (wle_fn_fileModifiedTime)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_fileModifiedTime"), typeof(wle_fn_fileModifiedTime));
mwle_fn_fileCreatedTime= (wle_fn_fileCreatedTime)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_fileCreatedTime"), typeof(wle_fn_fileCreatedTime));
mwle_fn_fileDelete= (wle_fn_fileDelete)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_fileDelete"), typeof(wle_fn_fileDelete));
mwle_fn_fileExt= (wle_fn_fileExt)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_fileExt"), typeof(wle_fn_fileExt));
mwle_fn_fileBase= (wle_fn_fileBase)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_fileBase"), typeof(wle_fn_fileBase));
mwle_fn_fileName= (wle_fn_fileName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_fileName"), typeof(wle_fn_fileName));
mwle_fn_filePath= (wle_fn_filePath)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_filePath"), typeof(wle_fn_filePath));
mwle_fn_getWorkingDirectory= (wle_fn_getWorkingDirectory)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getWorkingDirectory"), typeof(wle_fn_getWorkingDirectory));
mwle_fn_makeFullPath= (wle_fn_makeFullPath)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_makeFullPath"), typeof(wle_fn_makeFullPath));
mwle_fn_makeRelativePath= (wle_fn_makeRelativePath)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_makeRelativePath"), typeof(wle_fn_makeRelativePath));
mwle_fn_pathConcat= (wle_fn_pathConcat)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_pathConcat"), typeof(wle_fn_pathConcat));
mwle_fn_getExecutableName= (wle_fn_getExecutableName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getExecutableName"), typeof(wle_fn_getExecutableName));
mwle_fn_getMainDotCsDir= (wle_fn_getMainDotCsDir)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getMainDotCsDir"), typeof(wle_fn_getMainDotCsDir));
mwle_fn_openFolder= (wle_fn_openFolder)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_openFolder"), typeof(wle_fn_openFolder));
mwle_fn_openFile= (wle_fn_openFile)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_openFile"), typeof(wle_fn_openFile));
mwle_fn_pathCopy= (wle_fn_pathCopy)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_pathCopy"), typeof(wle_fn_pathCopy));
mwle_fn_getCurrentDirectory= (wle_fn_getCurrentDirectory)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getCurrentDirectory"), typeof(wle_fn_getCurrentDirectory));
mwle_fn_setCurrentDirectory= (wle_fn_setCurrentDirectory)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_setCurrentDirectory"), typeof(wle_fn_setCurrentDirectory));
mwle_fn_createPath= (wle_fn_createPath)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_createPath"), typeof(wle_fn_createPath));
mwle_fnPersistenceManager_deleteObjectsFromFile= (wle_fnPersistenceManager_deleteObjectsFromFile)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPersistenceManager_deleteObjectsFromFile"), typeof(wle_fnPersistenceManager_deleteObjectsFromFile));
mwle_fnPersistenceManager_setDirty= (wle_fnPersistenceManager_setDirty)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPersistenceManager_setDirty"), typeof(wle_fnPersistenceManager_setDirty));
mwle_fnPersistenceManager_removeDirty= (wle_fnPersistenceManager_removeDirty)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPersistenceManager_removeDirty"), typeof(wle_fnPersistenceManager_removeDirty));
mwle_fnPersistenceManager_isDirty= (wle_fnPersistenceManager_isDirty)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPersistenceManager_isDirty"), typeof(wle_fnPersistenceManager_isDirty));
mwle_fnPersistenceManager_hasDirty= (wle_fnPersistenceManager_hasDirty)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPersistenceManager_hasDirty"), typeof(wle_fnPersistenceManager_hasDirty));
mwle_fnPersistenceManager_getDirtyObjectCount= (wle_fnPersistenceManager_getDirtyObjectCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPersistenceManager_getDirtyObjectCount"), typeof(wle_fnPersistenceManager_getDirtyObjectCount));
mwle_fnPersistenceManager_getDirtyObject= (wle_fnPersistenceManager_getDirtyObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPersistenceManager_getDirtyObject"), typeof(wle_fnPersistenceManager_getDirtyObject));
mwle_fnPersistenceManager_listDirty= (wle_fnPersistenceManager_listDirty)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPersistenceManager_listDirty"), typeof(wle_fnPersistenceManager_listDirty));
mwle_fnPersistenceManager_saveDirty= (wle_fnPersistenceManager_saveDirty)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPersistenceManager_saveDirty"), typeof(wle_fnPersistenceManager_saveDirty));
mwle_fnPersistenceManager_saveDirtyObject= (wle_fnPersistenceManager_saveDirtyObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPersistenceManager_saveDirtyObject"), typeof(wle_fnPersistenceManager_saveDirtyObject));
mwle_fnPersistenceManager_clearAll= (wle_fnPersistenceManager_clearAll)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPersistenceManager_clearAll"), typeof(wle_fnPersistenceManager_clearAll));
mwle_fnPersistenceManager_removeObjectFromFile= (wle_fnPersistenceManager_removeObjectFromFile)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPersistenceManager_removeObjectFromFile"), typeof(wle_fnPersistenceManager_removeObjectFromFile));
mwle_fnPersistenceManager_removeField= (wle_fnPersistenceManager_removeField)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPersistenceManager_removeField"), typeof(wle_fnPersistenceManager_removeField));
mwle_fn__expandFilename= (wle_fn__expandFilename)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__expandFilename"), typeof(wle_fn__expandFilename));
mwle_fn__isObject= (wle_fn__isObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__isObject"), typeof(wle_fn__isObject));
mwle_fn__spawnObject= (wle_fn__spawnObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__spawnObject"), typeof(wle_fn__spawnObject));
mwle_fn__schedule= (wle_fn__schedule)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__schedule"), typeof(wle_fn__schedule));
mwle_fn__getUniqueName= (wle_fn__getUniqueName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__getUniqueName"), typeof(wle_fn__getUniqueName));
mwle_fn__getUniqueInternalName= (wle_fn__getUniqueInternalName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__getUniqueInternalName"), typeof(wle_fn__getUniqueInternalName));
mwle_fn__isValidObjectName= (wle_fn__isValidObjectName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__isValidObjectName"), typeof(wle_fn__isValidObjectName));
mwle_fn_SimDataBlock_reloadOnLocalClient= (wle_fn_SimDataBlock_reloadOnLocalClient)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimDataBlock_reloadOnLocalClient"), typeof(wle_fn_SimDataBlock_reloadOnLocalClient));
mwle_fn_preloadClientDataBlocks= (wle_fn_preloadClientDataBlocks)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_preloadClientDataBlocks"), typeof(wle_fn_preloadClientDataBlocks));
mwle_fn_deleteDataBlocks= (wle_fn_deleteDataBlocks)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_deleteDataBlocks"), typeof(wle_fn_deleteDataBlocks));
mwle_fnSimObject_call= (wle_fnSimObject_call)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_call"), typeof(wle_fnSimObject_call));
mwle_fnSimObject_schedule= (wle_fnSimObject_schedule)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_schedule"), typeof(wle_fnSimObject_schedule));
mwle_fn_SimObject_isMethod= (wle_fn_SimObject_isMethod)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_isMethod"), typeof(wle_fn_SimObject_isMethod));
mwle_fn_SimObject_getClassNamespace= (wle_fn_SimObject_getClassNamespace)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_getClassNamespace"), typeof(wle_fn_SimObject_getClassNamespace));
mwle_fn_SimObject_getSuperClassNamespace= (wle_fn_SimObject_getSuperClassNamespace)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_getSuperClassNamespace"), typeof(wle_fn_SimObject_getSuperClassNamespace));
mwle_fn_SimObject_setClassNamespace= (wle_fn_SimObject_setClassNamespace)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_setClassNamespace"), typeof(wle_fn_SimObject_setClassNamespace));
mwle_fn_SimObject_setSuperClassNamespace= (wle_fn_SimObject_setSuperClassNamespace)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_setSuperClassNamespace"), typeof(wle_fn_SimObject_setSuperClassNamespace));
mwle_fn_SimObject_isExpanded= (wle_fn_SimObject_isExpanded)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_isExpanded"), typeof(wle_fn_SimObject_isExpanded));
mwle_fn_SimObject_setIsExpanded= (wle_fn_SimObject_setIsExpanded)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_setIsExpanded"), typeof(wle_fn_SimObject_setIsExpanded));
mwle_fn_SimObject_getFilename= (wle_fn_SimObject_getFilename)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_getFilename"), typeof(wle_fn_SimObject_getFilename));
mwle_fn_SimObject_setFilename= (wle_fn_SimObject_setFilename)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_setFilename"), typeof(wle_fn_SimObject_setFilename));
mwle_fn_SimObject_getDeclarationLine= (wle_fn_SimObject_getDeclarationLine)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_getDeclarationLine"), typeof(wle_fn_SimObject_getDeclarationLine));
mwle_fn_SimObject_assignFieldsFrom= (wle_fn_SimObject_assignFieldsFrom)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_assignFieldsFrom"), typeof(wle_fn_SimObject_assignFieldsFrom));
mwle_fn_SimObject_getCanSave= (wle_fn_SimObject_getCanSave)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_getCanSave"), typeof(wle_fn_SimObject_getCanSave));
mwle_fn_SimObject_setCanSave= (wle_fn_SimObject_setCanSave)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_setCanSave"), typeof(wle_fn_SimObject_setCanSave));
mwle_fn_SimObject_dumpMethods= (wle_fn_SimObject_dumpMethods)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_dumpMethods"), typeof(wle_fn_SimObject_dumpMethods));
mwle_fn_SimObject_save= (wle_fn_SimObject_save)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_save"), typeof(wle_fn_SimObject_save));
mwle_fn_SimObject_getClassName= (wle_fn_SimObject_getClassName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_getClassName"), typeof(wle_fn_SimObject_getClassName));
mwle_fn_SimObject_isField= (wle_fn_SimObject_isField)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_isField"), typeof(wle_fn_SimObject_isField));
mwle_fn_SimObject_getFieldValue= (wle_fn_SimObject_getFieldValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_getFieldValue"), typeof(wle_fn_SimObject_getFieldValue));
mwle_fn_SimObject_setFieldValue= (wle_fn_SimObject_setFieldValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_setFieldValue"), typeof(wle_fn_SimObject_setFieldValue));
mwle_fn_SimObject_getFieldType= (wle_fn_SimObject_getFieldType)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_getFieldType"), typeof(wle_fn_SimObject_getFieldType));
mwle_fn_SimObject_setFieldType= (wle_fn_SimObject_setFieldType)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_setFieldType"), typeof(wle_fn_SimObject_setFieldType));
mwle_fn_SimObject_dumpClassHierarchy= (wle_fn_SimObject_dumpClassHierarchy)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_dumpClassHierarchy"), typeof(wle_fn_SimObject_dumpClassHierarchy));
mwle_fn_SimObject_isMemberOfClass= (wle_fn_SimObject_isMemberOfClass)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_isMemberOfClass"), typeof(wle_fn_SimObject_isMemberOfClass));
mwle_fn_SimObject_isInNamespaceHierarchy= (wle_fn_SimObject_isInNamespaceHierarchy)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_isInNamespaceHierarchy"), typeof(wle_fn_SimObject_isInNamespaceHierarchy));
mwle_fn_SimObject_delete= (wle_fn_SimObject_delete)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_delete"), typeof(wle_fn_SimObject_delete));
mwle_fn_SimObject_getDynamicFieldCount= (wle_fn_SimObject_getDynamicFieldCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_getDynamicFieldCount"), typeof(wle_fn_SimObject_getDynamicFieldCount));
mwle_fn_SimObject_getDynamicField= (wle_fn_SimObject_getDynamicField)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_getDynamicField"), typeof(wle_fn_SimObject_getDynamicField));
mwle_fn_SimObject_getFieldCount= (wle_fn_SimObject_getFieldCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_getFieldCount"), typeof(wle_fn_SimObject_getFieldCount));
mwle_fn_SimObject_getField= (wle_fn_SimObject_getField)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_SimObject_getField"), typeof(wle_fn_SimObject_getField));
mwle_fnSimObject_dumpGroupHierarchy= (wle_fnSimObject_dumpGroupHierarchy)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_dumpGroupHierarchy"), typeof(wle_fnSimObject_dumpGroupHierarchy));
mwle_fnSimObject_isChildOfGroup= (wle_fnSimObject_isChildOfGroup)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_isChildOfGroup"), typeof(wle_fnSimObject_isChildOfGroup));
mwle_fnSimObject_isSelected= (wle_fnSimObject_isSelected)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_isSelected"), typeof(wle_fnSimObject_isSelected));
mwle_fnSimObject_setIsSelected= (wle_fnSimObject_setIsSelected)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_setIsSelected"), typeof(wle_fnSimObject_setIsSelected));
mwle_fnSimObject_assignPersistentId= (wle_fnSimObject_assignPersistentId)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_assignPersistentId"), typeof(wle_fnSimObject_assignPersistentId));
mwle_fnSimObject_isEditorOnly= (wle_fnSimObject_isEditorOnly)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_isEditorOnly"), typeof(wle_fnSimObject_isEditorOnly));
mwle_fnSimObject_setEditorOnly= (wle_fnSimObject_setEditorOnly)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_setEditorOnly"), typeof(wle_fnSimObject_setEditorOnly));
mwle_fnSimObject_isNameChangeAllowed= (wle_fnSimObject_isNameChangeAllowed)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_isNameChangeAllowed"), typeof(wle_fnSimObject_isNameChangeAllowed));
mwle_fnSimObject_setNameChangeAllowed= (wle_fnSimObject_setNameChangeAllowed)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_setNameChangeAllowed"), typeof(wle_fnSimObject_setNameChangeAllowed));
mwle_fnSimObject_clone= (wle_fnSimObject_clone)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_clone"), typeof(wle_fnSimObject_clone));
mwle_fnSimObject_deepClone= (wle_fnSimObject_deepClone)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_deepClone"), typeof(wle_fnSimObject_deepClone));
mwle_fnSimObject_setLocked= (wle_fnSimObject_setLocked)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_setLocked"), typeof(wle_fnSimObject_setLocked));
mwle_fnSimObject_setHidden= (wle_fnSimObject_setHidden)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_setHidden"), typeof(wle_fnSimObject_setHidden));
mwle_fnSimObject_dump= (wle_fnSimObject_dump)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_dump"), typeof(wle_fnSimObject_dump));
mwle_fnSimObject_setName= (wle_fnSimObject_setName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_setName"), typeof(wle_fnSimObject_setName));
mwle_fnSimObject_getName= (wle_fnSimObject_getName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_getName"), typeof(wle_fnSimObject_getName));
mwle_fnSimObject_setInternalName= (wle_fnSimObject_setInternalName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_setInternalName"), typeof(wle_fnSimObject_setInternalName));
mwle_fnSimObject_getInternalName= (wle_fnSimObject_getInternalName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_getInternalName"), typeof(wle_fnSimObject_getInternalName));
mwle_fnSimObject_getId= (wle_fnSimObject_getId)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_getId"), typeof(wle_fnSimObject_getId));
mwle_fnSimObject_getGroup= (wle_fnSimObject_getGroup)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_getGroup"), typeof(wle_fnSimObject_getGroup));
mwle_fnSimObject_getDebugInfo= (wle_fnSimObject_getDebugInfo)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimObject_getDebugInfo"), typeof(wle_fnSimObject_getDebugInfo));
mwle_fnSimPersistSet_resolvePersistentIds= (wle_fnSimPersistSet_resolvePersistentIds)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimPersistSet_resolvePersistentIds"), typeof(wle_fnSimPersistSet_resolvePersistentIds));
mwle_fn_saveObject= (wle_fn_saveObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_saveObject"), typeof(wle_fn_saveObject));
mwle_fn_loadObject= (wle_fn_loadObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_loadObject"), typeof(wle_fn_loadObject));
mwle_fnSimSet_add= (wle_fnSimSet_add)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimSet_add"), typeof(wle_fnSimSet_add));
mwle_fnSimSet_remove= (wle_fnSimSet_remove)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimSet_remove"), typeof(wle_fnSimSet_remove));
mwle_fnSimSet_deleteAllObjects= (wle_fnSimSet_deleteAllObjects)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimSet_deleteAllObjects"), typeof(wle_fnSimSet_deleteAllObjects));
mwle_fnSimSet_callOnChildren= (wle_fnSimSet_callOnChildren)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimSet_callOnChildren"), typeof(wle_fnSimSet_callOnChildren));
mwle_fnSimSet_callOnChildrenNoRecurse= (wle_fnSimSet_callOnChildrenNoRecurse)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimSet_callOnChildrenNoRecurse"), typeof(wle_fnSimSet_callOnChildrenNoRecurse));
mwle_fnSimSet_getFullCount= (wle_fnSimSet_getFullCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimSet_getFullCount"), typeof(wle_fnSimSet_getFullCount));
mwle_fnSimSet_sort= (wle_fnSimSet_sort)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimSet_sort"), typeof(wle_fnSimSet_sort));
mwle_fnSimSet_listObjects= (wle_fnSimSet_listObjects)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimSet_listObjects"), typeof(wle_fnSimSet_listObjects));
mwle_fnSimSet_clear= (wle_fnSimSet_clear)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimSet_clear"), typeof(wle_fnSimSet_clear));
mwle_fnSimSet_getRandom= (wle_fnSimSet_getRandom)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimSet_getRandom"), typeof(wle_fnSimSet_getRandom));
mwle_fnSimSet_reorderChild= (wle_fnSimSet_reorderChild)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimSet_reorderChild"), typeof(wle_fnSimSet_reorderChild));
mwle_fnSimSet_getCount= (wle_fnSimSet_getCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimSet_getCount"), typeof(wle_fnSimSet_getCount));
mwle_fnSimSet_getObject= (wle_fnSimSet_getObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimSet_getObject"), typeof(wle_fnSimSet_getObject));
mwle_fnSimSet_getObjectIndex= (wle_fnSimSet_getObjectIndex)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimSet_getObjectIndex"), typeof(wle_fnSimSet_getObjectIndex));
mwle_fnSimSet_isMember= (wle_fnSimSet_isMember)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimSet_isMember"), typeof(wle_fnSimSet_isMember));
mwle_fnSimSet_findObjectByInternalName= (wle_fnSimSet_findObjectByInternalName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimSet_findObjectByInternalName"), typeof(wle_fnSimSet_findObjectByInternalName));
mwle_fnSimSet_bringToFront= (wle_fnSimSet_bringToFront)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimSet_bringToFront"), typeof(wle_fnSimSet_bringToFront));
mwle_fnSimSet_pushToBack= (wle_fnSimSet_pushToBack)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimSet_pushToBack"), typeof(wle_fnSimSet_pushToBack));
mwle_fnSimSet_acceptsAsChild= (wle_fnSimSet_acceptsAsChild)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimSet_acceptsAsChild"), typeof(wle_fnSimSet_acceptsAsChild));
mwle_fnSimXMLDocument_attributeF32= (wle_fnSimXMLDocument_attributeF32)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_attributeF32"), typeof(wle_fnSimXMLDocument_attributeF32));
mwle_fnSimXMLDocument_attributeS32= (wle_fnSimXMLDocument_attributeS32)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_attributeS32"), typeof(wle_fnSimXMLDocument_attributeS32));
mwle_fnSimXMLDocument_reset= (wle_fnSimXMLDocument_reset)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_reset"), typeof(wle_fnSimXMLDocument_reset));
mwle_fnSimXMLDocument_loadFile= (wle_fnSimXMLDocument_loadFile)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_loadFile"), typeof(wle_fnSimXMLDocument_loadFile));
mwle_fnSimXMLDocument_saveFile= (wle_fnSimXMLDocument_saveFile)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_saveFile"), typeof(wle_fnSimXMLDocument_saveFile));
mwle_fnSimXMLDocument_parse= (wle_fnSimXMLDocument_parse)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_parse"), typeof(wle_fnSimXMLDocument_parse));
mwle_fnSimXMLDocument_clear= (wle_fnSimXMLDocument_clear)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_clear"), typeof(wle_fnSimXMLDocument_clear));
mwle_fnSimXMLDocument_getErrorDesc= (wle_fnSimXMLDocument_getErrorDesc)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_getErrorDesc"), typeof(wle_fnSimXMLDocument_getErrorDesc));
mwle_fnSimXMLDocument_clearError= (wle_fnSimXMLDocument_clearError)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_clearError"), typeof(wle_fnSimXMLDocument_clearError));
mwle_fnSimXMLDocument_pushFirstChildElement= (wle_fnSimXMLDocument_pushFirstChildElement)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_pushFirstChildElement"), typeof(wle_fnSimXMLDocument_pushFirstChildElement));
mwle_fnSimXMLDocument_pushChildElement= (wle_fnSimXMLDocument_pushChildElement)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_pushChildElement"), typeof(wle_fnSimXMLDocument_pushChildElement));
mwle_fnSimXMLDocument_nextSiblingElement= (wle_fnSimXMLDocument_nextSiblingElement)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_nextSiblingElement"), typeof(wle_fnSimXMLDocument_nextSiblingElement));
mwle_fnSimXMLDocument_elementValue= (wle_fnSimXMLDocument_elementValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_elementValue"), typeof(wle_fnSimXMLDocument_elementValue));
mwle_fnSimXMLDocument_popElement= (wle_fnSimXMLDocument_popElement)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_popElement"), typeof(wle_fnSimXMLDocument_popElement));
mwle_fnSimXMLDocument_attribute= (wle_fnSimXMLDocument_attribute)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_attribute"), typeof(wle_fnSimXMLDocument_attribute));
mwle_fnSimXMLDocument_attributeExists= (wle_fnSimXMLDocument_attributeExists)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_attributeExists"), typeof(wle_fnSimXMLDocument_attributeExists));
mwle_fnSimXMLDocument_firstAttribute= (wle_fnSimXMLDocument_firstAttribute)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_firstAttribute"), typeof(wle_fnSimXMLDocument_firstAttribute));
mwle_fnSimXMLDocument_lastAttribute= (wle_fnSimXMLDocument_lastAttribute)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_lastAttribute"), typeof(wle_fnSimXMLDocument_lastAttribute));
mwle_fnSimXMLDocument_nextAttribute= (wle_fnSimXMLDocument_nextAttribute)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_nextAttribute"), typeof(wle_fnSimXMLDocument_nextAttribute));
mwle_fnSimXMLDocument_prevAttribute= (wle_fnSimXMLDocument_prevAttribute)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_prevAttribute"), typeof(wle_fnSimXMLDocument_prevAttribute));
mwle_fnSimXMLDocument_setAttribute= (wle_fnSimXMLDocument_setAttribute)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_setAttribute"), typeof(wle_fnSimXMLDocument_setAttribute));
mwle_fnSimXMLDocument_setObjectAttributes= (wle_fnSimXMLDocument_setObjectAttributes)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_setObjectAttributes"), typeof(wle_fnSimXMLDocument_setObjectAttributes));
mwle_fnSimXMLDocument_pushNewElement= (wle_fnSimXMLDocument_pushNewElement)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_pushNewElement"), typeof(wle_fnSimXMLDocument_pushNewElement));
mwle_fnSimXMLDocument_addNewElement= (wle_fnSimXMLDocument_addNewElement)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_addNewElement"), typeof(wle_fnSimXMLDocument_addNewElement));
mwle_fnSimXMLDocument_addHeader= (wle_fnSimXMLDocument_addHeader)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_addHeader"), typeof(wle_fnSimXMLDocument_addHeader));
mwle_fnSimXMLDocument_addComment= (wle_fnSimXMLDocument_addComment)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_addComment"), typeof(wle_fnSimXMLDocument_addComment));
mwle_fnSimXMLDocument_readComment= (wle_fnSimXMLDocument_readComment)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_readComment"), typeof(wle_fnSimXMLDocument_readComment));
mwle_fnSimXMLDocument_addText= (wle_fnSimXMLDocument_addText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_addText"), typeof(wle_fnSimXMLDocument_addText));
mwle_fnSimXMLDocument_getText= (wle_fnSimXMLDocument_getText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_getText"), typeof(wle_fnSimXMLDocument_getText));
mwle_fnSimXMLDocument_removeText= (wle_fnSimXMLDocument_removeText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_removeText"), typeof(wle_fnSimXMLDocument_removeText));
mwle_fnSimXMLDocument_addData= (wle_fnSimXMLDocument_addData)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_addData"), typeof(wle_fnSimXMLDocument_addData));
mwle_fnSimXMLDocument_getData= (wle_fnSimXMLDocument_getData)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimXMLDocument_getData"), typeof(wle_fnSimXMLDocument_getData));
mwle_fnFileObject_writeObject= (wle_fnFileObject_writeObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnFileObject_writeObject"), typeof(wle_fnFileObject_writeObject));
mwle_fnFileObject_openForRead= (wle_fnFileObject_openForRead)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnFileObject_openForRead"), typeof(wle_fnFileObject_openForRead));
mwle_fnFileObject_openForWrite= (wle_fnFileObject_openForWrite)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnFileObject_openForWrite"), typeof(wle_fnFileObject_openForWrite));
mwle_fnFileObject_openForAppend= (wle_fnFileObject_openForAppend)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnFileObject_openForAppend"), typeof(wle_fnFileObject_openForAppend));
mwle_fnFileObject_isEOF= (wle_fnFileObject_isEOF)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnFileObject_isEOF"), typeof(wle_fnFileObject_isEOF));
mwle_fnFileObject_readLine= (wle_fnFileObject_readLine)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnFileObject_readLine"), typeof(wle_fnFileObject_readLine));
mwle_fnFileObject_peekLine= (wle_fnFileObject_peekLine)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnFileObject_peekLine"), typeof(wle_fnFileObject_peekLine));
mwle_fnFileObject_writeLine= (wle_fnFileObject_writeLine)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnFileObject_writeLine"), typeof(wle_fnFileObject_writeLine));
mwle_fnFileObject_close= (wle_fnFileObject_close)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnFileObject_close"), typeof(wle_fnFileObject_close));
mwle_fn_reloadResource= (wle_fn_reloadResource)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_reloadResource"), typeof(wle_fn_reloadResource));
mwle_fnFileStreamObject_open= (wle_fnFileStreamObject_open)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnFileStreamObject_open"), typeof(wle_fnFileStreamObject_open));
mwle_fnFileStreamObject_close= (wle_fnFileStreamObject_close)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnFileStreamObject_close"), typeof(wle_fnFileStreamObject_close));
mwle_fnStreamObject_getStatus= (wle_fnStreamObject_getStatus)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnStreamObject_getStatus"), typeof(wle_fnStreamObject_getStatus));
mwle_fnStreamObject_isEOS= (wle_fnStreamObject_isEOS)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnStreamObject_isEOS"), typeof(wle_fnStreamObject_isEOS));
mwle_fnStreamObject_isEOF= (wle_fnStreamObject_isEOF)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnStreamObject_isEOF"), typeof(wle_fnStreamObject_isEOF));
mwle_fnStreamObject_getPosition= (wle_fnStreamObject_getPosition)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnStreamObject_getPosition"), typeof(wle_fnStreamObject_getPosition));
mwle_fnStreamObject_setPosition= (wle_fnStreamObject_setPosition)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnStreamObject_setPosition"), typeof(wle_fnStreamObject_setPosition));
mwle_fnStreamObject_getStreamSize= (wle_fnStreamObject_getStreamSize)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnStreamObject_getStreamSize"), typeof(wle_fnStreamObject_getStreamSize));
mwle_fnStreamObject_readLine= (wle_fnStreamObject_readLine)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnStreamObject_readLine"), typeof(wle_fnStreamObject_readLine));
mwle_fnStreamObject_writeLine= (wle_fnStreamObject_writeLine)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnStreamObject_writeLine"), typeof(wle_fnStreamObject_writeLine));
mwle_fnStreamObject_readSTString= (wle_fnStreamObject_readSTString)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnStreamObject_readSTString"), typeof(wle_fnStreamObject_readSTString));
mwle_fnStreamObject_readString= (wle_fnStreamObject_readString)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnStreamObject_readString"), typeof(wle_fnStreamObject_readString));
mwle_fnStreamObject_readLongString= (wle_fnStreamObject_readLongString)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnStreamObject_readLongString"), typeof(wle_fnStreamObject_readLongString));
mwle_fnStreamObject_writeLongString= (wle_fnStreamObject_writeLongString)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnStreamObject_writeLongString"), typeof(wle_fnStreamObject_writeLongString));
mwle_fnStreamObject_writeString= (wle_fnStreamObject_writeString)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnStreamObject_writeString"), typeof(wle_fnStreamObject_writeString));
mwle_fnStreamObject_copyFrom= (wle_fnStreamObject_copyFrom)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnStreamObject_copyFrom"), typeof(wle_fnStreamObject_copyFrom));
mwle_fnZipObject_openArchive= (wle_fnZipObject_openArchive)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnZipObject_openArchive"), typeof(wle_fnZipObject_openArchive));
mwle_fnZipObject_closeArchive= (wle_fnZipObject_closeArchive)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnZipObject_closeArchive"), typeof(wle_fnZipObject_closeArchive));
mwle_fnZipObject_openFileForRead= (wle_fnZipObject_openFileForRead)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnZipObject_openFileForRead"), typeof(wle_fnZipObject_openFileForRead));
mwle_fnZipObject_openFileForWrite= (wle_fnZipObject_openFileForWrite)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnZipObject_openFileForWrite"), typeof(wle_fnZipObject_openFileForWrite));
mwle_fnZipObject_closeFile= (wle_fnZipObject_closeFile)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnZipObject_closeFile"), typeof(wle_fnZipObject_closeFile));
mwle_fnZipObject_addFile= (wle_fnZipObject_addFile)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnZipObject_addFile"), typeof(wle_fnZipObject_addFile));
mwle_fnZipObject_extractFile= (wle_fnZipObject_extractFile)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnZipObject_extractFile"), typeof(wle_fnZipObject_extractFile));
mwle_fnZipObject_deleteFile= (wle_fnZipObject_deleteFile)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnZipObject_deleteFile"), typeof(wle_fnZipObject_deleteFile));
mwle_fnZipObject_getFileEntryCount= (wle_fnZipObject_getFileEntryCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnZipObject_getFileEntryCount"), typeof(wle_fnZipObject_getFileEntryCount));
mwle_fnZipObject_getFileEntry= (wle_fnZipObject_getFileEntry)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnZipObject_getFileEntry"), typeof(wle_fnZipObject_getFileEntry));
mwle_fnDecalRoad_regenerate= (wle_fnDecalRoad_regenerate)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnDecalRoad_regenerate"), typeof(wle_fnDecalRoad_regenerate));
mwle_fnDecalRoad_postApply= (wle_fnDecalRoad_postApply)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnDecalRoad_postApply"), typeof(wle_fnDecalRoad_postApply));
mwle_fnMeshRoad_setNodeDepth= (wle_fnMeshRoad_setNodeDepth)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMeshRoad_setNodeDepth"), typeof(wle_fnMeshRoad_setNodeDepth));
mwle_fnMeshRoad_regenerate= (wle_fnMeshRoad_regenerate)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMeshRoad_regenerate"), typeof(wle_fnMeshRoad_regenerate));
mwle_fnMeshRoad_postApply= (wle_fnMeshRoad_postApply)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMeshRoad_postApply"), typeof(wle_fnMeshRoad_postApply));
mwle_fnRiver_regenerate= (wle_fnRiver_regenerate)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnRiver_regenerate"), typeof(wle_fnRiver_regenerate));
mwle_fnRiver_setMetersPerSegment= (wle_fnRiver_setMetersPerSegment)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnRiver_setMetersPerSegment"), typeof(wle_fnRiver_setMetersPerSegment));
mwle_fnRiver_setBatchSize= (wle_fnRiver_setBatchSize)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnRiver_setBatchSize"), typeof(wle_fnRiver_setBatchSize));
mwle_fnRiver_setNodeDepth= (wle_fnRiver_setNodeDepth)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnRiver_setNodeDepth"), typeof(wle_fnRiver_setNodeDepth));
mwle_fnRiver_setMaxDivisionSize= (wle_fnRiver_setMaxDivisionSize)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnRiver_setMaxDivisionSize"), typeof(wle_fnRiver_setMaxDivisionSize));
mwle_fnScatterSky_applyChanges= (wle_fnScatterSky_applyChanges)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnScatterSky_applyChanges"), typeof(wle_fnScatterSky_applyChanges));
mwle_fnSkyBox_postApply= (wle_fnSkyBox_postApply)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSkyBox_postApply"), typeof(wle_fnSkyBox_postApply));
mwle_fnSun_apply= (wle_fnSun_apply)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSun_apply"), typeof(wle_fnSun_apply));
mwle_fnSun_animate= (wle_fnSun_animate)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSun_animate"), typeof(wle_fnSun_animate));
mwle_fnGuiRoadEditorCtrl_deleteNode= (wle_fnGuiRoadEditorCtrl_deleteNode)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiRoadEditorCtrl_deleteNode"), typeof(wle_fnGuiRoadEditorCtrl_deleteNode));
mwle_fnGuiRoadEditorCtrl_getMode= (wle_fnGuiRoadEditorCtrl_getMode)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiRoadEditorCtrl_getMode"), typeof(wle_fnGuiRoadEditorCtrl_getMode));
mwle_fnGuiRoadEditorCtrl_getNodeWidth= (wle_fnGuiRoadEditorCtrl_getNodeWidth)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiRoadEditorCtrl_getNodeWidth"), typeof(wle_fnGuiRoadEditorCtrl_getNodeWidth));
mwle_fnGuiRoadEditorCtrl_setNodeWidth= (wle_fnGuiRoadEditorCtrl_setNodeWidth)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiRoadEditorCtrl_setNodeWidth"), typeof(wle_fnGuiRoadEditorCtrl_setNodeWidth));
mwle_fnGuiRoadEditorCtrl_getNodePosition= (wle_fnGuiRoadEditorCtrl_getNodePosition)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiRoadEditorCtrl_getNodePosition"), typeof(wle_fnGuiRoadEditorCtrl_getNodePosition));
mwle_fnGuiRoadEditorCtrl_setNodePosition= (wle_fnGuiRoadEditorCtrl_setNodePosition)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiRoadEditorCtrl_setNodePosition"), typeof(wle_fnGuiRoadEditorCtrl_setNodePosition));
mwle_fnGuiRoadEditorCtrl_setSelectedRoad= (wle_fnGuiRoadEditorCtrl_setSelectedRoad)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiRoadEditorCtrl_setSelectedRoad"), typeof(wle_fnGuiRoadEditorCtrl_setSelectedRoad));
mwle_fnGuiRoadEditorCtrl_getSelectedRoad= (wle_fnGuiRoadEditorCtrl_getSelectedRoad)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiRoadEditorCtrl_getSelectedRoad"), typeof(wle_fnGuiRoadEditorCtrl_getSelectedRoad));
mwle_fnGuiRoadEditorCtrl_getSelectedNode= (wle_fnGuiRoadEditorCtrl_getSelectedNode)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiRoadEditorCtrl_getSelectedNode"), typeof(wle_fnGuiRoadEditorCtrl_getSelectedNode));
mwle_fnGuiRoadEditorCtrl_deleteRoad= (wle_fnGuiRoadEditorCtrl_deleteRoad)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiRoadEditorCtrl_deleteRoad"), typeof(wle_fnGuiRoadEditorCtrl_deleteRoad));
mwle_fnForest_saveDataFile= (wle_fnForest_saveDataFile)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnForest_saveDataFile"), typeof(wle_fnForest_saveDataFile));
mwle_fnForest_isDirty= (wle_fnForest_isDirty)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnForest_isDirty"), typeof(wle_fnForest_isDirty));
mwle_fnForest_regenCells= (wle_fnForest_regenCells)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnForest_regenCells"), typeof(wle_fnForest_regenCells));
mwle_fnForest_clear= (wle_fnForest_clear)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnForest_clear"), typeof(wle_fnForest_clear));
mwle_fnForestWindEmitter_attachToObject= (wle_fnForestWindEmitter_attachToObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnForestWindEmitter_attachToObject"), typeof(wle_fnForestWindEmitter_attachToObject));
mwle_fnForestBrush_containsItemData= (wle_fnForestBrush_containsItemData)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnForestBrush_containsItemData"), typeof(wle_fnForestBrush_containsItemData));
mwle_fnForestBrushTool_collectElements= (wle_fnForestBrushTool_collectElements)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnForestBrushTool_collectElements"), typeof(wle_fnForestBrushTool_collectElements));
mwle_fnForestEditorCtrl_updateActiveForest= (wle_fnForestEditorCtrl_updateActiveForest)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnForestEditorCtrl_updateActiveForest"), typeof(wle_fnForestEditorCtrl_updateActiveForest));
mwle_fnForestEditorCtrl_setActiveTool= (wle_fnForestEditorCtrl_setActiveTool)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnForestEditorCtrl_setActiveTool"), typeof(wle_fnForestEditorCtrl_setActiveTool));
mwle_fnForestEditorCtrl_getActiveTool= (wle_fnForestEditorCtrl_getActiveTool)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnForestEditorCtrl_getActiveTool"), typeof(wle_fnForestEditorCtrl_getActiveTool));
mwle_fnForestEditorCtrl_deleteMeshSafe= (wle_fnForestEditorCtrl_deleteMeshSafe)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnForestEditorCtrl_deleteMeshSafe"), typeof(wle_fnForestEditorCtrl_deleteMeshSafe));
mwle_fnForestEditorCtrl_isDirty= (wle_fnForestEditorCtrl_isDirty)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnForestEditorCtrl_isDirty"), typeof(wle_fnForestEditorCtrl_isDirty));
mwle_fnForestSelectionTool_getSelectionCount= (wle_fnForestSelectionTool_getSelectionCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnForestSelectionTool_getSelectionCount"), typeof(wle_fnForestSelectionTool_getSelectionCount));
mwle_fnForestSelectionTool_deleteSelection= (wle_fnForestSelectionTool_deleteSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnForestSelectionTool_deleteSelection"), typeof(wle_fnForestSelectionTool_deleteSelection));
mwle_fnForestSelectionTool_clearSelection= (wle_fnForestSelectionTool_clearSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnForestSelectionTool_clearSelection"), typeof(wle_fnForestSelectionTool_clearSelection));
mwle_fnForestSelectionTool_cutSelection= (wle_fnForestSelectionTool_cutSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnForestSelectionTool_cutSelection"), typeof(wle_fnForestSelectionTool_cutSelection));
mwle_fnForestSelectionTool_copySelection= (wle_fnForestSelectionTool_copySelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnForestSelectionTool_copySelection"), typeof(wle_fnForestSelectionTool_copySelection));
mwle_fnForestSelectionTool_pasteSelection= (wle_fnForestSelectionTool_pasteSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnForestSelectionTool_pasteSelection"), typeof(wle_fnForestSelectionTool_pasteSelection));
mwle_fn_populateFontCacheString= (wle_fn_populateFontCacheString)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_populateFontCacheString"), typeof(wle_fn_populateFontCacheString));
mwle_fn_populateFontCacheRange= (wle_fn_populateFontCacheRange)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_populateFontCacheRange"), typeof(wle_fn_populateFontCacheRange));
mwle_fn_dumpFontCacheStatus= (wle_fn_dumpFontCacheStatus)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_dumpFontCacheStatus"), typeof(wle_fn_dumpFontCacheStatus));
mwle_fn_writeFontCache= (wle_fn_writeFontCache)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_writeFontCache"), typeof(wle_fn_writeFontCache));
mwle_fn_populateAllFontCacheString= (wle_fn_populateAllFontCacheString)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_populateAllFontCacheString"), typeof(wle_fn_populateAllFontCacheString));
mwle_fn_populateAllFontCacheRange= (wle_fn_populateAllFontCacheRange)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_populateAllFontCacheRange"), typeof(wle_fn_populateAllFontCacheRange));
mwle_fn_exportCachedFont= (wle_fn_exportCachedFont)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_exportCachedFont"), typeof(wle_fn_exportCachedFont));
mwle_fn_importCachedFont= (wle_fn_importCachedFont)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_importCachedFont"), typeof(wle_fn_importCachedFont));
mwle_fn_duplicateCachedFont= (wle_fn_duplicateCachedFont)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_duplicateCachedFont"), typeof(wle_fn_duplicateCachedFont));
mwle_fn_getDisplayDeviceList= (wle_fn_getDisplayDeviceList)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getDisplayDeviceList"), typeof(wle_fn_getDisplayDeviceList));
mwle_fn_listGFXResources= (wle_fn_listGFXResources)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_listGFXResources"), typeof(wle_fn_listGFXResources));
mwle_fn_flagCurrentGFXResources= (wle_fn_flagCurrentGFXResources)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_flagCurrentGFXResources"), typeof(wle_fn_flagCurrentGFXResources));
mwle_fn_clearGFXResourceFlags= (wle_fn_clearGFXResourceFlags)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_clearGFXResourceFlags"), typeof(wle_fn_clearGFXResourceFlags));
mwle_fn_describeGFXResources= (wle_fn_describeGFXResources)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_describeGFXResources"), typeof(wle_fn_describeGFXResources));
mwle_fn_describeGFXStateBlocks= (wle_fn_describeGFXStateBlocks)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_describeGFXStateBlocks"), typeof(wle_fn_describeGFXStateBlocks));
mwle_fn_getPixelShaderVersion= (wle_fn_getPixelShaderVersion)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getPixelShaderVersion"), typeof(wle_fn_getPixelShaderVersion));
mwle_fn_setPixelShaderVersion= (wle_fn_setPixelShaderVersion)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_setPixelShaderVersion"), typeof(wle_fn_setPixelShaderVersion));
mwle_fn_getDisplayDeviceInformation= (wle_fn_getDisplayDeviceInformation)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getDisplayDeviceInformation"), typeof(wle_fn_getDisplayDeviceInformation));
mwle_fn_getBestHDRFormat= (wle_fn_getBestHDRFormat)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getBestHDRFormat"), typeof(wle_fn_getBestHDRFormat));
mwle_fn_getDesktopResolution= (wle_fn_getDesktopResolution)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getDesktopResolution"), typeof(wle_fn_getDesktopResolution));
mwle_fn_addGlobalShaderMacro= (wle_fn_addGlobalShaderMacro)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_addGlobalShaderMacro"), typeof(wle_fn_addGlobalShaderMacro));
mwle_fn_removeGlobalShaderMacro= (wle_fn_removeGlobalShaderMacro)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_removeGlobalShaderMacro"), typeof(wle_fn_removeGlobalShaderMacro));
mwle_fn_flushTextureCache= (wle_fn_flushTextureCache)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_flushTextureCache"), typeof(wle_fn_flushTextureCache));
mwle_fn_cleanupTexturePool= (wle_fn_cleanupTexturePool)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_cleanupTexturePool"), typeof(wle_fn_cleanupTexturePool));
mwle_fn_reloadTextures= (wle_fn_reloadTextures)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_reloadTextures"), typeof(wle_fn_reloadTextures));
mwle_fn_getTextureProfileStats= (wle_fn_getTextureProfileStats)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getTextureProfileStats"), typeof(wle_fn_getTextureProfileStats));
mwle_fn_screenShot= (wle_fn_screenShot)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_screenShot"), typeof(wle_fn_screenShot));
mwle_fn_getActiveDDSFiles= (wle_fn_getActiveDDSFiles)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getActiveDDSFiles"), typeof(wle_fn_getActiveDDSFiles));
mwle_fn_getBitmapInfo= (wle_fn_getBitmapInfo)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getBitmapInfo"), typeof(wle_fn_getBitmapInfo));
mwle_fnCubemapData_updateFaces= (wle_fnCubemapData_updateFaces)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCubemapData_updateFaces"), typeof(wle_fnCubemapData_updateFaces));
mwle_fnCubemapData_getFilename= (wle_fnCubemapData_getFilename)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCubemapData_getFilename"), typeof(wle_fnCubemapData_getFilename));
mwle_fnDebugDrawer_drawLine= (wle_fnDebugDrawer_drawLine)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnDebugDrawer_drawLine"), typeof(wle_fnDebugDrawer_drawLine));
mwle_fnDebugDrawer_drawBox= (wle_fnDebugDrawer_drawBox)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnDebugDrawer_drawBox"), typeof(wle_fnDebugDrawer_drawBox));
mwle_fnDebugDrawer_setLastTTL= (wle_fnDebugDrawer_setLastTTL)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnDebugDrawer_setLastTTL"), typeof(wle_fnDebugDrawer_setLastTTL));
mwle_fnDebugDrawer_setLastZTest= (wle_fnDebugDrawer_setLastZTest)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnDebugDrawer_setLastZTest"), typeof(wle_fnDebugDrawer_setLastZTest));
mwle_fnDebugDrawer_toggleFreeze= (wle_fnDebugDrawer_toggleFreeze)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnDebugDrawer_toggleFreeze"), typeof(wle_fnDebugDrawer_toggleFreeze));
mwle_fnDebugDrawer_toggleDrawing= (wle_fnDebugDrawer_toggleDrawing)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnDebugDrawer_toggleDrawing"), typeof(wle_fnDebugDrawer_toggleDrawing));
mwle_fn_startVideoCapture= (wle_fn_startVideoCapture)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_startVideoCapture"), typeof(wle_fn_startVideoCapture));
mwle_fn_stopVideoCapture= (wle_fn_stopVideoCapture)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_stopVideoCapture"), typeof(wle_fn_stopVideoCapture));
mwle_fn_playJournalToVideo= (wle_fn_playJournalToVideo)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_playJournalToVideo"), typeof(wle_fn_playJournalToVideo));
mwle_fnGuiTSCtrl_unproject= (wle_fnGuiTSCtrl_unproject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTSCtrl_unproject"), typeof(wle_fnGuiTSCtrl_unproject));
mwle_fnGuiTSCtrl_project= (wle_fnGuiTSCtrl_project)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTSCtrl_project"), typeof(wle_fnGuiTSCtrl_project));
mwle_fnGuiTSCtrl_getWorldToScreenScale= (wle_fnGuiTSCtrl_getWorldToScreenScale)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTSCtrl_getWorldToScreenScale"), typeof(wle_fnGuiTSCtrl_getWorldToScreenScale));
mwle_fnGuiTSCtrl_calculateViewDistance= (wle_fnGuiTSCtrl_calculateViewDistance)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTSCtrl_calculateViewDistance"), typeof(wle_fnGuiTSCtrl_calculateViewDistance));
mwle_fnGuiBitmapButtonCtrl_setBitmap= (wle_fnGuiBitmapButtonCtrl_setBitmap)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiBitmapButtonCtrl_setBitmap"), typeof(wle_fnGuiBitmapButtonCtrl_setBitmap));
mwle_fnGuiButtonBaseCtrl_performClick= (wle_fnGuiButtonBaseCtrl_performClick)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiButtonBaseCtrl_performClick"), typeof(wle_fnGuiButtonBaseCtrl_performClick));
mwle_fnGuiButtonBaseCtrl_setText= (wle_fnGuiButtonBaseCtrl_setText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiButtonBaseCtrl_setText"), typeof(wle_fnGuiButtonBaseCtrl_setText));
mwle_fnGuiButtonBaseCtrl_setTextID= (wle_fnGuiButtonBaseCtrl_setTextID)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiButtonBaseCtrl_setTextID"), typeof(wle_fnGuiButtonBaseCtrl_setTextID));
mwle_fnGuiButtonBaseCtrl_getText= (wle_fnGuiButtonBaseCtrl_getText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiButtonBaseCtrl_getText"), typeof(wle_fnGuiButtonBaseCtrl_getText));
mwle_fnGuiButtonBaseCtrl_setStateOn= (wle_fnGuiButtonBaseCtrl_setStateOn)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiButtonBaseCtrl_setStateOn"), typeof(wle_fnGuiButtonBaseCtrl_setStateOn));
mwle_fnGuiButtonBaseCtrl_resetState= (wle_fnGuiButtonBaseCtrl_resetState)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiButtonBaseCtrl_resetState"), typeof(wle_fnGuiButtonBaseCtrl_resetState));
mwle_fnGuiCheckBoxCtrl_setStateOn= (wle_fnGuiCheckBoxCtrl_setStateOn)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCheckBoxCtrl_setStateOn"), typeof(wle_fnGuiCheckBoxCtrl_setStateOn));
mwle_fnGuiCheckBoxCtrl_isStateOn= (wle_fnGuiCheckBoxCtrl_isStateOn)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCheckBoxCtrl_isStateOn"), typeof(wle_fnGuiCheckBoxCtrl_isStateOn));
mwle_fnGuiIconButtonCtrl_setBitmap= (wle_fnGuiIconButtonCtrl_setBitmap)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiIconButtonCtrl_setBitmap"), typeof(wle_fnGuiIconButtonCtrl_setBitmap));
mwle_fnGuiSwatchButtonCtrl_setColor= (wle_fnGuiSwatchButtonCtrl_setColor)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiSwatchButtonCtrl_setColor"), typeof(wle_fnGuiSwatchButtonCtrl_setColor));
mwle_fnGuiToolboxButtonCtrl_setNormalBitmap= (wle_fnGuiToolboxButtonCtrl_setNormalBitmap)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiToolboxButtonCtrl_setNormalBitmap"), typeof(wle_fnGuiToolboxButtonCtrl_setNormalBitmap));
mwle_fnGuiToolboxButtonCtrl_setLoweredBitmap= (wle_fnGuiToolboxButtonCtrl_setLoweredBitmap)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiToolboxButtonCtrl_setLoweredBitmap"), typeof(wle_fnGuiToolboxButtonCtrl_setLoweredBitmap));
mwle_fnGuiToolboxButtonCtrl_setHoverBitmap= (wle_fnGuiToolboxButtonCtrl_setHoverBitmap)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiToolboxButtonCtrl_setHoverBitmap"), typeof(wle_fnGuiToolboxButtonCtrl_setHoverBitmap));
mwle_fnGuiAutoScrollCtrl_reset= (wle_fnGuiAutoScrollCtrl_reset)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiAutoScrollCtrl_reset"), typeof(wle_fnGuiAutoScrollCtrl_reset));
mwle_fnGuiDynamicCtrlArrayControl_refresh= (wle_fnGuiDynamicCtrlArrayControl_refresh)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiDynamicCtrlArrayControl_refresh"), typeof(wle_fnGuiDynamicCtrlArrayControl_refresh));
mwle_fnGuiFormCtrl_setCaption= (wle_fnGuiFormCtrl_setCaption)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFormCtrl_setCaption"), typeof(wle_fnGuiFormCtrl_setCaption));
mwle_fnGuiFrameSetCtrl_frameBorder= (wle_fnGuiFrameSetCtrl_frameBorder)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFrameSetCtrl_frameBorder"), typeof(wle_fnGuiFrameSetCtrl_frameBorder));
mwle_fnGuiFrameSetCtrl_frameMovable= (wle_fnGuiFrameSetCtrl_frameMovable)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFrameSetCtrl_frameMovable"), typeof(wle_fnGuiFrameSetCtrl_frameMovable));
mwle_fnGuiFrameSetCtrl_frameMinExtent= (wle_fnGuiFrameSetCtrl_frameMinExtent)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFrameSetCtrl_frameMinExtent"), typeof(wle_fnGuiFrameSetCtrl_frameMinExtent));
mwle_fnGuiFrameSetCtrl_framePadding= (wle_fnGuiFrameSetCtrl_framePadding)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFrameSetCtrl_framePadding"), typeof(wle_fnGuiFrameSetCtrl_framePadding));
mwle_fnGuiFrameSetCtrl_getFramePadding= (wle_fnGuiFrameSetCtrl_getFramePadding)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFrameSetCtrl_getFramePadding"), typeof(wle_fnGuiFrameSetCtrl_getFramePadding));
mwle_fnGuiFrameSetCtrl_addColumn= (wle_fnGuiFrameSetCtrl_addColumn)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFrameSetCtrl_addColumn"), typeof(wle_fnGuiFrameSetCtrl_addColumn));
mwle_fnGuiFrameSetCtrl_addRow= (wle_fnGuiFrameSetCtrl_addRow)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFrameSetCtrl_addRow"), typeof(wle_fnGuiFrameSetCtrl_addRow));
mwle_fnGuiFrameSetCtrl_removeColumn= (wle_fnGuiFrameSetCtrl_removeColumn)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFrameSetCtrl_removeColumn"), typeof(wle_fnGuiFrameSetCtrl_removeColumn));
mwle_fnGuiFrameSetCtrl_removeRow= (wle_fnGuiFrameSetCtrl_removeRow)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFrameSetCtrl_removeRow"), typeof(wle_fnGuiFrameSetCtrl_removeRow));
mwle_fnGuiFrameSetCtrl_getColumnCount= (wle_fnGuiFrameSetCtrl_getColumnCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFrameSetCtrl_getColumnCount"), typeof(wle_fnGuiFrameSetCtrl_getColumnCount));
mwle_fnGuiFrameSetCtrl_getRowCount= (wle_fnGuiFrameSetCtrl_getRowCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFrameSetCtrl_getRowCount"), typeof(wle_fnGuiFrameSetCtrl_getRowCount));
mwle_fnGuiFrameSetCtrl_getColumnOffset= (wle_fnGuiFrameSetCtrl_getColumnOffset)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFrameSetCtrl_getColumnOffset"), typeof(wle_fnGuiFrameSetCtrl_getColumnOffset));
mwle_fnGuiFrameSetCtrl_getRowOffset= (wle_fnGuiFrameSetCtrl_getRowOffset)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFrameSetCtrl_getRowOffset"), typeof(wle_fnGuiFrameSetCtrl_getRowOffset));
mwle_fnGuiFrameSetCtrl_setColumnOffset= (wle_fnGuiFrameSetCtrl_setColumnOffset)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFrameSetCtrl_setColumnOffset"), typeof(wle_fnGuiFrameSetCtrl_setColumnOffset));
mwle_fnGuiFrameSetCtrl_setRowOffset= (wle_fnGuiFrameSetCtrl_setRowOffset)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFrameSetCtrl_setRowOffset"), typeof(wle_fnGuiFrameSetCtrl_setRowOffset));
mwle_fnGuiFrameSetCtrl_updateSizes= (wle_fnGuiFrameSetCtrl_updateSizes)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFrameSetCtrl_updateSizes"), typeof(wle_fnGuiFrameSetCtrl_updateSizes));
mwle_fnGuiPaneControl_setCollapsed= (wle_fnGuiPaneControl_setCollapsed)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPaneControl_setCollapsed"), typeof(wle_fnGuiPaneControl_setCollapsed));
mwle_fnGuiRolloutCtrl_isExpanded= (wle_fnGuiRolloutCtrl_isExpanded)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiRolloutCtrl_isExpanded"), typeof(wle_fnGuiRolloutCtrl_isExpanded));
mwle_fnGuiRolloutCtrl_collapse= (wle_fnGuiRolloutCtrl_collapse)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiRolloutCtrl_collapse"), typeof(wle_fnGuiRolloutCtrl_collapse));
mwle_fnGuiRolloutCtrl_expand= (wle_fnGuiRolloutCtrl_expand)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiRolloutCtrl_expand"), typeof(wle_fnGuiRolloutCtrl_expand));
mwle_fnGuiRolloutCtrl_toggleCollapse= (wle_fnGuiRolloutCtrl_toggleCollapse)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiRolloutCtrl_toggleCollapse"), typeof(wle_fnGuiRolloutCtrl_toggleCollapse));
mwle_fnGuiRolloutCtrl_toggleExpanded= (wle_fnGuiRolloutCtrl_toggleExpanded)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiRolloutCtrl_toggleExpanded"), typeof(wle_fnGuiRolloutCtrl_toggleExpanded));
mwle_fnGuiRolloutCtrl_instantCollapse= (wle_fnGuiRolloutCtrl_instantCollapse)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiRolloutCtrl_instantCollapse"), typeof(wle_fnGuiRolloutCtrl_instantCollapse));
mwle_fnGuiRolloutCtrl_instantExpand= (wle_fnGuiRolloutCtrl_instantExpand)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiRolloutCtrl_instantExpand"), typeof(wle_fnGuiRolloutCtrl_instantExpand));
mwle_fnGuiRolloutCtrl_sizeToContents= (wle_fnGuiRolloutCtrl_sizeToContents)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiRolloutCtrl_sizeToContents"), typeof(wle_fnGuiRolloutCtrl_sizeToContents));
mwle_fnGuiScrollCtrl_scrollToTop= (wle_fnGuiScrollCtrl_scrollToTop)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiScrollCtrl_scrollToTop"), typeof(wle_fnGuiScrollCtrl_scrollToTop));
mwle_fnGuiScrollCtrl_scrollToBottom= (wle_fnGuiScrollCtrl_scrollToBottom)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiScrollCtrl_scrollToBottom"), typeof(wle_fnGuiScrollCtrl_scrollToBottom));
mwle_fnGuiScrollCtrl_setScrollPosition= (wle_fnGuiScrollCtrl_setScrollPosition)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiScrollCtrl_setScrollPosition"), typeof(wle_fnGuiScrollCtrl_setScrollPosition));
mwle_fnGuiScrollCtrl_scrollToObject= (wle_fnGuiScrollCtrl_scrollToObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiScrollCtrl_scrollToObject"), typeof(wle_fnGuiScrollCtrl_scrollToObject));
mwle_fnGuiScrollCtrl_getScrollPosition= (wle_fnGuiScrollCtrl_getScrollPosition)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiScrollCtrl_getScrollPosition"), typeof(wle_fnGuiScrollCtrl_getScrollPosition));
mwle_fnGuiScrollCtrl_getScrollPositionX= (wle_fnGuiScrollCtrl_getScrollPositionX)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiScrollCtrl_getScrollPositionX"), typeof(wle_fnGuiScrollCtrl_getScrollPositionX));
mwle_fnGuiScrollCtrl_getScrollPositionY= (wle_fnGuiScrollCtrl_getScrollPositionY)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiScrollCtrl_getScrollPositionY"), typeof(wle_fnGuiScrollCtrl_getScrollPositionY));
mwle_fnGuiScrollCtrl_computeSizes= (wle_fnGuiScrollCtrl_computeSizes)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiScrollCtrl_computeSizes"), typeof(wle_fnGuiScrollCtrl_computeSizes));
mwle_fnGuiStackControl_isFrozen= (wle_fnGuiStackControl_isFrozen)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiStackControl_isFrozen"), typeof(wle_fnGuiStackControl_isFrozen));
mwle_fnGuiStackControl_freeze= (wle_fnGuiStackControl_freeze)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiStackControl_freeze"), typeof(wle_fnGuiStackControl_freeze));
mwle_fnGuiStackControl_updateStack= (wle_fnGuiStackControl_updateStack)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiStackControl_updateStack"), typeof(wle_fnGuiStackControl_updateStack));
mwle_fnGuiTabBookCtrl_addPage= (wle_fnGuiTabBookCtrl_addPage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTabBookCtrl_addPage"), typeof(wle_fnGuiTabBookCtrl_addPage));
mwle_fnGuiTabBookCtrl_selectPage= (wle_fnGuiTabBookCtrl_selectPage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTabBookCtrl_selectPage"), typeof(wle_fnGuiTabBookCtrl_selectPage));
mwle_fnGuiTabBookCtrl_getSelectedPage= (wle_fnGuiTabBookCtrl_getSelectedPage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTabBookCtrl_getSelectedPage"), typeof(wle_fnGuiTabBookCtrl_getSelectedPage));
mwle_fnGuiBitmapCtrl_setBitmap= (wle_fnGuiBitmapCtrl_setBitmap)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiBitmapCtrl_setBitmap"), typeof(wle_fnGuiBitmapCtrl_setBitmap));
mwle_fnGuiBitmapCtrl_setValue= (wle_fnGuiBitmapCtrl_setValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiBitmapCtrl_setValue"), typeof(wle_fnGuiBitmapCtrl_setValue));
mwle_fnGuiColorPickerCtrl_getSelectorPos= (wle_fnGuiColorPickerCtrl_getSelectorPos)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiColorPickerCtrl_getSelectorPos"), typeof(wle_fnGuiColorPickerCtrl_getSelectorPos));
mwle_fnGuiColorPickerCtrl_setSelectorPos= (wle_fnGuiColorPickerCtrl_setSelectorPos)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiColorPickerCtrl_setSelectorPos"), typeof(wle_fnGuiColorPickerCtrl_setSelectorPos));
mwle_fnGuiColorPickerCtrl_updateColor= (wle_fnGuiColorPickerCtrl_updateColor)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiColorPickerCtrl_updateColor"), typeof(wle_fnGuiColorPickerCtrl_updateColor));
mwle_fnGuiDirectoryFileListCtrl_setFilter= (wle_fnGuiDirectoryFileListCtrl_setFilter)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiDirectoryFileListCtrl_setFilter"), typeof(wle_fnGuiDirectoryFileListCtrl_setFilter));
mwle_fnGuiDirectoryFileListCtrl_reload= (wle_fnGuiDirectoryFileListCtrl_reload)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiDirectoryFileListCtrl_reload"), typeof(wle_fnGuiDirectoryFileListCtrl_reload));
mwle_fnGuiDirectoryFileListCtrl_setPath= (wle_fnGuiDirectoryFileListCtrl_setPath)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiDirectoryFileListCtrl_setPath"), typeof(wle_fnGuiDirectoryFileListCtrl_setPath));
mwle_fnGuiDirectoryFileListCtrl_getSelectedFiles= (wle_fnGuiDirectoryFileListCtrl_getSelectedFiles)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiDirectoryFileListCtrl_getSelectedFiles"), typeof(wle_fnGuiDirectoryFileListCtrl_getSelectedFiles));
mwle_fnGuiDirectoryFileListCtrl_getSelectedFile= (wle_fnGuiDirectoryFileListCtrl_getSelectedFile)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiDirectoryFileListCtrl_getSelectedFile"), typeof(wle_fnGuiDirectoryFileListCtrl_getSelectedFile));
mwle_fnGuiFileTreeCtrl_getSelectedPath= (wle_fnGuiFileTreeCtrl_getSelectedPath)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFileTreeCtrl_getSelectedPath"), typeof(wle_fnGuiFileTreeCtrl_getSelectedPath));
mwle_fnGuiFileTreeCtrl_setSelectedPath= (wle_fnGuiFileTreeCtrl_setSelectedPath)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFileTreeCtrl_setSelectedPath"), typeof(wle_fnGuiFileTreeCtrl_setSelectedPath));
mwle_fnGuiFileTreeCtrl_reload= (wle_fnGuiFileTreeCtrl_reload)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFileTreeCtrl_reload"), typeof(wle_fnGuiFileTreeCtrl_reload));
mwle_fnGuiGameListMenuCtrl_addRow= (wle_fnGuiGameListMenuCtrl_addRow)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiGameListMenuCtrl_addRow"), typeof(wle_fnGuiGameListMenuCtrl_addRow));
mwle_fnGuiGameListMenuCtrl_isRowEnabled= (wle_fnGuiGameListMenuCtrl_isRowEnabled)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiGameListMenuCtrl_isRowEnabled"), typeof(wle_fnGuiGameListMenuCtrl_isRowEnabled));
mwle_fnGuiGameListMenuCtrl_setRowEnabled= (wle_fnGuiGameListMenuCtrl_setRowEnabled)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiGameListMenuCtrl_setRowEnabled"), typeof(wle_fnGuiGameListMenuCtrl_setRowEnabled));
mwle_fnGuiGameListMenuCtrl_activateRow= (wle_fnGuiGameListMenuCtrl_activateRow)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiGameListMenuCtrl_activateRow"), typeof(wle_fnGuiGameListMenuCtrl_activateRow));
mwle_fnGuiGameListMenuCtrl_getRowCount= (wle_fnGuiGameListMenuCtrl_getRowCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiGameListMenuCtrl_getRowCount"), typeof(wle_fnGuiGameListMenuCtrl_getRowCount));
mwle_fnGuiGameListMenuCtrl_getRowLabel= (wle_fnGuiGameListMenuCtrl_getRowLabel)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiGameListMenuCtrl_getRowLabel"), typeof(wle_fnGuiGameListMenuCtrl_getRowLabel));
mwle_fnGuiGameListMenuCtrl_setRowLabel= (wle_fnGuiGameListMenuCtrl_setRowLabel)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiGameListMenuCtrl_setRowLabel"), typeof(wle_fnGuiGameListMenuCtrl_setRowLabel));
mwle_fnGuiGameListMenuCtrl_setSelected= (wle_fnGuiGameListMenuCtrl_setSelected)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiGameListMenuCtrl_setSelected"), typeof(wle_fnGuiGameListMenuCtrl_setSelected));
mwle_fnGuiGameListMenuCtrl_getSelectedRow= (wle_fnGuiGameListMenuCtrl_getSelectedRow)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiGameListMenuCtrl_getSelectedRow"), typeof(wle_fnGuiGameListMenuCtrl_getSelectedRow));
mwle_fnGuiGameListOptionsCtrl_addRow= (wle_fnGuiGameListOptionsCtrl_addRow)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiGameListOptionsCtrl_addRow"), typeof(wle_fnGuiGameListOptionsCtrl_addRow));
mwle_fnGuiGameListOptionsCtrl_getCurrentOption= (wle_fnGuiGameListOptionsCtrl_getCurrentOption)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiGameListOptionsCtrl_getCurrentOption"), typeof(wle_fnGuiGameListOptionsCtrl_getCurrentOption));
mwle_fnGuiGameListOptionsCtrl_selectOption= (wle_fnGuiGameListOptionsCtrl_selectOption)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiGameListOptionsCtrl_selectOption"), typeof(wle_fnGuiGameListOptionsCtrl_selectOption));
mwle_fnGuiGameListOptionsCtrl_setOptions= (wle_fnGuiGameListOptionsCtrl_setOptions)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiGameListOptionsCtrl_setOptions"), typeof(wle_fnGuiGameListOptionsCtrl_setOptions));
mwle_fnGuiGradientCtrl_getColorCount= (wle_fnGuiGradientCtrl_getColorCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiGradientCtrl_getColorCount"), typeof(wle_fnGuiGradientCtrl_getColorCount));
mwle_fnGuiGradientCtrl_getColor= (wle_fnGuiGradientCtrl_getColor)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiGradientCtrl_getColor"), typeof(wle_fnGuiGradientCtrl_getColor));
mwle_fnGuiListBoxCtrl_setMultipleSelection= (wle_fnGuiListBoxCtrl_setMultipleSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_setMultipleSelection"), typeof(wle_fnGuiListBoxCtrl_setMultipleSelection));
mwle_fnGuiListBoxCtrl_clearItems= (wle_fnGuiListBoxCtrl_clearItems)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_clearItems"), typeof(wle_fnGuiListBoxCtrl_clearItems));
mwle_fnGuiListBoxCtrl_clearSelection= (wle_fnGuiListBoxCtrl_clearSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_clearSelection"), typeof(wle_fnGuiListBoxCtrl_clearSelection));
mwle_fnGuiListBoxCtrl_setSelected= (wle_fnGuiListBoxCtrl_setSelected)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_setSelected"), typeof(wle_fnGuiListBoxCtrl_setSelected));
mwle_fnGuiListBoxCtrl_getItemCount= (wle_fnGuiListBoxCtrl_getItemCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_getItemCount"), typeof(wle_fnGuiListBoxCtrl_getItemCount));
mwle_fnGuiListBoxCtrl_getSelCount= (wle_fnGuiListBoxCtrl_getSelCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_getSelCount"), typeof(wle_fnGuiListBoxCtrl_getSelCount));
mwle_fnGuiListBoxCtrl_getSelectedItem= (wle_fnGuiListBoxCtrl_getSelectedItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_getSelectedItem"), typeof(wle_fnGuiListBoxCtrl_getSelectedItem));
mwle_fnGuiListBoxCtrl_getSelectedItems= (wle_fnGuiListBoxCtrl_getSelectedItems)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_getSelectedItems"), typeof(wle_fnGuiListBoxCtrl_getSelectedItems));
mwle_fnGuiListBoxCtrl_findItemText= (wle_fnGuiListBoxCtrl_findItemText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_findItemText"), typeof(wle_fnGuiListBoxCtrl_findItemText));
mwle_fnGuiListBoxCtrl_setCurSel= (wle_fnGuiListBoxCtrl_setCurSel)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_setCurSel"), typeof(wle_fnGuiListBoxCtrl_setCurSel));
mwle_fnGuiListBoxCtrl_setCurSelRange= (wle_fnGuiListBoxCtrl_setCurSelRange)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_setCurSelRange"), typeof(wle_fnGuiListBoxCtrl_setCurSelRange));
mwle_fnGuiListBoxCtrl_addItem= (wle_fnGuiListBoxCtrl_addItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_addItem"), typeof(wle_fnGuiListBoxCtrl_addItem));
mwle_fnGuiListBoxCtrl_setItemColor= (wle_fnGuiListBoxCtrl_setItemColor)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_setItemColor"), typeof(wle_fnGuiListBoxCtrl_setItemColor));
mwle_fnGuiListBoxCtrl_clearItemColor= (wle_fnGuiListBoxCtrl_clearItemColor)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_clearItemColor"), typeof(wle_fnGuiListBoxCtrl_clearItemColor));
mwle_fnGuiListBoxCtrl_insertItem= (wle_fnGuiListBoxCtrl_insertItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_insertItem"), typeof(wle_fnGuiListBoxCtrl_insertItem));
mwle_fnGuiListBoxCtrl_deleteItem= (wle_fnGuiListBoxCtrl_deleteItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_deleteItem"), typeof(wle_fnGuiListBoxCtrl_deleteItem));
mwle_fnGuiListBoxCtrl_getItemText= (wle_fnGuiListBoxCtrl_getItemText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_getItemText"), typeof(wle_fnGuiListBoxCtrl_getItemText));
mwle_fnGuiListBoxCtrl_getItemObject= (wle_fnGuiListBoxCtrl_getItemObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_getItemObject"), typeof(wle_fnGuiListBoxCtrl_getItemObject));
mwle_fnGuiListBoxCtrl_setItemText= (wle_fnGuiListBoxCtrl_setItemText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_setItemText"), typeof(wle_fnGuiListBoxCtrl_setItemText));
mwle_fnGuiListBoxCtrl_setItemTooltip= (wle_fnGuiListBoxCtrl_setItemTooltip)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_setItemTooltip"), typeof(wle_fnGuiListBoxCtrl_setItemTooltip));
mwle_fnGuiListBoxCtrl_getLastClickItem= (wle_fnGuiListBoxCtrl_getLastClickItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_getLastClickItem"), typeof(wle_fnGuiListBoxCtrl_getLastClickItem));
mwle_fnGuiListBoxCtrl_doMirror= (wle_fnGuiListBoxCtrl_doMirror)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_doMirror"), typeof(wle_fnGuiListBoxCtrl_doMirror));
mwle_fnGuiListBoxCtrl_addFilteredItem= (wle_fnGuiListBoxCtrl_addFilteredItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_addFilteredItem"), typeof(wle_fnGuiListBoxCtrl_addFilteredItem));
mwle_fnGuiListBoxCtrl_removeFilteredItem= (wle_fnGuiListBoxCtrl_removeFilteredItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiListBoxCtrl_removeFilteredItem"), typeof(wle_fnGuiListBoxCtrl_removeFilteredItem));
mwle_fnGuiMaterialCtrl_setMaterial= (wle_fnGuiMaterialCtrl_setMaterial)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMaterialCtrl_setMaterial"), typeof(wle_fnGuiMaterialCtrl_setMaterial));
mwle_fn_StripMLControlChars= (wle_fn_StripMLControlChars)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_StripMLControlChars"), typeof(wle_fn_StripMLControlChars));
mwle_fnGuiMLTextCtrl_setText= (wle_fnGuiMLTextCtrl_setText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMLTextCtrl_setText"), typeof(wle_fnGuiMLTextCtrl_setText));
mwle_fnGuiMLTextCtrl_getText= (wle_fnGuiMLTextCtrl_getText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMLTextCtrl_getText"), typeof(wle_fnGuiMLTextCtrl_getText));
mwle_fnGuiMLTextCtrl_addText= (wle_fnGuiMLTextCtrl_addText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMLTextCtrl_addText"), typeof(wle_fnGuiMLTextCtrl_addText));
mwle_fnGuiMLTextCtrl_setCursorPosition= (wle_fnGuiMLTextCtrl_setCursorPosition)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMLTextCtrl_setCursorPosition"), typeof(wle_fnGuiMLTextCtrl_setCursorPosition));
mwle_fnGuiMLTextCtrl_scrollToTag= (wle_fnGuiMLTextCtrl_scrollToTag)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMLTextCtrl_scrollToTag"), typeof(wle_fnGuiMLTextCtrl_scrollToTag));
mwle_fnGuiMLTextCtrl_scrollToTop= (wle_fnGuiMLTextCtrl_scrollToTop)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMLTextCtrl_scrollToTop"), typeof(wle_fnGuiMLTextCtrl_scrollToTop));
mwle_fnGuiMLTextCtrl_scrollToBottom= (wle_fnGuiMLTextCtrl_scrollToBottom)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMLTextCtrl_scrollToBottom"), typeof(wle_fnGuiMLTextCtrl_scrollToBottom));
mwle_fnGuiMLTextCtrl_forceReflow= (wle_fnGuiMLTextCtrl_forceReflow)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMLTextCtrl_forceReflow"), typeof(wle_fnGuiMLTextCtrl_forceReflow));
mwle_fnGuiMLTextCtrl_setAlpha= (wle_fnGuiMLTextCtrl_setAlpha)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMLTextCtrl_setAlpha"), typeof(wle_fnGuiMLTextCtrl_setAlpha));
mwle_fnGuiPopUpMenuCtrl_add= (wle_fnGuiPopUpMenuCtrl_add)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrl_add"), typeof(wle_fnGuiPopUpMenuCtrl_add));
mwle_fnGuiPopUpMenuCtrl_addScheme= (wle_fnGuiPopUpMenuCtrl_addScheme)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrl_addScheme"), typeof(wle_fnGuiPopUpMenuCtrl_addScheme));
mwle_fnGuiPopUpMenuCtrl_getText= (wle_fnGuiPopUpMenuCtrl_getText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrl_getText"), typeof(wle_fnGuiPopUpMenuCtrl_getText));
mwle_fnGuiPopUpMenuCtrl_clear= (wle_fnGuiPopUpMenuCtrl_clear)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrl_clear"), typeof(wle_fnGuiPopUpMenuCtrl_clear));
mwle_fnGuiPopUpMenuCtrl_sort= (wle_fnGuiPopUpMenuCtrl_sort)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrl_sort"), typeof(wle_fnGuiPopUpMenuCtrl_sort));
mwle_fnGuiPopUpMenuCtrl_sortID= (wle_fnGuiPopUpMenuCtrl_sortID)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrl_sortID"), typeof(wle_fnGuiPopUpMenuCtrl_sortID));
mwle_fnGuiPopUpMenuCtrl_forceOnAction= (wle_fnGuiPopUpMenuCtrl_forceOnAction)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrl_forceOnAction"), typeof(wle_fnGuiPopUpMenuCtrl_forceOnAction));
mwle_fnGuiPopUpMenuCtrl_forceClose= (wle_fnGuiPopUpMenuCtrl_forceClose)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrl_forceClose"), typeof(wle_fnGuiPopUpMenuCtrl_forceClose));
mwle_fnGuiPopUpMenuCtrl_getSelected= (wle_fnGuiPopUpMenuCtrl_getSelected)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrl_getSelected"), typeof(wle_fnGuiPopUpMenuCtrl_getSelected));
mwle_fnGuiPopUpMenuCtrl_setSelected= (wle_fnGuiPopUpMenuCtrl_setSelected)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrl_setSelected"), typeof(wle_fnGuiPopUpMenuCtrl_setSelected));
mwle_fnGuiPopUpMenuCtrl_setFirstSelected= (wle_fnGuiPopUpMenuCtrl_setFirstSelected)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrl_setFirstSelected"), typeof(wle_fnGuiPopUpMenuCtrl_setFirstSelected));
mwle_fnGuiPopUpMenuCtrl_setNoneSelected= (wle_fnGuiPopUpMenuCtrl_setNoneSelected)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrl_setNoneSelected"), typeof(wle_fnGuiPopUpMenuCtrl_setNoneSelected));
mwle_fnGuiPopUpMenuCtrl_getTextById= (wle_fnGuiPopUpMenuCtrl_getTextById)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrl_getTextById"), typeof(wle_fnGuiPopUpMenuCtrl_getTextById));
mwle_fnGuiPopUpMenuCtrl_changeTextById= (wle_fnGuiPopUpMenuCtrl_changeTextById)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrl_changeTextById"), typeof(wle_fnGuiPopUpMenuCtrl_changeTextById));
mwle_fnGuiPopUpMenuCtrl_setEnumContent= (wle_fnGuiPopUpMenuCtrl_setEnumContent)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrl_setEnumContent"), typeof(wle_fnGuiPopUpMenuCtrl_setEnumContent));
mwle_fnGuiPopUpMenuCtrl_findText= (wle_fnGuiPopUpMenuCtrl_findText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrl_findText"), typeof(wle_fnGuiPopUpMenuCtrl_findText));
mwle_fnGuiPopUpMenuCtrl_size= (wle_fnGuiPopUpMenuCtrl_size)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrl_size"), typeof(wle_fnGuiPopUpMenuCtrl_size));
mwle_fnGuiPopUpMenuCtrl_replaceText= (wle_fnGuiPopUpMenuCtrl_replaceText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrl_replaceText"), typeof(wle_fnGuiPopUpMenuCtrl_replaceText));
mwle_fnGuiPopUpMenuCtrl_clearEntry= (wle_fnGuiPopUpMenuCtrl_clearEntry)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrl_clearEntry"), typeof(wle_fnGuiPopUpMenuCtrl_clearEntry));
mwle_fnGuiPopUpMenuCtrlEx_add= (wle_fnGuiPopUpMenuCtrlEx_add)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrlEx_add"), typeof(wle_fnGuiPopUpMenuCtrlEx_add));
mwle_fnGuiPopUpMenuCtrlEx_setSelected= (wle_fnGuiPopUpMenuCtrlEx_setSelected)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrlEx_setSelected"), typeof(wle_fnGuiPopUpMenuCtrlEx_setSelected));
mwle_fnGuiPopUpMenuCtrlEx_setFirstSelected= (wle_fnGuiPopUpMenuCtrlEx_setFirstSelected)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrlEx_setFirstSelected"), typeof(wle_fnGuiPopUpMenuCtrlEx_setFirstSelected));
mwle_fnGuiPopUpMenuCtrlEx_getColorById= (wle_fnGuiPopUpMenuCtrlEx_getColorById)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrlEx_getColorById"), typeof(wle_fnGuiPopUpMenuCtrlEx_getColorById));
mwle_fnGuiPopUpMenuCtrlEx_setEnumContent= (wle_fnGuiPopUpMenuCtrlEx_setEnumContent)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrlEx_setEnumContent"), typeof(wle_fnGuiPopUpMenuCtrlEx_setEnumContent));
mwle_fnGuiPopUpMenuCtrlEx_findText= (wle_fnGuiPopUpMenuCtrlEx_findText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrlEx_findText"), typeof(wle_fnGuiPopUpMenuCtrlEx_findText));
mwle_fnGuiPopUpMenuCtrlEx_size= (wle_fnGuiPopUpMenuCtrlEx_size)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrlEx_size"), typeof(wle_fnGuiPopUpMenuCtrlEx_size));
mwle_fnGuiPopUpMenuCtrlEx_replaceText= (wle_fnGuiPopUpMenuCtrlEx_replaceText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrlEx_replaceText"), typeof(wle_fnGuiPopUpMenuCtrlEx_replaceText));
mwle_fnGuiPopUpMenuCtrlEx_clearEntry= (wle_fnGuiPopUpMenuCtrlEx_clearEntry)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrlEx_clearEntry"), typeof(wle_fnGuiPopUpMenuCtrlEx_clearEntry));
mwle_fnGuiPopUpMenuCtrlEx_addCategory= (wle_fnGuiPopUpMenuCtrlEx_addCategory)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrlEx_addCategory"), typeof(wle_fnGuiPopUpMenuCtrlEx_addCategory));
mwle_fnGuiPopUpMenuCtrlEx_addScheme= (wle_fnGuiPopUpMenuCtrlEx_addScheme)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrlEx_addScheme"), typeof(wle_fnGuiPopUpMenuCtrlEx_addScheme));
mwle_fnGuiPopUpMenuCtrlEx_setText= (wle_fnGuiPopUpMenuCtrlEx_setText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrlEx_setText"), typeof(wle_fnGuiPopUpMenuCtrlEx_setText));
mwle_fnGuiPopUpMenuCtrlEx_getText= (wle_fnGuiPopUpMenuCtrlEx_getText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrlEx_getText"), typeof(wle_fnGuiPopUpMenuCtrlEx_getText));
mwle_fnGuiPopUpMenuCtrlEx_clear= (wle_fnGuiPopUpMenuCtrlEx_clear)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrlEx_clear"), typeof(wle_fnGuiPopUpMenuCtrlEx_clear));
mwle_fnGuiPopUpMenuCtrlEx_sort= (wle_fnGuiPopUpMenuCtrlEx_sort)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrlEx_sort"), typeof(wle_fnGuiPopUpMenuCtrlEx_sort));
mwle_fnGuiPopUpMenuCtrlEx_sortID= (wle_fnGuiPopUpMenuCtrlEx_sortID)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrlEx_sortID"), typeof(wle_fnGuiPopUpMenuCtrlEx_sortID));
mwle_fnGuiPopUpMenuCtrlEx_forceOnAction= (wle_fnGuiPopUpMenuCtrlEx_forceOnAction)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrlEx_forceOnAction"), typeof(wle_fnGuiPopUpMenuCtrlEx_forceOnAction));
mwle_fnGuiPopUpMenuCtrlEx_forceClose= (wle_fnGuiPopUpMenuCtrlEx_forceClose)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrlEx_forceClose"), typeof(wle_fnGuiPopUpMenuCtrlEx_forceClose));
mwle_fnGuiPopUpMenuCtrlEx_getSelected= (wle_fnGuiPopUpMenuCtrlEx_getSelected)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrlEx_getSelected"), typeof(wle_fnGuiPopUpMenuCtrlEx_getSelected));
mwle_fnGuiPopUpMenuCtrlEx_setNoneSelected= (wle_fnGuiPopUpMenuCtrlEx_setNoneSelected)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrlEx_setNoneSelected"), typeof(wle_fnGuiPopUpMenuCtrlEx_setNoneSelected));
mwle_fnGuiPopUpMenuCtrlEx_getTextById= (wle_fnGuiPopUpMenuCtrlEx_getTextById)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiPopUpMenuCtrlEx_getTextById"), typeof(wle_fnGuiPopUpMenuCtrlEx_getTextById));
mwle_fnGuiSliderCtrl_getValue= (wle_fnGuiSliderCtrl_getValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiSliderCtrl_getValue"), typeof(wle_fnGuiSliderCtrl_getValue));
mwle_fnGuiSliderCtrl_setValue= (wle_fnGuiSliderCtrl_setValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiSliderCtrl_setValue"), typeof(wle_fnGuiSliderCtrl_setValue));
mwle_fnGuiSliderCtrl_isThumbBeingDragged= (wle_fnGuiSliderCtrl_isThumbBeingDragged)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiSliderCtrl_isThumbBeingDragged"), typeof(wle_fnGuiSliderCtrl_isThumbBeingDragged));
mwle_fnGuiTabPageCtrl_select= (wle_fnGuiTabPageCtrl_select)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTabPageCtrl_select"), typeof(wle_fnGuiTabPageCtrl_select));
mwle_fnGuiTextCtrl_setText= (wle_fnGuiTextCtrl_setText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextCtrl_setText"), typeof(wle_fnGuiTextCtrl_setText));
mwle_fnGuiTextCtrl_setTextID= (wle_fnGuiTextCtrl_setTextID)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextCtrl_setTextID"), typeof(wle_fnGuiTextCtrl_setTextID));
mwle_fnGuiTextEditCtrl_getText= (wle_fnGuiTextEditCtrl_getText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextEditCtrl_getText"), typeof(wle_fnGuiTextEditCtrl_getText));
mwle_fnGuiTextEditCtrl_setText= (wle_fnGuiTextEditCtrl_setText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextEditCtrl_setText"), typeof(wle_fnGuiTextEditCtrl_setText));
mwle_fnGuiTextEditCtrl_getCursorPos= (wle_fnGuiTextEditCtrl_getCursorPos)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextEditCtrl_getCursorPos"), typeof(wle_fnGuiTextEditCtrl_getCursorPos));
mwle_fnGuiTextEditCtrl_setCursorPos= (wle_fnGuiTextEditCtrl_setCursorPos)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextEditCtrl_setCursorPos"), typeof(wle_fnGuiTextEditCtrl_setCursorPos));
mwle_fnGuiTextEditCtrl_isAllTextSelected= (wle_fnGuiTextEditCtrl_isAllTextSelected)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextEditCtrl_isAllTextSelected"), typeof(wle_fnGuiTextEditCtrl_isAllTextSelected));
mwle_fnGuiTextEditCtrl_selectAllText= (wle_fnGuiTextEditCtrl_selectAllText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextEditCtrl_selectAllText"), typeof(wle_fnGuiTextEditCtrl_selectAllText));
mwle_fnGuiTextEditCtrl_clearSelectedText= (wle_fnGuiTextEditCtrl_clearSelectedText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextEditCtrl_clearSelectedText"), typeof(wle_fnGuiTextEditCtrl_clearSelectedText));
mwle_fnGuiTextEditCtrl_forceValidateText= (wle_fnGuiTextEditCtrl_forceValidateText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextEditCtrl_forceValidateText"), typeof(wle_fnGuiTextEditCtrl_forceValidateText));
mwle_fnGuiTextListCtrl_getSelectedId= (wle_fnGuiTextListCtrl_getSelectedId)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextListCtrl_getSelectedId"), typeof(wle_fnGuiTextListCtrl_getSelectedId));
mwle_fnGuiTextListCtrl_setSelectedById= (wle_fnGuiTextListCtrl_setSelectedById)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextListCtrl_setSelectedById"), typeof(wle_fnGuiTextListCtrl_setSelectedById));
mwle_fnGuiTextListCtrl_setSelectedRow= (wle_fnGuiTextListCtrl_setSelectedRow)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextListCtrl_setSelectedRow"), typeof(wle_fnGuiTextListCtrl_setSelectedRow));
mwle_fnGuiTextListCtrl_getSelectedRow= (wle_fnGuiTextListCtrl_getSelectedRow)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextListCtrl_getSelectedRow"), typeof(wle_fnGuiTextListCtrl_getSelectedRow));
mwle_fnGuiTextListCtrl_clearSelection= (wle_fnGuiTextListCtrl_clearSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextListCtrl_clearSelection"), typeof(wle_fnGuiTextListCtrl_clearSelection));
mwle_fnGuiTextListCtrl_addRow= (wle_fnGuiTextListCtrl_addRow)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextListCtrl_addRow"), typeof(wle_fnGuiTextListCtrl_addRow));
mwle_fnGuiTextListCtrl_setRowById= (wle_fnGuiTextListCtrl_setRowById)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextListCtrl_setRowById"), typeof(wle_fnGuiTextListCtrl_setRowById));
mwle_fnGuiTextListCtrl_sort= (wle_fnGuiTextListCtrl_sort)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextListCtrl_sort"), typeof(wle_fnGuiTextListCtrl_sort));
mwle_fnGuiTextListCtrl_sortNumerical= (wle_fnGuiTextListCtrl_sortNumerical)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextListCtrl_sortNumerical"), typeof(wle_fnGuiTextListCtrl_sortNumerical));
mwle_fnGuiTextListCtrl_clear= (wle_fnGuiTextListCtrl_clear)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextListCtrl_clear"), typeof(wle_fnGuiTextListCtrl_clear));
mwle_fnGuiTextListCtrl_rowCount= (wle_fnGuiTextListCtrl_rowCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextListCtrl_rowCount"), typeof(wle_fnGuiTextListCtrl_rowCount));
mwle_fnGuiTextListCtrl_getRowId= (wle_fnGuiTextListCtrl_getRowId)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextListCtrl_getRowId"), typeof(wle_fnGuiTextListCtrl_getRowId));
mwle_fnGuiTextListCtrl_getRowTextById= (wle_fnGuiTextListCtrl_getRowTextById)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextListCtrl_getRowTextById"), typeof(wle_fnGuiTextListCtrl_getRowTextById));
mwle_fnGuiTextListCtrl_getRowNumById= (wle_fnGuiTextListCtrl_getRowNumById)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextListCtrl_getRowNumById"), typeof(wle_fnGuiTextListCtrl_getRowNumById));
mwle_fnGuiTextListCtrl_getRowText= (wle_fnGuiTextListCtrl_getRowText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextListCtrl_getRowText"), typeof(wle_fnGuiTextListCtrl_getRowText));
mwle_fnGuiTextListCtrl_removeRowById= (wle_fnGuiTextListCtrl_removeRowById)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextListCtrl_removeRowById"), typeof(wle_fnGuiTextListCtrl_removeRowById));
mwle_fnGuiTextListCtrl_removeRow= (wle_fnGuiTextListCtrl_removeRow)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextListCtrl_removeRow"), typeof(wle_fnGuiTextListCtrl_removeRow));
mwle_fnGuiTextListCtrl_scrollVisible= (wle_fnGuiTextListCtrl_scrollVisible)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextListCtrl_scrollVisible"), typeof(wle_fnGuiTextListCtrl_scrollVisible));
mwle_fnGuiTextListCtrl_findTextIndex= (wle_fnGuiTextListCtrl_findTextIndex)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextListCtrl_findTextIndex"), typeof(wle_fnGuiTextListCtrl_findTextIndex));
mwle_fnGuiTextListCtrl_setRowActive= (wle_fnGuiTextListCtrl_setRowActive)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextListCtrl_setRowActive"), typeof(wle_fnGuiTextListCtrl_setRowActive));
mwle_fnGuiTextListCtrl_isRowActive= (wle_fnGuiTextListCtrl_isRowActive)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTextListCtrl_isRowActive"), typeof(wle_fnGuiTextListCtrl_isRowActive));
mwle_fnGuiTreeViewCtrl_addChildSelectionByValue= (wle_fnGuiTreeViewCtrl_addChildSelectionByValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_addChildSelectionByValue"), typeof(wle_fnGuiTreeViewCtrl_addChildSelectionByValue));
mwle_fnGuiTreeViewCtrl_removeSelection= (wle_fnGuiTreeViewCtrl_removeSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_removeSelection"), typeof(wle_fnGuiTreeViewCtrl_removeSelection));
mwle_fnGuiTreeViewCtrl_removeChildSelectionByValue= (wle_fnGuiTreeViewCtrl_removeChildSelectionByValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_removeChildSelectionByValue"), typeof(wle_fnGuiTreeViewCtrl_removeChildSelectionByValue));
mwle_fnGuiTreeViewCtrl_selectItem= (wle_fnGuiTreeViewCtrl_selectItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_selectItem"), typeof(wle_fnGuiTreeViewCtrl_selectItem));
mwle_fnGuiTreeViewCtrl_expandItem= (wle_fnGuiTreeViewCtrl_expandItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_expandItem"), typeof(wle_fnGuiTreeViewCtrl_expandItem));
mwle_fnGuiTreeViewCtrl_markItem= (wle_fnGuiTreeViewCtrl_markItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_markItem"), typeof(wle_fnGuiTreeViewCtrl_markItem));
mwle_fnGuiTreeViewCtrl_scrollVisible= (wle_fnGuiTreeViewCtrl_scrollVisible)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_scrollVisible"), typeof(wle_fnGuiTreeViewCtrl_scrollVisible));
mwle_fnGuiTreeViewCtrl_buildIconTable= (wle_fnGuiTreeViewCtrl_buildIconTable)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_buildIconTable"), typeof(wle_fnGuiTreeViewCtrl_buildIconTable));
mwle_fnGuiTreeViewCtrl_open= (wle_fnGuiTreeViewCtrl_open)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_open"), typeof(wle_fnGuiTreeViewCtrl_open));
mwle_fnGuiTreeViewCtrl_setItemTooltip= (wle_fnGuiTreeViewCtrl_setItemTooltip)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_setItemTooltip"), typeof(wle_fnGuiTreeViewCtrl_setItemTooltip));
mwle_fnGuiTreeViewCtrl_setItemImages= (wle_fnGuiTreeViewCtrl_setItemImages)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_setItemImages"), typeof(wle_fnGuiTreeViewCtrl_setItemImages));
mwle_fnGuiTreeViewCtrl_isParentItem= (wle_fnGuiTreeViewCtrl_isParentItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_isParentItem"), typeof(wle_fnGuiTreeViewCtrl_isParentItem));
mwle_fnGuiTreeViewCtrl_getItemText= (wle_fnGuiTreeViewCtrl_getItemText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_getItemText"), typeof(wle_fnGuiTreeViewCtrl_getItemText));
mwle_fnGuiTreeViewCtrl_getItemValue= (wle_fnGuiTreeViewCtrl_getItemValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_getItemValue"), typeof(wle_fnGuiTreeViewCtrl_getItemValue));
mwle_fnGuiTreeViewCtrl_editItem= (wle_fnGuiTreeViewCtrl_editItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_editItem"), typeof(wle_fnGuiTreeViewCtrl_editItem));
mwle_fnGuiTreeViewCtrl_removeItem= (wle_fnGuiTreeViewCtrl_removeItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_removeItem"), typeof(wle_fnGuiTreeViewCtrl_removeItem));
mwle_fnGuiTreeViewCtrl_removeAllChildren= (wle_fnGuiTreeViewCtrl_removeAllChildren)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_removeAllChildren"), typeof(wle_fnGuiTreeViewCtrl_removeAllChildren));
mwle_fnGuiTreeViewCtrl_clear= (wle_fnGuiTreeViewCtrl_clear)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_clear"), typeof(wle_fnGuiTreeViewCtrl_clear));
mwle_fnGuiTreeViewCtrl_getFirstRootItem= (wle_fnGuiTreeViewCtrl_getFirstRootItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_getFirstRootItem"), typeof(wle_fnGuiTreeViewCtrl_getFirstRootItem));
mwle_fnGuiTreeViewCtrl_getChild= (wle_fnGuiTreeViewCtrl_getChild)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_getChild"), typeof(wle_fnGuiTreeViewCtrl_getChild));
mwle_fnGuiTreeViewCtrl_buildVisibleTree= (wle_fnGuiTreeViewCtrl_buildVisibleTree)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_buildVisibleTree"), typeof(wle_fnGuiTreeViewCtrl_buildVisibleTree));
mwle_fnGuiTreeViewCtrl_getParent= (wle_fnGuiTreeViewCtrl_getParent)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_getParent"), typeof(wle_fnGuiTreeViewCtrl_getParent));
mwle_fnGuiTreeViewCtrl_getNextSibling= (wle_fnGuiTreeViewCtrl_getNextSibling)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_getNextSibling"), typeof(wle_fnGuiTreeViewCtrl_getNextSibling));
mwle_fnGuiTreeViewCtrl_getPrevSibling= (wle_fnGuiTreeViewCtrl_getPrevSibling)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_getPrevSibling"), typeof(wle_fnGuiTreeViewCtrl_getPrevSibling));
mwle_fnGuiTreeViewCtrl_getItemCount= (wle_fnGuiTreeViewCtrl_getItemCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_getItemCount"), typeof(wle_fnGuiTreeViewCtrl_getItemCount));
mwle_fnGuiTreeViewCtrl_getSelectedItem= (wle_fnGuiTreeViewCtrl_getSelectedItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_getSelectedItem"), typeof(wle_fnGuiTreeViewCtrl_getSelectedItem));
mwle_fnGuiTreeViewCtrl_getSelectedObject= (wle_fnGuiTreeViewCtrl_getSelectedObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_getSelectedObject"), typeof(wle_fnGuiTreeViewCtrl_getSelectedObject));
mwle_fnGuiTreeViewCtrl_getSelectedObjectList= (wle_fnGuiTreeViewCtrl_getSelectedObjectList)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_getSelectedObjectList"), typeof(wle_fnGuiTreeViewCtrl_getSelectedObjectList));
mwle_fnGuiTreeViewCtrl_moveItemUp= (wle_fnGuiTreeViewCtrl_moveItemUp)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_moveItemUp"), typeof(wle_fnGuiTreeViewCtrl_moveItemUp));
mwle_fnGuiTreeViewCtrl_getSelectedItemsCount= (wle_fnGuiTreeViewCtrl_getSelectedItemsCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_getSelectedItemsCount"), typeof(wle_fnGuiTreeViewCtrl_getSelectedItemsCount));
mwle_fnGuiTreeViewCtrl_moveItemDown= (wle_fnGuiTreeViewCtrl_moveItemDown)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_moveItemDown"), typeof(wle_fnGuiTreeViewCtrl_moveItemDown));
mwle_fnGuiTreeViewCtrl_getTextToRoot= (wle_fnGuiTreeViewCtrl_getTextToRoot)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_getTextToRoot"), typeof(wle_fnGuiTreeViewCtrl_getTextToRoot));
mwle_fnGuiTreeViewCtrl_getSelectedItemList= (wle_fnGuiTreeViewCtrl_getSelectedItemList)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_getSelectedItemList"), typeof(wle_fnGuiTreeViewCtrl_getSelectedItemList));
mwle_fnGuiTreeViewCtrl_findItemByObjectId= (wle_fnGuiTreeViewCtrl_findItemByObjectId)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_findItemByObjectId"), typeof(wle_fnGuiTreeViewCtrl_findItemByObjectId));
mwle_fnGuiTreeViewCtrl_scrollVisibleByObjectId= (wle_fnGuiTreeViewCtrl_scrollVisibleByObjectId)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_scrollVisibleByObjectId"), typeof(wle_fnGuiTreeViewCtrl_scrollVisibleByObjectId));
mwle_fnGuiTreeViewCtrl_sort= (wle_fnGuiTreeViewCtrl_sort)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_sort"), typeof(wle_fnGuiTreeViewCtrl_sort));
mwle_fnGuiTreeViewCtrl_cancelRename= (wle_fnGuiTreeViewCtrl_cancelRename)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_cancelRename"), typeof(wle_fnGuiTreeViewCtrl_cancelRename));
mwle_fnGuiTreeViewCtrl_onRenameValidate= (wle_fnGuiTreeViewCtrl_onRenameValidate)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_onRenameValidate"), typeof(wle_fnGuiTreeViewCtrl_onRenameValidate));
mwle_fnGuiTreeViewCtrl_showItemRenameCtrl= (wle_fnGuiTreeViewCtrl_showItemRenameCtrl)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_showItemRenameCtrl"), typeof(wle_fnGuiTreeViewCtrl_showItemRenameCtrl));
mwle_fnGuiTreeViewCtrl_setDebug= (wle_fnGuiTreeViewCtrl_setDebug)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_setDebug"), typeof(wle_fnGuiTreeViewCtrl_setDebug));
mwle_fnGuiTreeViewCtrl_findItemByName= (wle_fnGuiTreeViewCtrl_findItemByName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_findItemByName"), typeof(wle_fnGuiTreeViewCtrl_findItemByName));
mwle_fnGuiTreeViewCtrl_findItemByValue= (wle_fnGuiTreeViewCtrl_findItemByValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_findItemByValue"), typeof(wle_fnGuiTreeViewCtrl_findItemByValue));
mwle_fnGuiTreeViewCtrl_findChildItemByName= (wle_fnGuiTreeViewCtrl_findChildItemByName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_findChildItemByName"), typeof(wle_fnGuiTreeViewCtrl_findChildItemByName));
mwle_fnGuiTreeViewCtrl_insertItem= (wle_fnGuiTreeViewCtrl_insertItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_insertItem"), typeof(wle_fnGuiTreeViewCtrl_insertItem));
mwle_fnGuiTreeViewCtrl_lockSelection= (wle_fnGuiTreeViewCtrl_lockSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_lockSelection"), typeof(wle_fnGuiTreeViewCtrl_lockSelection));
mwle_fnGuiTreeViewCtrl_hideSelection= (wle_fnGuiTreeViewCtrl_hideSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_hideSelection"), typeof(wle_fnGuiTreeViewCtrl_hideSelection));
mwle_fnGuiTreeViewCtrl_toggleLockSelection= (wle_fnGuiTreeViewCtrl_toggleLockSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_toggleLockSelection"), typeof(wle_fnGuiTreeViewCtrl_toggleLockSelection));
mwle_fnGuiTreeViewCtrl_toggleHideSelection= (wle_fnGuiTreeViewCtrl_toggleHideSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_toggleHideSelection"), typeof(wle_fnGuiTreeViewCtrl_toggleHideSelection));
mwle_fnGuiTreeViewCtrl_clearSelection= (wle_fnGuiTreeViewCtrl_clearSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_clearSelection"), typeof(wle_fnGuiTreeViewCtrl_clearSelection));
mwle_fnGuiTreeViewCtrl_deleteSelection= (wle_fnGuiTreeViewCtrl_deleteSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_deleteSelection"), typeof(wle_fnGuiTreeViewCtrl_deleteSelection));
mwle_fnGuiTreeViewCtrl_addSelection= (wle_fnGuiTreeViewCtrl_addSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_addSelection"), typeof(wle_fnGuiTreeViewCtrl_addSelection));
mwle_fnGuiTreeViewCtrl_isItemSelected= (wle_fnGuiTreeViewCtrl_isItemSelected)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_isItemSelected"), typeof(wle_fnGuiTreeViewCtrl_isItemSelected));
mwle_fnGuiTreeViewCtrl_getFilterText= (wle_fnGuiTreeViewCtrl_getFilterText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_getFilterText"), typeof(wle_fnGuiTreeViewCtrl_getFilterText));
mwle_fnGuiTreeViewCtrl_setFilterText= (wle_fnGuiTreeViewCtrl_setFilterText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_setFilterText"), typeof(wle_fnGuiTreeViewCtrl_setFilterText));
mwle_fnGuiTreeViewCtrl_clearFilterText= (wle_fnGuiTreeViewCtrl_clearFilterText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTreeViewCtrl_clearFilterText"), typeof(wle_fnGuiTreeViewCtrl_clearFilterText));
mwle_fnGuiCanvas_pushDialog= (wle_fnGuiCanvas_pushDialog)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_pushDialog"), typeof(wle_fnGuiCanvas_pushDialog));
mwle_fnGuiCanvas_popDialog= (wle_fnGuiCanvas_popDialog)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_popDialog"), typeof(wle_fnGuiCanvas_popDialog));
mwle_fnGuiCanvas_popLayer= (wle_fnGuiCanvas_popLayer)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_popLayer"), typeof(wle_fnGuiCanvas_popLayer));
mwle_fnGuiCanvas_setCursorPos= (wle_fnGuiCanvas_setCursorPos)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_setCursorPos"), typeof(wle_fnGuiCanvas_setCursorPos));
mwle_fnGuiCanvas_isFullscreen= (wle_fnGuiCanvas_isFullscreen)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_isFullscreen"), typeof(wle_fnGuiCanvas_isFullscreen));
mwle_fnGuiCanvas_minimizeWindow= (wle_fnGuiCanvas_minimizeWindow)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_minimizeWindow"), typeof(wle_fnGuiCanvas_minimizeWindow));
mwle_fnGuiCanvas_isMinimized= (wle_fnGuiCanvas_isMinimized)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_isMinimized"), typeof(wle_fnGuiCanvas_isMinimized));
mwle_fnGuiCanvas_isMaximized= (wle_fnGuiCanvas_isMaximized)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_isMaximized"), typeof(wle_fnGuiCanvas_isMaximized));
mwle_fnGuiCanvas_maximizeWindow= (wle_fnGuiCanvas_maximizeWindow)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_maximizeWindow"), typeof(wle_fnGuiCanvas_maximizeWindow));
mwle_fnGuiCanvas_restoreWindow= (wle_fnGuiCanvas_restoreWindow)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_restoreWindow"), typeof(wle_fnGuiCanvas_restoreWindow));
mwle_fnGuiCanvas_setFocus= (wle_fnGuiCanvas_setFocus)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_setFocus"), typeof(wle_fnGuiCanvas_setFocus));
mwle_fnGuiCanvas_setVideoMode= (wle_fnGuiCanvas_setVideoMode)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_setVideoMode"), typeof(wle_fnGuiCanvas_setVideoMode));
mwle_fn_excludeOtherInstance= (wle_fn_excludeOtherInstance)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_excludeOtherInstance"), typeof(wle_fn_excludeOtherInstance));
mwle_fnGuiCanvas_getContent= (wle_fnGuiCanvas_getContent)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_getContent"), typeof(wle_fnGuiCanvas_getContent));
mwle_fnGuiCanvas_setContent= (wle_fnGuiCanvas_setContent)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_setContent"), typeof(wle_fnGuiCanvas_setContent));
mwle_fnGuiCanvas_cursorOn= (wle_fnGuiCanvas_cursorOn)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_cursorOn"), typeof(wle_fnGuiCanvas_cursorOn));
mwle_fnGuiCanvas_cursorOff= (wle_fnGuiCanvas_cursorOff)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_cursorOff"), typeof(wle_fnGuiCanvas_cursorOff));
mwle_fnGuiCanvas_setCursor= (wle_fnGuiCanvas_setCursor)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_setCursor"), typeof(wle_fnGuiCanvas_setCursor));
mwle_fnGuiCanvas_renderFront= (wle_fnGuiCanvas_renderFront)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_renderFront"), typeof(wle_fnGuiCanvas_renderFront));
mwle_fnGuiCanvas_showCursor= (wle_fnGuiCanvas_showCursor)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_showCursor"), typeof(wle_fnGuiCanvas_showCursor));
mwle_fnGuiCanvas_hideCursor= (wle_fnGuiCanvas_hideCursor)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_hideCursor"), typeof(wle_fnGuiCanvas_hideCursor));
mwle_fnGuiCanvas_isCursorOn= (wle_fnGuiCanvas_isCursorOn)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_isCursorOn"), typeof(wle_fnGuiCanvas_isCursorOn));
mwle_fnGuiCanvas_isCursorShown= (wle_fnGuiCanvas_isCursorShown)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_isCursorShown"), typeof(wle_fnGuiCanvas_isCursorShown));
mwle_fnGuiCanvas_repaint= (wle_fnGuiCanvas_repaint)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_repaint"), typeof(wle_fnGuiCanvas_repaint));
mwle_fnGuiCanvas_reset= (wle_fnGuiCanvas_reset)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_reset"), typeof(wle_fnGuiCanvas_reset));
mwle_fnGuiCanvas_getCursorPos= (wle_fnGuiCanvas_getCursorPos)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_getCursorPos"), typeof(wle_fnGuiCanvas_getCursorPos));
mwle_fnGuiCanvas_getMouseControl= (wle_fnGuiCanvas_getMouseControl)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_getMouseControl"), typeof(wle_fnGuiCanvas_getMouseControl));
mwle_fnGuiCanvas_getExtent= (wle_fnGuiCanvas_getExtent)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_getExtent"), typeof(wle_fnGuiCanvas_getExtent));
mwle_fnGuiCanvas_setWindowTitle= (wle_fnGuiCanvas_setWindowTitle)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_setWindowTitle"), typeof(wle_fnGuiCanvas_setWindowTitle));
mwle_fnGuiCanvas_getVideoMode= (wle_fnGuiCanvas_getVideoMode)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_getVideoMode"), typeof(wle_fnGuiCanvas_getVideoMode));
mwle_fnGuiCanvas_getModeCount= (wle_fnGuiCanvas_getModeCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_getModeCount"), typeof(wle_fnGuiCanvas_getModeCount));
mwle_fnGuiCanvas_getMode= (wle_fnGuiCanvas_getMode)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_getMode"), typeof(wle_fnGuiCanvas_getMode));
mwle_fnGuiCanvas_toggleFullscreen= (wle_fnGuiCanvas_toggleFullscreen)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_toggleFullscreen"), typeof(wle_fnGuiCanvas_toggleFullscreen));
mwle_fnGuiCanvas_clientToScreen= (wle_fnGuiCanvas_clientToScreen)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_clientToScreen"), typeof(wle_fnGuiCanvas_clientToScreen));
mwle_fnGuiCanvas_screenToClient= (wle_fnGuiCanvas_screenToClient)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_screenToClient"), typeof(wle_fnGuiCanvas_screenToClient));
mwle_fnGuiCanvas_getWindowPosition= (wle_fnGuiCanvas_getWindowPosition)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_getWindowPosition"), typeof(wle_fnGuiCanvas_getWindowPosition));
mwle_fnGuiCanvas_setWindowPosition= (wle_fnGuiCanvas_setWindowPosition)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiCanvas_setWindowPosition"), typeof(wle_fnGuiCanvas_setWindowPosition));
mwle_fnGuiControl_getValue= (wle_fnGuiControl_getValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_getValue"), typeof(wle_fnGuiControl_getValue));
mwle_fnGuiControl_makeFirstResponder= (wle_fnGuiControl_makeFirstResponder)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_makeFirstResponder"), typeof(wle_fnGuiControl_makeFirstResponder));
mwle_fnGuiControl_isActive= (wle_fnGuiControl_isActive)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_isActive"), typeof(wle_fnGuiControl_isActive));
mwle_fnGuiControl_setExtent= (wle_fnGuiControl_setExtent)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_setExtent"), typeof(wle_fnGuiControl_setExtent));
mwle_fnGuiControl_findHitControl= (wle_fnGuiControl_findHitControl)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_findHitControl"), typeof(wle_fnGuiControl_findHitControl));
mwle_fnGuiControl_findHitControls= (wle_fnGuiControl_findHitControls)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_findHitControls"), typeof(wle_fnGuiControl_findHitControls));
mwle_fnGuiControl_controlIsChild= (wle_fnGuiControl_controlIsChild)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_controlIsChild"), typeof(wle_fnGuiControl_controlIsChild));
mwle_fnGuiControl_isFirstResponder= (wle_fnGuiControl_isFirstResponder)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_isFirstResponder"), typeof(wle_fnGuiControl_isFirstResponder));
mwle_fnGuiControl_setFirstResponder= (wle_fnGuiControl_setFirstResponder)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_setFirstResponder"), typeof(wle_fnGuiControl_setFirstResponder));
mwle_fnGuiControl_getFirstResponder= (wle_fnGuiControl_getFirstResponder)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_getFirstResponder"), typeof(wle_fnGuiControl_getFirstResponder));
mwle_fnGuiControl_clearFirstResponder= (wle_fnGuiControl_clearFirstResponder)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_clearFirstResponder"), typeof(wle_fnGuiControl_clearFirstResponder));
mwle_fnGuiControl_pointInControl= (wle_fnGuiControl_pointInControl)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_pointInControl"), typeof(wle_fnGuiControl_pointInControl));
mwle_fnGuiControl_addGuiControl= (wle_fnGuiControl_addGuiControl)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_addGuiControl"), typeof(wle_fnGuiControl_addGuiControl));
mwle_fnGuiControl_getRoot= (wle_fnGuiControl_getRoot)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_getRoot"), typeof(wle_fnGuiControl_getRoot));
mwle_fnGuiControl_getParent= (wle_fnGuiControl_getParent)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_getParent"), typeof(wle_fnGuiControl_getParent));
mwle_fnGuiControl_isMouseLocked= (wle_fnGuiControl_isMouseLocked)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_isMouseLocked"), typeof(wle_fnGuiControl_isMouseLocked));
mwle_fnGuiControl_setValue= (wle_fnGuiControl_setValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_setValue"), typeof(wle_fnGuiControl_setValue));
mwle_fnGuiControl_setActive= (wle_fnGuiControl_setActive)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_setActive"), typeof(wle_fnGuiControl_setActive));
mwle_fnGuiControl_isVisible= (wle_fnGuiControl_isVisible)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_isVisible"), typeof(wle_fnGuiControl_isVisible));
mwle_fnGuiControl_setVisible= (wle_fnGuiControl_setVisible)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_setVisible"), typeof(wle_fnGuiControl_setVisible));
mwle_fnGuiControl_isAwake= (wle_fnGuiControl_isAwake)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_isAwake"), typeof(wle_fnGuiControl_isAwake));
mwle_fnGuiControl_setProfile= (wle_fnGuiControl_setProfile)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_setProfile"), typeof(wle_fnGuiControl_setProfile));
mwle_fnGuiControl_resize= (wle_fnGuiControl_resize)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_resize"), typeof(wle_fnGuiControl_resize));
mwle_fnGuiControl_getPosition= (wle_fnGuiControl_getPosition)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_getPosition"), typeof(wle_fnGuiControl_getPosition));
mwle_fnGuiControl_getCenter= (wle_fnGuiControl_getCenter)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_getCenter"), typeof(wle_fnGuiControl_getCenter));
mwle_fnGuiControl_setCenter= (wle_fnGuiControl_setCenter)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_setCenter"), typeof(wle_fnGuiControl_setCenter));
mwle_fnGuiControl_getGlobalCenter= (wle_fnGuiControl_getGlobalCenter)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_getGlobalCenter"), typeof(wle_fnGuiControl_getGlobalCenter));
mwle_fnGuiControl_getGlobalPosition= (wle_fnGuiControl_getGlobalPosition)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_getGlobalPosition"), typeof(wle_fnGuiControl_getGlobalPosition));
mwle_fnGuiControl_setPositionGlobal= (wle_fnGuiControl_setPositionGlobal)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_setPositionGlobal"), typeof(wle_fnGuiControl_setPositionGlobal));
mwle_fnGuiControl_setPosition= (wle_fnGuiControl_setPosition)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_setPosition"), typeof(wle_fnGuiControl_setPosition));
mwle_fnGuiControl_getExtent= (wle_fnGuiControl_getExtent)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_getExtent"), typeof(wle_fnGuiControl_getExtent));
mwle_fnGuiControl_getMinExtent= (wle_fnGuiControl_getMinExtent)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_getMinExtent"), typeof(wle_fnGuiControl_getMinExtent));
mwle_fnGuiControl_getAspect= (wle_fnGuiControl_getAspect)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControl_getAspect"), typeof(wle_fnGuiControl_getAspect));
mwle_fnGuiControlProfile_getStringWidth= (wle_fnGuiControlProfile_getStringWidth)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiControlProfile_getStringWidth"), typeof(wle_fnGuiControlProfile_getStringWidth));
mwle_fnDbgFileView_setCurrentLine= (wle_fnDbgFileView_setCurrentLine)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnDbgFileView_setCurrentLine"), typeof(wle_fnDbgFileView_setCurrentLine));
mwle_fnDbgFileView_getCurrentLine= (wle_fnDbgFileView_getCurrentLine)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnDbgFileView_getCurrentLine"), typeof(wle_fnDbgFileView_getCurrentLine));
mwle_fnDbgFileView_open= (wle_fnDbgFileView_open)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnDbgFileView_open"), typeof(wle_fnDbgFileView_open));
mwle_fnDbgFileView_clearBreakPositions= (wle_fnDbgFileView_clearBreakPositions)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnDbgFileView_clearBreakPositions"), typeof(wle_fnDbgFileView_clearBreakPositions));
mwle_fnDbgFileView_setBreakPosition= (wle_fnDbgFileView_setBreakPosition)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnDbgFileView_setBreakPosition"), typeof(wle_fnDbgFileView_setBreakPosition));
mwle_fnDbgFileView_setBreak= (wle_fnDbgFileView_setBreak)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnDbgFileView_setBreak"), typeof(wle_fnDbgFileView_setBreak));
mwle_fnDbgFileView_removeBreak= (wle_fnDbgFileView_removeBreak)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnDbgFileView_removeBreak"), typeof(wle_fnDbgFileView_removeBreak));
mwle_fnDbgFileView_findString= (wle_fnDbgFileView_findString)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnDbgFileView_findString"), typeof(wle_fnDbgFileView_findString));
mwle_fnGuiEditCtrl_getContentControl= (wle_fnGuiEditCtrl_getContentControl)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_getContentControl"), typeof(wle_fnGuiEditCtrl_getContentControl));
mwle_fnGuiEditCtrl_setContentControl= (wle_fnGuiEditCtrl_setContentControl)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_setContentControl"), typeof(wle_fnGuiEditCtrl_setContentControl));
mwle_fnGuiEditCtrl_addNewCtrl= (wle_fnGuiEditCtrl_addNewCtrl)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_addNewCtrl"), typeof(wle_fnGuiEditCtrl_addNewCtrl));
mwle_fnGuiEditCtrl_addSelection= (wle_fnGuiEditCtrl_addSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_addSelection"), typeof(wle_fnGuiEditCtrl_addSelection));
mwle_fnGuiEditCtrl_removeSelection= (wle_fnGuiEditCtrl_removeSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_removeSelection"), typeof(wle_fnGuiEditCtrl_removeSelection));
mwle_fnGuiEditCtrl_clearSelection= (wle_fnGuiEditCtrl_clearSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_clearSelection"), typeof(wle_fnGuiEditCtrl_clearSelection));
mwle_fnGuiEditCtrl_select= (wle_fnGuiEditCtrl_select)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_select"), typeof(wle_fnGuiEditCtrl_select));
mwle_fnGuiEditCtrl_setCurrentAddSet= (wle_fnGuiEditCtrl_setCurrentAddSet)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_setCurrentAddSet"), typeof(wle_fnGuiEditCtrl_setCurrentAddSet));
mwle_fnGuiEditCtrl_getCurrentAddSet= (wle_fnGuiEditCtrl_getCurrentAddSet)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_getCurrentAddSet"), typeof(wle_fnGuiEditCtrl_getCurrentAddSet));
mwle_fnGuiEditCtrl_toggle= (wle_fnGuiEditCtrl_toggle)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_toggle"), typeof(wle_fnGuiEditCtrl_toggle));
mwle_fnGuiEditCtrl_justify= (wle_fnGuiEditCtrl_justify)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_justify"), typeof(wle_fnGuiEditCtrl_justify));
mwle_fnGuiEditCtrl_bringToFront= (wle_fnGuiEditCtrl_bringToFront)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_bringToFront"), typeof(wle_fnGuiEditCtrl_bringToFront));
mwle_fnGuiEditCtrl_pushToBack= (wle_fnGuiEditCtrl_pushToBack)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_pushToBack"), typeof(wle_fnGuiEditCtrl_pushToBack));
mwle_fnGuiEditCtrl_deleteSelection= (wle_fnGuiEditCtrl_deleteSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_deleteSelection"), typeof(wle_fnGuiEditCtrl_deleteSelection));
mwle_fnGuiEditCtrl_moveSelection= (wle_fnGuiEditCtrl_moveSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_moveSelection"), typeof(wle_fnGuiEditCtrl_moveSelection));
mwle_fnGuiEditCtrl_saveSelection= (wle_fnGuiEditCtrl_saveSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_saveSelection"), typeof(wle_fnGuiEditCtrl_saveSelection));
mwle_fnGuiEditCtrl_loadSelection= (wle_fnGuiEditCtrl_loadSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_loadSelection"), typeof(wle_fnGuiEditCtrl_loadSelection));
mwle_fnGuiEditCtrl_selectAll= (wle_fnGuiEditCtrl_selectAll)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_selectAll"), typeof(wle_fnGuiEditCtrl_selectAll));
mwle_fnGuiEditCtrl_getNumSelected= (wle_fnGuiEditCtrl_getNumSelected)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_getNumSelected"), typeof(wle_fnGuiEditCtrl_getNumSelected));
mwle_fnGuiEditCtrl_getSelectionGlobalBounds= (wle_fnGuiEditCtrl_getSelectionGlobalBounds)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_getSelectionGlobalBounds"), typeof(wle_fnGuiEditCtrl_getSelectionGlobalBounds));
mwle_fnGuiEditCtrl_selectParents= (wle_fnGuiEditCtrl_selectParents)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_selectParents"), typeof(wle_fnGuiEditCtrl_selectParents));
mwle_fnGuiEditCtrl_selectChildren= (wle_fnGuiEditCtrl_selectChildren)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_selectChildren"), typeof(wle_fnGuiEditCtrl_selectChildren));
mwle_fnGuiEditCtrl_setSnapToGrid= (wle_fnGuiEditCtrl_setSnapToGrid)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_setSnapToGrid"), typeof(wle_fnGuiEditCtrl_setSnapToGrid));
mwle_fnGuiEditCtrl_readGuides= (wle_fnGuiEditCtrl_readGuides)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_readGuides"), typeof(wle_fnGuiEditCtrl_readGuides));
mwle_fnGuiEditCtrl_writeGuides= (wle_fnGuiEditCtrl_writeGuides)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_writeGuides"), typeof(wle_fnGuiEditCtrl_writeGuides));
mwle_fnGuiEditCtrl_clearGuides= (wle_fnGuiEditCtrl_clearGuides)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_clearGuides"), typeof(wle_fnGuiEditCtrl_clearGuides));
mwle_fnGuiEditCtrl_fitIntoParents= (wle_fnGuiEditCtrl_fitIntoParents)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_fitIntoParents"), typeof(wle_fnGuiEditCtrl_fitIntoParents));
mwle_fnGuiEditCtrl_getMouseMode= (wle_fnGuiEditCtrl_getMouseMode)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_getMouseMode"), typeof(wle_fnGuiEditCtrl_getMouseMode));
mwle_fnGuiEditCtrl_getSelection= (wle_fnGuiEditCtrl_getSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_getSelection"), typeof(wle_fnGuiEditCtrl_getSelection));
mwle_fnGuiEditCtrl_getTrash= (wle_fnGuiEditCtrl_getTrash)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiEditCtrl_getTrash"), typeof(wle_fnGuiEditCtrl_getTrash));
mwle_fnGuiFilterCtrl_getValue= (wle_fnGuiFilterCtrl_getValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFilterCtrl_getValue"), typeof(wle_fnGuiFilterCtrl_getValue));
mwle_fnGuiFilterCtrl_setValue= (wle_fnGuiFilterCtrl_setValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFilterCtrl_setValue"), typeof(wle_fnGuiFilterCtrl_setValue));
mwle_fnGuiFilterCtrl_identity= (wle_fnGuiFilterCtrl_identity)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiFilterCtrl_identity"), typeof(wle_fnGuiFilterCtrl_identity));
mwle_fnGuiGraphCtrl_addDatum= (wle_fnGuiGraphCtrl_addDatum)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiGraphCtrl_addDatum"), typeof(wle_fnGuiGraphCtrl_addDatum));
mwle_fnGuiGraphCtrl_getDatum= (wle_fnGuiGraphCtrl_getDatum)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiGraphCtrl_getDatum"), typeof(wle_fnGuiGraphCtrl_getDatum));
mwle_fnGuiGraphCtrl_addAutoPlot= (wle_fnGuiGraphCtrl_addAutoPlot)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiGraphCtrl_addAutoPlot"), typeof(wle_fnGuiGraphCtrl_addAutoPlot));
mwle_fnGuiGraphCtrl_removeAutoPlot= (wle_fnGuiGraphCtrl_removeAutoPlot)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiGraphCtrl_removeAutoPlot"), typeof(wle_fnGuiGraphCtrl_removeAutoPlot));
mwle_fnGuiGraphCtrl_setGraphType= (wle_fnGuiGraphCtrl_setGraphType)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiGraphCtrl_setGraphType"), typeof(wle_fnGuiGraphCtrl_setGraphType));
mwle_fnGuiImageList_getImage= (wle_fnGuiImageList_getImage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiImageList_getImage"), typeof(wle_fnGuiImageList_getImage));
mwle_fnGuiImageList_clear= (wle_fnGuiImageList_clear)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiImageList_clear"), typeof(wle_fnGuiImageList_clear));
mwle_fnGuiImageList_count= (wle_fnGuiImageList_count)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiImageList_count"), typeof(wle_fnGuiImageList_count));
mwle_fnGuiImageList_remove= (wle_fnGuiImageList_remove)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiImageList_remove"), typeof(wle_fnGuiImageList_remove));
mwle_fnGuiImageList_getIndex= (wle_fnGuiImageList_getIndex)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiImageList_getIndex"), typeof(wle_fnGuiImageList_getIndex));
mwle_fnGuiImageList_insert= (wle_fnGuiImageList_insert)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiImageList_insert"), typeof(wle_fnGuiImageList_insert));
mwle_fnGuiInspector_inspect= (wle_fnGuiInspector_inspect)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspector_inspect"), typeof(wle_fnGuiInspector_inspect));
mwle_fnGuiInspector_addInspect= (wle_fnGuiInspector_addInspect)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspector_addInspect"), typeof(wle_fnGuiInspector_addInspect));
mwle_fnGuiInspector_removeInspect= (wle_fnGuiInspector_removeInspect)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspector_removeInspect"), typeof(wle_fnGuiInspector_removeInspect));
mwle_fnGuiInspector_refresh= (wle_fnGuiInspector_refresh)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspector_refresh"), typeof(wle_fnGuiInspector_refresh));
mwle_fnGuiInspector_getInspectObject= (wle_fnGuiInspector_getInspectObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspector_getInspectObject"), typeof(wle_fnGuiInspector_getInspectObject));
mwle_fnGuiInspector_getNumInspectObjects= (wle_fnGuiInspector_getNumInspectObjects)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspector_getNumInspectObjects"), typeof(wle_fnGuiInspector_getNumInspectObjects));
mwle_fnGuiInspector_setName= (wle_fnGuiInspector_setName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspector_setName"), typeof(wle_fnGuiInspector_setName));
mwle_fnGuiInspector_apply= (wle_fnGuiInspector_apply)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspector_apply"), typeof(wle_fnGuiInspector_apply));
mwle_fnGuiInspector_setObjectField= (wle_fnGuiInspector_setObjectField)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspector_setObjectField"), typeof(wle_fnGuiInspector_setObjectField));
mwle_fnGuiInspectorTypeFileName_apply= (wle_fnGuiInspectorTypeFileName_apply)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspectorTypeFileName_apply"), typeof(wle_fnGuiInspectorTypeFileName_apply));
mwle_fnGuiInspectorTypeBitMask32_applyBit= (wle_fnGuiInspectorTypeBitMask32_applyBit)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspectorTypeBitMask32_applyBit"), typeof(wle_fnGuiInspectorTypeBitMask32_applyBit));
mwle_fnGuiMenuBar_clearMenus= (wle_fnGuiMenuBar_clearMenus)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMenuBar_clearMenus"), typeof(wle_fnGuiMenuBar_clearMenus));
mwle_fnGuiMenuBar_setMenuMargins= (wle_fnGuiMenuBar_setMenuMargins)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMenuBar_setMenuMargins"), typeof(wle_fnGuiMenuBar_setMenuMargins));
mwle_fnGuiMenuBar_addMenu= (wle_fnGuiMenuBar_addMenu)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMenuBar_addMenu"), typeof(wle_fnGuiMenuBar_addMenu));
mwle_fnGuiMenuBar_addMenuItem= (wle_fnGuiMenuBar_addMenuItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMenuBar_addMenuItem"), typeof(wle_fnGuiMenuBar_addMenuItem));
mwle_fnGuiMenuBar_setMenuItemEnable= (wle_fnGuiMenuBar_setMenuItemEnable)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMenuBar_setMenuItemEnable"), typeof(wle_fnGuiMenuBar_setMenuItemEnable));
mwle_fnGuiMenuBar_setCheckmarkBitmapIndex= (wle_fnGuiMenuBar_setCheckmarkBitmapIndex)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMenuBar_setCheckmarkBitmapIndex"), typeof(wle_fnGuiMenuBar_setCheckmarkBitmapIndex));
mwle_fnGuiMenuBar_setMenuItemChecked= (wle_fnGuiMenuBar_setMenuItemChecked)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMenuBar_setMenuItemChecked"), typeof(wle_fnGuiMenuBar_setMenuItemChecked));
mwle_fnGuiMenuBar_setMenuText= (wle_fnGuiMenuBar_setMenuText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMenuBar_setMenuText"), typeof(wle_fnGuiMenuBar_setMenuText));
mwle_fnGuiMenuBar_setMenuBitmapIndex= (wle_fnGuiMenuBar_setMenuBitmapIndex)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMenuBar_setMenuBitmapIndex"), typeof(wle_fnGuiMenuBar_setMenuBitmapIndex));
mwle_fnGuiMenuBar_setMenuVisible= (wle_fnGuiMenuBar_setMenuVisible)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMenuBar_setMenuVisible"), typeof(wle_fnGuiMenuBar_setMenuVisible));
mwle_fnGuiMenuBar_setMenuItemText= (wle_fnGuiMenuBar_setMenuItemText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMenuBar_setMenuItemText"), typeof(wle_fnGuiMenuBar_setMenuItemText));
mwle_fnGuiMenuBar_setMenuItemVisible= (wle_fnGuiMenuBar_setMenuItemVisible)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMenuBar_setMenuItemVisible"), typeof(wle_fnGuiMenuBar_setMenuItemVisible));
mwle_fnGuiMenuBar_setMenuItemBitmap= (wle_fnGuiMenuBar_setMenuItemBitmap)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMenuBar_setMenuItemBitmap"), typeof(wle_fnGuiMenuBar_setMenuItemBitmap));
mwle_fnGuiMenuBar_removeMenuItem= (wle_fnGuiMenuBar_removeMenuItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMenuBar_removeMenuItem"), typeof(wle_fnGuiMenuBar_removeMenuItem));
mwle_fnGuiMenuBar_clearMenuItems= (wle_fnGuiMenuBar_clearMenuItems)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMenuBar_clearMenuItems"), typeof(wle_fnGuiMenuBar_clearMenuItems));
mwle_fnGuiMenuBar_removeMenu= (wle_fnGuiMenuBar_removeMenu)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMenuBar_removeMenu"), typeof(wle_fnGuiMenuBar_removeMenu));
mwle_fnGuiMenuBar_setMenuItemSubmenuState= (wle_fnGuiMenuBar_setMenuItemSubmenuState)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMenuBar_setMenuItemSubmenuState"), typeof(wle_fnGuiMenuBar_setMenuItemSubmenuState));
mwle_fnGuiMenuBar_addSubmenuItem= (wle_fnGuiMenuBar_addSubmenuItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMenuBar_addSubmenuItem"), typeof(wle_fnGuiMenuBar_addSubmenuItem));
mwle_fnGuiMenuBar_clearSubmenuItems= (wle_fnGuiMenuBar_clearSubmenuItems)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMenuBar_clearSubmenuItems"), typeof(wle_fnGuiMenuBar_clearSubmenuItems));
mwle_fnGuiMenuBar_setSubmenuItemChecked= (wle_fnGuiMenuBar_setSubmenuItemChecked)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMenuBar_setSubmenuItemChecked"), typeof(wle_fnGuiMenuBar_setSubmenuItemChecked));
mwle_fnGuiParticleGraphCtrl_setSelectedPoint= (wle_fnGuiParticleGraphCtrl_setSelectedPoint)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_setSelectedPoint"), typeof(wle_fnGuiParticleGraphCtrl_setSelectedPoint));
mwle_fnGuiParticleGraphCtrl_setSelectedPlot= (wle_fnGuiParticleGraphCtrl_setSelectedPlot)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_setSelectedPlot"), typeof(wle_fnGuiParticleGraphCtrl_setSelectedPlot));
mwle_fnGuiParticleGraphCtrl_clearGraph= (wle_fnGuiParticleGraphCtrl_clearGraph)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_clearGraph"), typeof(wle_fnGuiParticleGraphCtrl_clearGraph));
mwle_fnGuiParticleGraphCtrl_clearAllGraphs= (wle_fnGuiParticleGraphCtrl_clearAllGraphs)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_clearAllGraphs"), typeof(wle_fnGuiParticleGraphCtrl_clearAllGraphs));
mwle_fnGuiParticleGraphCtrl_addPlotPoint= (wle_fnGuiParticleGraphCtrl_addPlotPoint)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_addPlotPoint"), typeof(wle_fnGuiParticleGraphCtrl_addPlotPoint));
mwle_fnGuiParticleGraphCtrl_insertPlotPoint= (wle_fnGuiParticleGraphCtrl_insertPlotPoint)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_insertPlotPoint"), typeof(wle_fnGuiParticleGraphCtrl_insertPlotPoint));
mwle_fnGuiParticleGraphCtrl_changePlotPoint= (wle_fnGuiParticleGraphCtrl_changePlotPoint)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_changePlotPoint"), typeof(wle_fnGuiParticleGraphCtrl_changePlotPoint));
mwle_fnGuiParticleGraphCtrl_getSelectedPlot= (wle_fnGuiParticleGraphCtrl_getSelectedPlot)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_getSelectedPlot"), typeof(wle_fnGuiParticleGraphCtrl_getSelectedPlot));
mwle_fnGuiParticleGraphCtrl_getSelectedPoint= (wle_fnGuiParticleGraphCtrl_getSelectedPoint)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_getSelectedPoint"), typeof(wle_fnGuiParticleGraphCtrl_getSelectedPoint));
mwle_fnGuiParticleGraphCtrl_isExistingPoint= (wle_fnGuiParticleGraphCtrl_isExistingPoint)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_isExistingPoint"), typeof(wle_fnGuiParticleGraphCtrl_isExistingPoint));
mwle_fnGuiParticleGraphCtrl_getPlotPoint= (wle_fnGuiParticleGraphCtrl_getPlotPoint)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_getPlotPoint"), typeof(wle_fnGuiParticleGraphCtrl_getPlotPoint));
mwle_fnGuiParticleGraphCtrl_getPlotIndex= (wle_fnGuiParticleGraphCtrl_getPlotIndex)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_getPlotIndex"), typeof(wle_fnGuiParticleGraphCtrl_getPlotIndex));
mwle_fnGuiParticleGraphCtrl_getGraphColor= (wle_fnGuiParticleGraphCtrl_getGraphColor)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_getGraphColor"), typeof(wle_fnGuiParticleGraphCtrl_getGraphColor));
mwle_fnGuiParticleGraphCtrl_getGraphMin= (wle_fnGuiParticleGraphCtrl_getGraphMin)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_getGraphMin"), typeof(wle_fnGuiParticleGraphCtrl_getGraphMin));
mwle_fnGuiParticleGraphCtrl_getGraphMax= (wle_fnGuiParticleGraphCtrl_getGraphMax)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_getGraphMax"), typeof(wle_fnGuiParticleGraphCtrl_getGraphMax));
mwle_fnGuiParticleGraphCtrl_getGraphName= (wle_fnGuiParticleGraphCtrl_getGraphName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_getGraphName"), typeof(wle_fnGuiParticleGraphCtrl_getGraphName));
mwle_fnGuiParticleGraphCtrl_setGraphMin= (wle_fnGuiParticleGraphCtrl_setGraphMin)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_setGraphMin"), typeof(wle_fnGuiParticleGraphCtrl_setGraphMin));
mwle_fnGuiParticleGraphCtrl_setGraphMinX= (wle_fnGuiParticleGraphCtrl_setGraphMinX)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_setGraphMinX"), typeof(wle_fnGuiParticleGraphCtrl_setGraphMinX));
mwle_fnGuiParticleGraphCtrl_setGraphMinY= (wle_fnGuiParticleGraphCtrl_setGraphMinY)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_setGraphMinY"), typeof(wle_fnGuiParticleGraphCtrl_setGraphMinY));
mwle_fnGuiParticleGraphCtrl_setGraphMax= (wle_fnGuiParticleGraphCtrl_setGraphMax)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_setGraphMax"), typeof(wle_fnGuiParticleGraphCtrl_setGraphMax));
mwle_fnGuiParticleGraphCtrl_setGraphMaxX= (wle_fnGuiParticleGraphCtrl_setGraphMaxX)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_setGraphMaxX"), typeof(wle_fnGuiParticleGraphCtrl_setGraphMaxX));
mwle_fnGuiParticleGraphCtrl_setGraphMaxY= (wle_fnGuiParticleGraphCtrl_setGraphMaxY)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_setGraphMaxY"), typeof(wle_fnGuiParticleGraphCtrl_setGraphMaxY));
mwle_fnGuiParticleGraphCtrl_setGraphHidden= (wle_fnGuiParticleGraphCtrl_setGraphHidden)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_setGraphHidden"), typeof(wle_fnGuiParticleGraphCtrl_setGraphHidden));
mwle_fnGuiParticleGraphCtrl_setAutoGraphMax= (wle_fnGuiParticleGraphCtrl_setAutoGraphMax)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_setAutoGraphMax"), typeof(wle_fnGuiParticleGraphCtrl_setAutoGraphMax));
mwle_fnGuiParticleGraphCtrl_setAutoRemove= (wle_fnGuiParticleGraphCtrl_setAutoRemove)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_setAutoRemove"), typeof(wle_fnGuiParticleGraphCtrl_setAutoRemove));
mwle_fnGuiParticleGraphCtrl_setRenderAll= (wle_fnGuiParticleGraphCtrl_setRenderAll)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_setRenderAll"), typeof(wle_fnGuiParticleGraphCtrl_setRenderAll));
mwle_fnGuiParticleGraphCtrl_setPointXMovementClamped= (wle_fnGuiParticleGraphCtrl_setPointXMovementClamped)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_setPointXMovementClamped"), typeof(wle_fnGuiParticleGraphCtrl_setPointXMovementClamped));
mwle_fnGuiParticleGraphCtrl_setRenderGraphTooltip= (wle_fnGuiParticleGraphCtrl_setRenderGraphTooltip)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_setRenderGraphTooltip"), typeof(wle_fnGuiParticleGraphCtrl_setRenderGraphTooltip));
mwle_fnGuiParticleGraphCtrl_setGraphName= (wle_fnGuiParticleGraphCtrl_setGraphName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_setGraphName"), typeof(wle_fnGuiParticleGraphCtrl_setGraphName));
mwle_fnGuiParticleGraphCtrl_resetSelectedPoint= (wle_fnGuiParticleGraphCtrl_resetSelectedPoint)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiParticleGraphCtrl_resetSelectedPoint"), typeof(wle_fnGuiParticleGraphCtrl_resetSelectedPoint));
mwle_fnGuiShapeEdPreview_setOrbitPos= (wle_fnGuiShapeEdPreview_setOrbitPos)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_setOrbitPos"), typeof(wle_fnGuiShapeEdPreview_setOrbitPos));
mwle_fnGuiShapeEdPreview_setModel= (wle_fnGuiShapeEdPreview_setModel)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_setModel"), typeof(wle_fnGuiShapeEdPreview_setModel));
mwle_fnGuiShapeEdPreview_fitToShape= (wle_fnGuiShapeEdPreview_fitToShape)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_fitToShape"), typeof(wle_fnGuiShapeEdPreview_fitToShape));
mwle_fnGuiShapeEdPreview_refreshShape= (wle_fnGuiShapeEdPreview_refreshShape)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_refreshShape"), typeof(wle_fnGuiShapeEdPreview_refreshShape));
mwle_fnGuiShapeEdPreview_updateNodeTransforms= (wle_fnGuiShapeEdPreview_updateNodeTransforms)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_updateNodeTransforms"), typeof(wle_fnGuiShapeEdPreview_updateNodeTransforms));
mwle_fnGuiShapeEdPreview_computeShapeBounds= (wle_fnGuiShapeEdPreview_computeShapeBounds)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_computeShapeBounds"), typeof(wle_fnGuiShapeEdPreview_computeShapeBounds));
mwle_fnGuiShapeEdPreview_getMeshHidden= (wle_fnGuiShapeEdPreview_getMeshHidden)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_getMeshHidden"), typeof(wle_fnGuiShapeEdPreview_getMeshHidden));
mwle_fnGuiShapeEdPreview_setMeshHidden= (wle_fnGuiShapeEdPreview_setMeshHidden)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_setMeshHidden"), typeof(wle_fnGuiShapeEdPreview_setMeshHidden));
mwle_fnGuiShapeEdPreview_setAllMeshesHidden= (wle_fnGuiShapeEdPreview_setAllMeshesHidden)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_setAllMeshesHidden"), typeof(wle_fnGuiShapeEdPreview_setAllMeshesHidden));
mwle_fnGuiShapeEdPreview_exportToCollada= (wle_fnGuiShapeEdPreview_exportToCollada)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_exportToCollada"), typeof(wle_fnGuiShapeEdPreview_exportToCollada));
mwle_fnGuiShapeEdPreview_addThread= (wle_fnGuiShapeEdPreview_addThread)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_addThread"), typeof(wle_fnGuiShapeEdPreview_addThread));
mwle_fnGuiShapeEdPreview_removeThread= (wle_fnGuiShapeEdPreview_removeThread)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_removeThread"), typeof(wle_fnGuiShapeEdPreview_removeThread));
mwle_fnGuiShapeEdPreview_getThreadCount= (wle_fnGuiShapeEdPreview_getThreadCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_getThreadCount"), typeof(wle_fnGuiShapeEdPreview_getThreadCount));
mwle_fnGuiShapeEdPreview_setTimeScale= (wle_fnGuiShapeEdPreview_setTimeScale)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_setTimeScale"), typeof(wle_fnGuiShapeEdPreview_setTimeScale));
mwle_fnGuiShapeEdPreview_setThreadSequence= (wle_fnGuiShapeEdPreview_setThreadSequence)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_setThreadSequence"), typeof(wle_fnGuiShapeEdPreview_setThreadSequence));
mwle_fnGuiShapeEdPreview_getThreadSequence= (wle_fnGuiShapeEdPreview_getThreadSequence)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_getThreadSequence"), typeof(wle_fnGuiShapeEdPreview_getThreadSequence));
mwle_fnGuiShapeEdPreview_refreshThreadSequences= (wle_fnGuiShapeEdPreview_refreshThreadSequences)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_refreshThreadSequences"), typeof(wle_fnGuiShapeEdPreview_refreshThreadSequences));
mwle_fnGuiShapeEdPreview_mountShape= (wle_fnGuiShapeEdPreview_mountShape)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_mountShape"), typeof(wle_fnGuiShapeEdPreview_mountShape));
mwle_fnGuiShapeEdPreview_setMountNode= (wle_fnGuiShapeEdPreview_setMountNode)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_setMountNode"), typeof(wle_fnGuiShapeEdPreview_setMountNode));
mwle_fnGuiShapeEdPreview_getMountThreadSequence= (wle_fnGuiShapeEdPreview_getMountThreadSequence)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_getMountThreadSequence"), typeof(wle_fnGuiShapeEdPreview_getMountThreadSequence));
mwle_fnGuiShapeEdPreview_setMountThreadSequence= (wle_fnGuiShapeEdPreview_setMountThreadSequence)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_setMountThreadSequence"), typeof(wle_fnGuiShapeEdPreview_setMountThreadSequence));
mwle_fnGuiShapeEdPreview_getMountThreadPos= (wle_fnGuiShapeEdPreview_getMountThreadPos)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_getMountThreadPos"), typeof(wle_fnGuiShapeEdPreview_getMountThreadPos));
mwle_fnGuiShapeEdPreview_setMountThreadPos= (wle_fnGuiShapeEdPreview_setMountThreadPos)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_setMountThreadPos"), typeof(wle_fnGuiShapeEdPreview_setMountThreadPos));
mwle_fnGuiShapeEdPreview_getMountThreadDir= (wle_fnGuiShapeEdPreview_getMountThreadDir)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_getMountThreadDir"), typeof(wle_fnGuiShapeEdPreview_getMountThreadDir));
mwle_fnGuiShapeEdPreview_setMountThreadDir= (wle_fnGuiShapeEdPreview_setMountThreadDir)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_setMountThreadDir"), typeof(wle_fnGuiShapeEdPreview_setMountThreadDir));
mwle_fnGuiShapeEdPreview_unmountShape= (wle_fnGuiShapeEdPreview_unmountShape)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_unmountShape"), typeof(wle_fnGuiShapeEdPreview_unmountShape));
mwle_fnGuiShapeEdPreview_unmountAll= (wle_fnGuiShapeEdPreview_unmountAll)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiShapeEdPreview_unmountAll"), typeof(wle_fnGuiShapeEdPreview_unmountAll));
mwle_fnGuiInspectorDynamicField_renameField= (wle_fnGuiInspectorDynamicField_renameField)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspectorDynamicField_renameField"), typeof(wle_fnGuiInspectorDynamicField_renameField));
mwle_fnGuiInspectorDynamicGroup_inspectGroup= (wle_fnGuiInspectorDynamicGroup_inspectGroup)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspectorDynamicGroup_inspectGroup"), typeof(wle_fnGuiInspectorDynamicGroup_inspectGroup));
mwle_fnGuiInspectorDynamicGroup_addDynamicField= (wle_fnGuiInspectorDynamicGroup_addDynamicField)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspectorDynamicGroup_addDynamicField"), typeof(wle_fnGuiInspectorDynamicGroup_addDynamicField));
mwle_fnGuiInspectorDynamicGroup_removeDynamicField= (wle_fnGuiInspectorDynamicGroup_removeDynamicField)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspectorDynamicGroup_removeDynamicField"), typeof(wle_fnGuiInspectorDynamicGroup_removeDynamicField));
mwle_fnGuiInspectorField_getInspector= (wle_fnGuiInspectorField_getInspector)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspectorField_getInspector"), typeof(wle_fnGuiInspectorField_getInspector));
mwle_fnGuiInspectorField_getInspectedFieldName= (wle_fnGuiInspectorField_getInspectedFieldName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspectorField_getInspectedFieldName"), typeof(wle_fnGuiInspectorField_getInspectedFieldName));
mwle_fnGuiInspectorField_getInspectedFieldType= (wle_fnGuiInspectorField_getInspectedFieldType)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspectorField_getInspectedFieldType"), typeof(wle_fnGuiInspectorField_getInspectedFieldType));
mwle_fnGuiInspectorField_apply= (wle_fnGuiInspectorField_apply)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspectorField_apply"), typeof(wle_fnGuiInspectorField_apply));
mwle_fnGuiInspectorField_applyWithoutUndo= (wle_fnGuiInspectorField_applyWithoutUndo)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspectorField_applyWithoutUndo"), typeof(wle_fnGuiInspectorField_applyWithoutUndo));
mwle_fnGuiInspectorField_getData= (wle_fnGuiInspectorField_getData)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspectorField_getData"), typeof(wle_fnGuiInspectorField_getData));
mwle_fnGuiInspectorField_reset= (wle_fnGuiInspectorField_reset)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiInspectorField_reset"), typeof(wle_fnGuiInspectorField_reset));
mwle_fnGuiVariableInspector_loadVars= (wle_fnGuiVariableInspector_loadVars)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiVariableInspector_loadVars"), typeof(wle_fnGuiVariableInspector_loadVars));
mwle_fnGuiMessageVectorCtrl_attach= (wle_fnGuiMessageVectorCtrl_attach)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMessageVectorCtrl_attach"), typeof(wle_fnGuiMessageVectorCtrl_attach));
mwle_fnGuiMessageVectorCtrl_detach= (wle_fnGuiMessageVectorCtrl_detach)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMessageVectorCtrl_detach"), typeof(wle_fnGuiMessageVectorCtrl_detach));
mwle_fnGuiProgressBitmapCtrl_setBitmap= (wle_fnGuiProgressBitmapCtrl_setBitmap)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiProgressBitmapCtrl_setBitmap"), typeof(wle_fnGuiProgressBitmapCtrl_setBitmap));
mwle_fnGuiTickCtrl_setProcessTicks= (wle_fnGuiTickCtrl_setProcessTicks)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTickCtrl_setProcessTicks"), typeof(wle_fnGuiTickCtrl_setProcessTicks));
mwle_fnGuiTheoraCtrl_setFile= (wle_fnGuiTheoraCtrl_setFile)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTheoraCtrl_setFile"), typeof(wle_fnGuiTheoraCtrl_setFile));
mwle_fnGuiTheoraCtrl_play= (wle_fnGuiTheoraCtrl_play)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTheoraCtrl_play"), typeof(wle_fnGuiTheoraCtrl_play));
mwle_fnGuiTheoraCtrl_pause= (wle_fnGuiTheoraCtrl_pause)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTheoraCtrl_pause"), typeof(wle_fnGuiTheoraCtrl_pause));
mwle_fnGuiTheoraCtrl_stop= (wle_fnGuiTheoraCtrl_stop)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTheoraCtrl_stop"), typeof(wle_fnGuiTheoraCtrl_stop));
mwle_fnGuiTheoraCtrl_getCurrentTime= (wle_fnGuiTheoraCtrl_getCurrentTime)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTheoraCtrl_getCurrentTime"), typeof(wle_fnGuiTheoraCtrl_getCurrentTime));
mwle_fnGuiTheoraCtrl_isPlaybackDone= (wle_fnGuiTheoraCtrl_isPlaybackDone)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiTheoraCtrl_isPlaybackDone"), typeof(wle_fnGuiTheoraCtrl_isPlaybackDone));
mwle_fnMessageVector_dump= (wle_fnMessageVector_dump)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMessageVector_dump"), typeof(wle_fnMessageVector_dump));
mwle_fnMessageVector_clear= (wle_fnMessageVector_clear)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMessageVector_clear"), typeof(wle_fnMessageVector_clear));
mwle_fnMessageVector_pushBackLine= (wle_fnMessageVector_pushBackLine)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMessageVector_pushBackLine"), typeof(wle_fnMessageVector_pushBackLine));
mwle_fnMessageVector_popBackLine= (wle_fnMessageVector_popBackLine)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMessageVector_popBackLine"), typeof(wle_fnMessageVector_popBackLine));
mwle_fnMessageVector_pushFrontLine= (wle_fnMessageVector_pushFrontLine)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMessageVector_pushFrontLine"), typeof(wle_fnMessageVector_pushFrontLine));
mwle_fnMessageVector_popFrontLine= (wle_fnMessageVector_popFrontLine)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMessageVector_popFrontLine"), typeof(wle_fnMessageVector_popFrontLine));
mwle_fnMessageVector_insertLine= (wle_fnMessageVector_insertLine)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMessageVector_insertLine"), typeof(wle_fnMessageVector_insertLine));
mwle_fnMessageVector_deleteLine= (wle_fnMessageVector_deleteLine)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMessageVector_deleteLine"), typeof(wle_fnMessageVector_deleteLine));
mwle_fnMessageVector_getNumLines= (wle_fnMessageVector_getNumLines)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMessageVector_getNumLines"), typeof(wle_fnMessageVector_getNumLines));
mwle_fnMessageVector_getLineTextByTag= (wle_fnMessageVector_getLineTextByTag)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMessageVector_getLineTextByTag"), typeof(wle_fnMessageVector_getLineTextByTag));
mwle_fnMessageVector_getLineIndexByTag= (wle_fnMessageVector_getLineIndexByTag)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMessageVector_getLineIndexByTag"), typeof(wle_fnMessageVector_getLineIndexByTag));
mwle_fnMessageVector_getLineText= (wle_fnMessageVector_getLineText)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMessageVector_getLineText"), typeof(wle_fnMessageVector_getLineText));
mwle_fnMessageVector_getLineTag= (wle_fnMessageVector_getLineTag)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMessageVector_getLineTag"), typeof(wle_fnMessageVector_getLineTag));
mwle_fnEditTSCtrl_getDisplayType= (wle_fnEditTSCtrl_getDisplayType)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnEditTSCtrl_getDisplayType"), typeof(wle_fnEditTSCtrl_getDisplayType));
mwle_fnEditTSCtrl_setDisplayType= (wle_fnEditTSCtrl_setDisplayType)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnEditTSCtrl_setDisplayType"), typeof(wle_fnEditTSCtrl_setDisplayType));
mwle_fnEditTSCtrl_getOrthoFOV= (wle_fnEditTSCtrl_getOrthoFOV)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnEditTSCtrl_getOrthoFOV"), typeof(wle_fnEditTSCtrl_getOrthoFOV));
mwle_fnEditTSCtrl_setOrthoFOV= (wle_fnEditTSCtrl_setOrthoFOV)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnEditTSCtrl_setOrthoFOV"), typeof(wle_fnEditTSCtrl_setOrthoFOV));
mwle_fnEditTSCtrl_renderBox= (wle_fnEditTSCtrl_renderBox)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnEditTSCtrl_renderBox"), typeof(wle_fnEditTSCtrl_renderBox));
mwle_fnEditTSCtrl_renderSphere= (wle_fnEditTSCtrl_renderSphere)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnEditTSCtrl_renderSphere"), typeof(wle_fnEditTSCtrl_renderSphere));
mwle_fnEditTSCtrl_renderCircle= (wle_fnEditTSCtrl_renderCircle)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnEditTSCtrl_renderCircle"), typeof(wle_fnEditTSCtrl_renderCircle));
mwle_fnEditTSCtrl_renderTriangle= (wle_fnEditTSCtrl_renderTriangle)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnEditTSCtrl_renderTriangle"), typeof(wle_fnEditTSCtrl_renderTriangle));
mwle_fnEditTSCtrl_renderLine= (wle_fnEditTSCtrl_renderLine)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnEditTSCtrl_renderLine"), typeof(wle_fnEditTSCtrl_renderLine));
mwle_fnEditTSCtrl_getGizmo= (wle_fnEditTSCtrl_getGizmo)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnEditTSCtrl_getGizmo"), typeof(wle_fnEditTSCtrl_getGizmo));
mwle_fnEditTSCtrl_isMiddleMouseDown= (wle_fnEditTSCtrl_isMiddleMouseDown)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnEditTSCtrl_isMiddleMouseDown"), typeof(wle_fnEditTSCtrl_isMiddleMouseDown));
mwle_fnGuiMissionAreaCtrl_setMissionArea= (wle_fnGuiMissionAreaCtrl_setMissionArea)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMissionAreaCtrl_setMissionArea"), typeof(wle_fnGuiMissionAreaCtrl_setMissionArea));
mwle_fnGuiMissionAreaCtrl_updateTerrain= (wle_fnGuiMissionAreaCtrl_updateTerrain)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMissionAreaCtrl_updateTerrain"), typeof(wle_fnGuiMissionAreaCtrl_updateTerrain));
mwle_fnMECreateUndoAction_addObject= (wle_fnMECreateUndoAction_addObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMECreateUndoAction_addObject"), typeof(wle_fnMECreateUndoAction_addObject));
mwle_fnMEDeleteUndoAction_deleteObject= (wle_fnMEDeleteUndoAction_deleteObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMEDeleteUndoAction_deleteObject"), typeof(wle_fnMEDeleteUndoAction_deleteObject));
mwle_fnWorldEditor_ignoreObjClass= (wle_fnWorldEditor_ignoreObjClass)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_ignoreObjClass"), typeof(wle_fnWorldEditor_ignoreObjClass));
mwle_fnWorldEditor_clearIgnoreList= (wle_fnWorldEditor_clearIgnoreList)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_clearIgnoreList"), typeof(wle_fnWorldEditor_clearIgnoreList));
mwle_fnWorldEditor_clearSelection= (wle_fnWorldEditor_clearSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_clearSelection"), typeof(wle_fnWorldEditor_clearSelection));
mwle_fnWorldEditor_getActiveSelection= (wle_fnWorldEditor_getActiveSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_getActiveSelection"), typeof(wle_fnWorldEditor_getActiveSelection));
mwle_fnWorldEditor_setActiveSelection= (wle_fnWorldEditor_setActiveSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_setActiveSelection"), typeof(wle_fnWorldEditor_setActiveSelection));
mwle_fnWorldEditor_selectObject= (wle_fnWorldEditor_selectObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_selectObject"), typeof(wle_fnWorldEditor_selectObject));
mwle_fnWorldEditor_unselectObject= (wle_fnWorldEditor_unselectObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_unselectObject"), typeof(wle_fnWorldEditor_unselectObject));
mwle_fnWorldEditor_invalidateSelectionCentroid= (wle_fnWorldEditor_invalidateSelectionCentroid)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_invalidateSelectionCentroid"), typeof(wle_fnWorldEditor_invalidateSelectionCentroid));
mwle_fnWorldEditor_getSelectionSize= (wle_fnWorldEditor_getSelectionSize)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_getSelectionSize"), typeof(wle_fnWorldEditor_getSelectionSize));
mwle_fnWorldEditor_getSelectedObject= (wle_fnWorldEditor_getSelectedObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_getSelectedObject"), typeof(wle_fnWorldEditor_getSelectedObject));
mwle_fnWorldEditor_getSelectionRadius= (wle_fnWorldEditor_getSelectionRadius)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_getSelectionRadius"), typeof(wle_fnWorldEditor_getSelectionRadius));
mwle_fnWorldEditor_getSelectionCentroid= (wle_fnWorldEditor_getSelectionCentroid)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_getSelectionCentroid"), typeof(wle_fnWorldEditor_getSelectionCentroid));
mwle_fnWorldEditor_getSelectionExtent= (wle_fnWorldEditor_getSelectionExtent)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_getSelectionExtent"), typeof(wle_fnWorldEditor_getSelectionExtent));
mwle_fnWorldEditor_dropSelection= (wle_fnWorldEditor_dropSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_dropSelection"), typeof(wle_fnWorldEditor_dropSelection));
mwle_fnWorldEditor_cutSelection= (wle_fnWorldEditor_cutSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_cutSelection"), typeof(wle_fnWorldEditor_cutSelection));
mwle_fnWorldEditor_copySelection= (wle_fnWorldEditor_copySelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_copySelection"), typeof(wle_fnWorldEditor_copySelection));
mwle_fnWorldEditor_pasteSelection= (wle_fnWorldEditor_pasteSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_pasteSelection"), typeof(wle_fnWorldEditor_pasteSelection));
mwle_fnWorldEditor_canPasteSelection= (wle_fnWorldEditor_canPasteSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_canPasteSelection"), typeof(wle_fnWorldEditor_canPasteSelection));
mwle_fnWorldEditor_hideObject= (wle_fnWorldEditor_hideObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_hideObject"), typeof(wle_fnWorldEditor_hideObject));
mwle_fnWorldEditor_hideSelection= (wle_fnWorldEditor_hideSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_hideSelection"), typeof(wle_fnWorldEditor_hideSelection));
mwle_fnWorldEditor_lockSelection= (wle_fnWorldEditor_lockSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_lockSelection"), typeof(wle_fnWorldEditor_lockSelection));
mwle_fnWorldEditor_alignByBounds= (wle_fnWorldEditor_alignByBounds)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_alignByBounds"), typeof(wle_fnWorldEditor_alignByBounds));
mwle_fnWorldEditor_alignByAxis= (wle_fnWorldEditor_alignByAxis)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_alignByAxis"), typeof(wle_fnWorldEditor_alignByAxis));
mwle_fnWorldEditor_resetSelectedRotation= (wle_fnWorldEditor_resetSelectedRotation)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_resetSelectedRotation"), typeof(wle_fnWorldEditor_resetSelectedRotation));
mwle_fnWorldEditor_resetSelectedScale= (wle_fnWorldEditor_resetSelectedScale)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_resetSelectedScale"), typeof(wle_fnWorldEditor_resetSelectedScale));
mwle_fnWorldEditor_redirectConsole= (wle_fnWorldEditor_redirectConsole)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_redirectConsole"), typeof(wle_fnWorldEditor_redirectConsole));
mwle_fnWorldEditor_addUndoState= (wle_fnWorldEditor_addUndoState)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_addUndoState"), typeof(wle_fnWorldEditor_addUndoState));
mwle_fnWorldEditor_getSoftSnap= (wle_fnWorldEditor_getSoftSnap)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_getSoftSnap"), typeof(wle_fnWorldEditor_getSoftSnap));
mwle_fnWorldEditor_setSoftSnap= (wle_fnWorldEditor_setSoftSnap)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_setSoftSnap"), typeof(wle_fnWorldEditor_setSoftSnap));
mwle_fnWorldEditor_getSoftSnapSize= (wle_fnWorldEditor_getSoftSnapSize)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_getSoftSnapSize"), typeof(wle_fnWorldEditor_getSoftSnapSize));
mwle_fnWorldEditor_setSoftSnapSize= (wle_fnWorldEditor_setSoftSnapSize)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_setSoftSnapSize"), typeof(wle_fnWorldEditor_setSoftSnapSize));
mwle_fnWorldEditor_softSnapSizeByBounds= (wle_fnWorldEditor_softSnapSizeByBounds)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_softSnapSizeByBounds"), typeof(wle_fnWorldEditor_softSnapSizeByBounds));
mwle_fnWorldEditor_getSoftSnapBackfaceTolerance= (wle_fnWorldEditor_getSoftSnapBackfaceTolerance)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_getSoftSnapBackfaceTolerance"), typeof(wle_fnWorldEditor_getSoftSnapBackfaceTolerance));
mwle_fnWorldEditor_setSoftSnapBackfaceTolerance= (wle_fnWorldEditor_setSoftSnapBackfaceTolerance)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_setSoftSnapBackfaceTolerance"), typeof(wle_fnWorldEditor_setSoftSnapBackfaceTolerance));
mwle_fnWorldEditor_softSnapRender= (wle_fnWorldEditor_softSnapRender)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_softSnapRender"), typeof(wle_fnWorldEditor_softSnapRender));
mwle_fnWorldEditor_softSnapRenderTriangle= (wle_fnWorldEditor_softSnapRenderTriangle)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_softSnapRenderTriangle"), typeof(wle_fnWorldEditor_softSnapRenderTriangle));
mwle_fnWorldEditor_softSnapDebugRender= (wle_fnWorldEditor_softSnapDebugRender)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_softSnapDebugRender"), typeof(wle_fnWorldEditor_softSnapDebugRender));
mwle_fnWorldEditor_transformSelection= (wle_fnWorldEditor_transformSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_transformSelection"), typeof(wle_fnWorldEditor_transformSelection));
mwle_fnWorldEditor_colladaExportSelection= (wle_fnWorldEditor_colladaExportSelection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_colladaExportSelection"), typeof(wle_fnWorldEditor_colladaExportSelection));
mwle_fnWorldEditor_makeSelectionPrefab= (wle_fnWorldEditor_makeSelectionPrefab)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_makeSelectionPrefab"), typeof(wle_fnWorldEditor_makeSelectionPrefab));
mwle_fnWorldEditor_explodeSelectedPrefab= (wle_fnWorldEditor_explodeSelectedPrefab)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_explodeSelectedPrefab"), typeof(wle_fnWorldEditor_explodeSelectedPrefab));
mwle_fnWorldEditor_mountRelative= (wle_fnWorldEditor_mountRelative)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_mountRelative"), typeof(wle_fnWorldEditor_mountRelative));
mwle_fnWorldEditor_getSoftSnapAlignment= (wle_fnWorldEditor_getSoftSnapAlignment)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_getSoftSnapAlignment"), typeof(wle_fnWorldEditor_getSoftSnapAlignment));
mwle_fnWorldEditor_setSoftSnapAlignment= (wle_fnWorldEditor_setSoftSnapAlignment)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_setSoftSnapAlignment"), typeof(wle_fnWorldEditor_setSoftSnapAlignment));
mwle_fnWorldEditor_getTerrainSnapAlignment= (wle_fnWorldEditor_getTerrainSnapAlignment)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_getTerrainSnapAlignment"), typeof(wle_fnWorldEditor_getTerrainSnapAlignment));
mwle_fnWorldEditor_setTerrainSnapAlignment= (wle_fnWorldEditor_setTerrainSnapAlignment)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_setTerrainSnapAlignment"), typeof(wle_fnWorldEditor_setTerrainSnapAlignment));
mwle_fnWorldEditor_createPolyhedralObject= (wle_fnWorldEditor_createPolyhedralObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_createPolyhedralObject"), typeof(wle_fnWorldEditor_createPolyhedralObject));
mwle_fnWorldEditor_createConvexShapeFrom= (wle_fnWorldEditor_createConvexShapeFrom)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWorldEditor_createConvexShapeFrom"), typeof(wle_fnWorldEditor_createConvexShapeFrom));
mwle_fnLangTable_addLanguage= (wle_fnLangTable_addLanguage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnLangTable_addLanguage"), typeof(wle_fnLangTable_addLanguage));
mwle_fnLangTable_getString= (wle_fnLangTable_getString)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnLangTable_getString"), typeof(wle_fnLangTable_getString));
mwle_fnLangTable_setDefaultLanguage= (wle_fnLangTable_setDefaultLanguage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnLangTable_setDefaultLanguage"), typeof(wle_fnLangTable_setDefaultLanguage));
mwle_fnLangTable_setCurrentLanguage= (wle_fnLangTable_setCurrentLanguage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnLangTable_setCurrentLanguage"), typeof(wle_fnLangTable_setCurrentLanguage));
mwle_fnLangTable_getCurrentLanguage= (wle_fnLangTable_getCurrentLanguage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnLangTable_getCurrentLanguage"), typeof(wle_fnLangTable_getCurrentLanguage));
mwle_fnLangTable_getLangName= (wle_fnLangTable_getLangName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnLangTable_getLangName"), typeof(wle_fnLangTable_getLangName));
mwle_fnLangTable_getNumLang= (wle_fnLangTable_getNumLang)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnLangTable_getNumLang"), typeof(wle_fnLangTable_getNumLang));
mwle_fn__setInteriorFocusedDebug= (wle_fn__setInteriorFocusedDebug)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__setInteriorFocusedDebug"), typeof(wle_fn__setInteriorFocusedDebug));
mwle_fn__isPointInside= (wle_fn__isPointInside)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__isPointInside"), typeof(wle_fn__isPointInside));
mwle_fn_setInteriorRenderMode= (wle_fn_setInteriorRenderMode)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_setInteriorRenderMode"), typeof(wle_fn_setInteriorRenderMode));
mwle_fnPathedInterior_setPathPosition= (wle_fnPathedInterior_setPathPosition)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPathedInterior_setPathPosition"), typeof(wle_fnPathedInterior_setPathPosition));
mwle_fnPathedInterior_setTargetPosition= (wle_fnPathedInterior_setTargetPosition)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPathedInterior_setTargetPosition"), typeof(wle_fnPathedInterior_setTargetPosition));
mwle_fn_setLightManager= (wle_fn_setLightManager)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_setLightManager"), typeof(wle_fn_setLightManager));
mwle_fn_lightScene= (wle_fn_lightScene)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_lightScene"), typeof(wle_fn_lightScene));
mwle_fn_getLightManagerNames= (wle_fn_getLightManagerNames)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getLightManagerNames"), typeof(wle_fn_getLightManagerNames));
mwle_fn_getActiveLightManager= (wle_fn_getActiveLightManager)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getActiveLightManager"), typeof(wle_fn_getActiveLightManager));
mwle_fn_resetLightManager= (wle_fn_resetLightManager)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_resetLightManager"), typeof(wle_fn_resetLightManager));
mwle_fn__setShadowVizLight= (wle_fn__setShadowVizLight)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__setShadowVizLight"), typeof(wle_fn__setShadowVizLight));
mwle_fnMaterial_flush= (wle_fnMaterial_flush)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMaterial_flush"), typeof(wle_fnMaterial_flush));
mwle_fnMaterial_reload= (wle_fnMaterial_reload)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMaterial_reload"), typeof(wle_fnMaterial_reload));
mwle_fnMaterial_dumpInstances= (wle_fnMaterial_dumpInstances)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMaterial_dumpInstances"), typeof(wle_fnMaterial_dumpInstances));
mwle_fnMaterial_getAnimFlags= (wle_fnMaterial_getAnimFlags)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMaterial_getAnimFlags"), typeof(wle_fnMaterial_getAnimFlags));
mwle_fnMaterial_getFilename= (wle_fnMaterial_getFilename)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMaterial_getFilename"), typeof(wle_fnMaterial_getFilename));
mwle_fnMaterial_isAutoGenerated= (wle_fnMaterial_isAutoGenerated)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMaterial_isAutoGenerated"), typeof(wle_fnMaterial_isAutoGenerated));
mwle_fnMaterial_setAutoGenerated= (wle_fnMaterial_setAutoGenerated)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMaterial_setAutoGenerated"), typeof(wle_fnMaterial_setAutoGenerated));
mwle_fn__addMaterialMapping= (wle_fn__addMaterialMapping)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__addMaterialMapping"), typeof(wle_fn__addMaterialMapping));
mwle_fn__getMaterialMapping= (wle_fn__getMaterialMapping)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__getMaterialMapping"), typeof(wle_fn__getMaterialMapping));
mwle_fn__getRandom= (wle_fn__getRandom)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__getRandom"), typeof(wle_fn__getRandom));
mwle_fn_VectorAdd= (wle_fn_VectorAdd)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_VectorAdd"), typeof(wle_fn_VectorAdd));
mwle_fn_VectorSub= (wle_fn_VectorSub)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_VectorSub"), typeof(wle_fn_VectorSub));
mwle_fn_VectorScale= (wle_fn_VectorScale)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_VectorScale"), typeof(wle_fn_VectorScale));
mwle_fn_VectorNormalize= (wle_fn_VectorNormalize)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_VectorNormalize"), typeof(wle_fn_VectorNormalize));
mwle_fn_VectorDot= (wle_fn_VectorDot)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_VectorDot"), typeof(wle_fn_VectorDot));
mwle_fn_VectorCross= (wle_fn_VectorCross)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_VectorCross"), typeof(wle_fn_VectorCross));
mwle_fn_VectorDist= (wle_fn_VectorDist)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_VectorDist"), typeof(wle_fn_VectorDist));
mwle_fn_VectorLen= (wle_fn_VectorLen)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_VectorLen"), typeof(wle_fn_VectorLen));
mwle_fn_VectorOrthoBasis= (wle_fn_VectorOrthoBasis)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_VectorOrthoBasis"), typeof(wle_fn_VectorOrthoBasis));
mwle_fn_VectorLerp= (wle_fn_VectorLerp)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_VectorLerp"), typeof(wle_fn_VectorLerp));
mwle_fn_MatrixCreate= (wle_fn_MatrixCreate)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_MatrixCreate"), typeof(wle_fn_MatrixCreate));
mwle_fn_MatrixCreateFromEuler= (wle_fn_MatrixCreateFromEuler)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_MatrixCreateFromEuler"), typeof(wle_fn_MatrixCreateFromEuler));
mwle_fn_MatrixMultiply= (wle_fn_MatrixMultiply)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_MatrixMultiply"), typeof(wle_fn_MatrixMultiply));
mwle_fn_MatrixMulVector= (wle_fn_MatrixMulVector)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_MatrixMulVector"), typeof(wle_fn_MatrixMulVector));
mwle_fn_MatrixMulPoint= (wle_fn_MatrixMulPoint)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_MatrixMulPoint"), typeof(wle_fn_MatrixMulPoint));
mwle_fn_getBoxCenter= (wle_fn_getBoxCenter)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getBoxCenter"), typeof(wle_fn_getBoxCenter));
mwle_fn_setRandomSeed= (wle_fn_setRandomSeed)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_setRandomSeed"), typeof(wle_fn_setRandomSeed));
mwle_fn_getRandomSeed= (wle_fn_getRandomSeed)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getRandomSeed"), typeof(wle_fn_getRandomSeed));
mwle_fn_mSolveQuadratic= (wle_fn_mSolveQuadratic)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mSolveQuadratic"), typeof(wle_fn_mSolveQuadratic));
mwle_fn_mSolveCubic= (wle_fn_mSolveCubic)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mSolveCubic"), typeof(wle_fn_mSolveCubic));
mwle_fn_mSolveQuartic= (wle_fn_mSolveQuartic)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mSolveQuartic"), typeof(wle_fn_mSolveQuartic));
mwle_fn_mFloor= (wle_fn_mFloor)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mFloor"), typeof(wle_fn_mFloor));
mwle_fn_mRound= (wle_fn_mRound)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mRound"), typeof(wle_fn_mRound));
mwle_fn_mCeil= (wle_fn_mCeil)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mCeil"), typeof(wle_fn_mCeil));
mwle_fn_mFloatLength= (wle_fn_mFloatLength)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mFloatLength"), typeof(wle_fn_mFloatLength));
mwle_fn_mAbs= (wle_fn_mAbs)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mAbs"), typeof(wle_fn_mAbs));
mwle_fn_mFMod= (wle_fn_mFMod)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mFMod"), typeof(wle_fn_mFMod));
mwle_fn_mSqrt= (wle_fn_mSqrt)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mSqrt"), typeof(wle_fn_mSqrt));
mwle_fn_mPow= (wle_fn_mPow)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mPow"), typeof(wle_fn_mPow));
mwle_fn_mLog= (wle_fn_mLog)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mLog"), typeof(wle_fn_mLog));
mwle_fn_mSin= (wle_fn_mSin)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mSin"), typeof(wle_fn_mSin));
mwle_fn_mCos= (wle_fn_mCos)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mCos"), typeof(wle_fn_mCos));
mwle_fn_mTan= (wle_fn_mTan)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mTan"), typeof(wle_fn_mTan));
mwle_fn_mAsin= (wle_fn_mAsin)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mAsin"), typeof(wle_fn_mAsin));
mwle_fn_mAcos= (wle_fn_mAcos)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mAcos"), typeof(wle_fn_mAcos));
mwle_fn_mAtan= (wle_fn_mAtan)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mAtan"), typeof(wle_fn_mAtan));
mwle_fn_mRadToDeg= (wle_fn_mRadToDeg)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mRadToDeg"), typeof(wle_fn_mRadToDeg));
mwle_fn_mDegToRad= (wle_fn_mDegToRad)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mDegToRad"), typeof(wle_fn_mDegToRad));
mwle_fn_mClamp= (wle_fn_mClamp)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mClamp"), typeof(wle_fn_mClamp));
mwle_fn_mSaturate= (wle_fn_mSaturate)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mSaturate"), typeof(wle_fn_mSaturate));
mwle_fn_getMax= (wle_fn_getMax)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getMax"), typeof(wle_fn_getMax));
mwle_fn_getMin= (wle_fn_getMin)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getMin"), typeof(wle_fn_getMin));
mwle_fn_mLerp= (wle_fn_mLerp)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mLerp"), typeof(wle_fn_mLerp));
mwle_fn_mPi= (wle_fn_mPi)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mPi"), typeof(wle_fn_mPi));
mwle_fn_m2Pi= (wle_fn_m2Pi)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_m2Pi"), typeof(wle_fn_m2Pi));
mwle_fn_mIsPow2= (wle_fn_mIsPow2)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_mIsPow2"), typeof(wle_fn_mIsPow2));
mwle_fnSimResponseCurve_addPoint= (wle_fnSimResponseCurve_addPoint)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimResponseCurve_addPoint"), typeof(wle_fnSimResponseCurve_addPoint));
mwle_fnSimResponseCurve_getValue= (wle_fnSimResponseCurve_getValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimResponseCurve_getValue"), typeof(wle_fnSimResponseCurve_getValue));
mwle_fnSimResponseCurve_clear= (wle_fnSimResponseCurve_clear)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSimResponseCurve_clear"), typeof(wle_fnSimResponseCurve_clear));
mwle_fn__getTemporaryDirectory= (wle_fn__getTemporaryDirectory)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__getTemporaryDirectory"), typeof(wle_fn__getTemporaryDirectory));
mwle_fn__getTemporaryFileName= (wle_fn__getTemporaryFileName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__getTemporaryFileName"), typeof(wle_fn__getTemporaryFileName));
mwle_fn_profilerMarkerEnable= (wle_fn_profilerMarkerEnable)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_profilerMarkerEnable"), typeof(wle_fn_profilerMarkerEnable));
mwle_fn_profilerEnable= (wle_fn_profilerEnable)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_profilerEnable"), typeof(wle_fn_profilerEnable));
mwle_fn_profilerDump= (wle_fn_profilerDump)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_profilerDump"), typeof(wle_fn_profilerDump));
mwle_fn_profilerDumpToFile= (wle_fn_profilerDumpToFile)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_profilerDumpToFile"), typeof(wle_fn_profilerDumpToFile));
mwle_fn_profilerReset= (wle_fn_profilerReset)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_profilerReset"), typeof(wle_fn_profilerReset));
mwle_fnMenuBar_attachToCanvas= (wle_fnMenuBar_attachToCanvas)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMenuBar_attachToCanvas"), typeof(wle_fnMenuBar_attachToCanvas));
mwle_fnMenuBar_removeFromCanvas= (wle_fnMenuBar_removeFromCanvas)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMenuBar_removeFromCanvas"), typeof(wle_fnMenuBar_removeFromCanvas));
mwle_fnMenuBar_insert= (wle_fnMenuBar_insert)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMenuBar_insert"), typeof(wle_fnMenuBar_insert));
mwle_fnPopupMenu_insertItem= (wle_fnPopupMenu_insertItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPopupMenu_insertItem"), typeof(wle_fnPopupMenu_insertItem));
mwle_fnPopupMenu_removeItem= (wle_fnPopupMenu_removeItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPopupMenu_removeItem"), typeof(wle_fnPopupMenu_removeItem));
mwle_fnPopupMenu_insertSubMenu= (wle_fnPopupMenu_insertSubMenu)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPopupMenu_insertSubMenu"), typeof(wle_fnPopupMenu_insertSubMenu));
mwle_fnPopupMenu_setItem= (wle_fnPopupMenu_setItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPopupMenu_setItem"), typeof(wle_fnPopupMenu_setItem));
mwle_fnPopupMenu_enableItem= (wle_fnPopupMenu_enableItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPopupMenu_enableItem"), typeof(wle_fnPopupMenu_enableItem));
mwle_fnPopupMenu_checkItem= (wle_fnPopupMenu_checkItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPopupMenu_checkItem"), typeof(wle_fnPopupMenu_checkItem));
mwle_fnPopupMenu_checkRadioItem= (wle_fnPopupMenu_checkRadioItem)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPopupMenu_checkRadioItem"), typeof(wle_fnPopupMenu_checkRadioItem));
mwle_fnPopupMenu_isItemChecked= (wle_fnPopupMenu_isItemChecked)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPopupMenu_isItemChecked"), typeof(wle_fnPopupMenu_isItemChecked));
mwle_fnPopupMenu_getItemCount= (wle_fnPopupMenu_getItemCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPopupMenu_getItemCount"), typeof(wle_fnPopupMenu_getItemCount));
mwle_fnPopupMenu_attachToMenuBar= (wle_fnPopupMenu_attachToMenuBar)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPopupMenu_attachToMenuBar"), typeof(wle_fnPopupMenu_attachToMenuBar));
mwle_fnPopupMenu_removeFromMenuBar= (wle_fnPopupMenu_removeFromMenuBar)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPopupMenu_removeFromMenuBar"), typeof(wle_fnPopupMenu_removeFromMenuBar));
mwle_fnPopupMenu_showPopup= (wle_fnPopupMenu_showPopup)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPopupMenu_showPopup"), typeof(wle_fnPopupMenu_showPopup));
mwle_fn_messageBox= (wle_fn_messageBox)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_messageBox"), typeof(wle_fn_messageBox));
mwle_fn__isJoystickEnabled= (wle_fn__isJoystickEnabled)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__isJoystickEnabled"), typeof(wle_fn__isJoystickEnabled));
mwle_fn__enableXInput= (wle_fn__enableXInput)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__enableXInput"), typeof(wle_fn__enableXInput));
mwle_fn__isXInputConnected= (wle_fn__isXInputConnected)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__isXInputConnected"), typeof(wle_fn__isXInputConnected));
mwle_fn__getXInputState= (wle_fn__getXInputState)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__getXInputState"), typeof(wle_fn__getXInputState));
mwle_fn__rumble= (wle_fn__rumble)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__rumble"), typeof(wle_fn__rumble));
mwle_fnFileDialog_Execute= (wle_fnFileDialog_Execute)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnFileDialog_Execute"), typeof(wle_fnFileDialog_Execute));
mwle_fn__debug_debugbreak= (wle_fn__debug_debugbreak)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__debug_debugbreak"), typeof(wle_fn__debug_debugbreak));
mwle_fn_dumpRandomNormalMap= (wle_fn_dumpRandomNormalMap)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_dumpRandomNormalMap"), typeof(wle_fn_dumpRandomNormalMap));
mwle_fnPostEffect_reload= (wle_fnPostEffect_reload)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPostEffect_reload"), typeof(wle_fnPostEffect_reload));
mwle_fnPostEffect_enable= (wle_fnPostEffect_enable)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPostEffect_enable"), typeof(wle_fnPostEffect_enable));
mwle_fnPostEffect_disable= (wle_fnPostEffect_disable)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPostEffect_disable"), typeof(wle_fnPostEffect_disable));
mwle_fnPostEffect_toggle= (wle_fnPostEffect_toggle)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPostEffect_toggle"), typeof(wle_fnPostEffect_toggle));
mwle_fnPostEffect_isEnabled= (wle_fnPostEffect_isEnabled)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPostEffect_isEnabled"), typeof(wle_fnPostEffect_isEnabled));
mwle_fnPostEffect_setTexture= (wle_fnPostEffect_setTexture)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPostEffect_setTexture"), typeof(wle_fnPostEffect_setTexture));
mwle_fnPostEffect_setShaderConst= (wle_fnPostEffect_setShaderConst)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPostEffect_setShaderConst"), typeof(wle_fnPostEffect_setShaderConst));
mwle_fnPostEffect_getAspectRatio= (wle_fnPostEffect_getAspectRatio)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPostEffect_getAspectRatio"), typeof(wle_fnPostEffect_getAspectRatio));
mwle_fnPostEffect_dumpShaderDisassembly= (wle_fnPostEffect_dumpShaderDisassembly)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPostEffect_dumpShaderDisassembly"), typeof(wle_fnPostEffect_dumpShaderDisassembly));
mwle_fnPostEffect_setShaderMacro= (wle_fnPostEffect_setShaderMacro)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPostEffect_setShaderMacro"), typeof(wle_fnPostEffect_setShaderMacro));
mwle_fnPostEffect_removeShaderMacro= (wle_fnPostEffect_removeShaderMacro)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPostEffect_removeShaderMacro"), typeof(wle_fnPostEffect_removeShaderMacro));
mwle_fnPostEffect_clearShaderMacros= (wle_fnPostEffect_clearShaderMacros)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPostEffect_clearShaderMacros"), typeof(wle_fnPostEffect_clearShaderMacros));
mwle_fnRenderBinManager_getBinType= (wle_fnRenderBinManager_getBinType)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnRenderBinManager_getBinType"), typeof(wle_fnRenderBinManager_getBinType));
mwle_fnRenderPassManager_getManagerCount= (wle_fnRenderPassManager_getManagerCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnRenderPassManager_getManagerCount"), typeof(wle_fnRenderPassManager_getManagerCount));
mwle_fnRenderPassManager_getManager= (wle_fnRenderPassManager_getManager)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnRenderPassManager_getManager"), typeof(wle_fnRenderPassManager_getManager));
mwle_fnRenderPassManager_addManager= (wle_fnRenderPassManager_addManager)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnRenderPassManager_addManager"), typeof(wle_fnRenderPassManager_addManager));
mwle_fnRenderPassManager_removeManager= (wle_fnRenderPassManager_removeManager)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnRenderPassManager_removeManager"), typeof(wle_fnRenderPassManager_removeManager));
mwle_fnRenderPassStateToken_enable= (wle_fnRenderPassStateToken_enable)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnRenderPassStateToken_enable"), typeof(wle_fnRenderPassStateToken_enable));
mwle_fnRenderPassStateToken_disable= (wle_fnRenderPassStateToken_disable)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnRenderPassStateToken_disable"), typeof(wle_fnRenderPassStateToken_disable));
mwle_fnRenderPassStateToken_toggle= (wle_fnRenderPassStateToken_toggle)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnRenderPassStateToken_toggle"), typeof(wle_fnRenderPassStateToken_toggle));
mwle_fn__clearClientPaths= (wle_fn__clearClientPaths)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__clearClientPaths"), typeof(wle_fn__clearClientPaths));
mwle_fn_setReflectFormat= (wle_fn_setReflectFormat)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_setReflectFormat"), typeof(wle_fn_setReflectFormat));
mwle_fn_containerBoxEmpty= (wle_fn_containerBoxEmpty)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_containerBoxEmpty"), typeof(wle_fn_containerBoxEmpty));
mwle_fn_initContainerRadiusSearch= (wle_fn_initContainerRadiusSearch)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_initContainerRadiusSearch"), typeof(wle_fn_initContainerRadiusSearch));
mwle_fn_initContainerTypeSearch= (wle_fn_initContainerTypeSearch)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_initContainerTypeSearch"), typeof(wle_fn_initContainerTypeSearch));
mwle_fn_containerSearchNext= (wle_fn_containerSearchNext)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_containerSearchNext"), typeof(wle_fn_containerSearchNext));
mwle_fn_containerSearchCurrDist= (wle_fn_containerSearchCurrDist)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_containerSearchCurrDist"), typeof(wle_fn_containerSearchCurrDist));
mwle_fn_containerSearchCurrRadiusDist= (wle_fn_containerSearchCurrRadiusDist)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_containerSearchCurrRadiusDist"), typeof(wle_fn_containerSearchCurrRadiusDist));
mwle_fn_containerRayCast= (wle_fn_containerRayCast)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_containerRayCast"), typeof(wle_fn_containerRayCast));
mwle_fn_sceneDumpZoneStates= (wle_fn_sceneDumpZoneStates)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_sceneDumpZoneStates"), typeof(wle_fn_sceneDumpZoneStates));
mwle_fn_sceneGetZoneOwner= (wle_fn_sceneGetZoneOwner)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_sceneGetZoneOwner"), typeof(wle_fn_sceneGetZoneOwner));
mwle_fnSceneObject_getType= (wle_fnSceneObject_getType)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_getType"), typeof(wle_fnSceneObject_getType));
mwle_fnSceneObject_mountObject= (wle_fnSceneObject_mountObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_mountObject"), typeof(wle_fnSceneObject_mountObject));
mwle_fnSceneObject_unmountObject= (wle_fnSceneObject_unmountObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_unmountObject"), typeof(wle_fnSceneObject_unmountObject));
mwle_fnSceneObject_unmount= (wle_fnSceneObject_unmount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_unmount"), typeof(wle_fnSceneObject_unmount));
mwle_fnSceneObject_isMounted= (wle_fnSceneObject_isMounted)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_isMounted"), typeof(wle_fnSceneObject_isMounted));
mwle_fnSceneObject_getObjectMount= (wle_fnSceneObject_getObjectMount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_getObjectMount"), typeof(wle_fnSceneObject_getObjectMount));
mwle_fnSceneObject_getMountedObjectCount= (wle_fnSceneObject_getMountedObjectCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_getMountedObjectCount"), typeof(wle_fnSceneObject_getMountedObjectCount));
mwle_fnSceneObject_getMountedObject= (wle_fnSceneObject_getMountedObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_getMountedObject"), typeof(wle_fnSceneObject_getMountedObject));
mwle_fnSceneObject_getMountedObjectNode= (wle_fnSceneObject_getMountedObjectNode)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_getMountedObjectNode"), typeof(wle_fnSceneObject_getMountedObjectNode));
mwle_fnSceneObject_getMountNodeObject= (wle_fnSceneObject_getMountNodeObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_getMountNodeObject"), typeof(wle_fnSceneObject_getMountNodeObject));
mwle_fnSceneObject_getTransform= (wle_fnSceneObject_getTransform)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_getTransform"), typeof(wle_fnSceneObject_getTransform));
mwle_fnSceneObject_getInverseTransform= (wle_fnSceneObject_getInverseTransform)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_getInverseTransform"), typeof(wle_fnSceneObject_getInverseTransform));
mwle_fnSceneObject_getPosition= (wle_fnSceneObject_getPosition)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_getPosition"), typeof(wle_fnSceneObject_getPosition));
mwle_fnSceneObject_getEulerRotation= (wle_fnSceneObject_getEulerRotation)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_getEulerRotation"), typeof(wle_fnSceneObject_getEulerRotation));
mwle_fnSceneObject_getForwardVector= (wle_fnSceneObject_getForwardVector)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_getForwardVector"), typeof(wle_fnSceneObject_getForwardVector));
mwle_fnSceneObject_getRightVector= (wle_fnSceneObject_getRightVector)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_getRightVector"), typeof(wle_fnSceneObject_getRightVector));
mwle_fnSceneObject_getUpVector= (wle_fnSceneObject_getUpVector)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_getUpVector"), typeof(wle_fnSceneObject_getUpVector));
mwle_fnSceneObject_setTransform= (wle_fnSceneObject_setTransform)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_setTransform"), typeof(wle_fnSceneObject_setTransform));
mwle_fnSceneObject_getScale= (wle_fnSceneObject_getScale)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_getScale"), typeof(wle_fnSceneObject_getScale));
mwle_fnSceneObject_setScale= (wle_fnSceneObject_setScale)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_setScale"), typeof(wle_fnSceneObject_setScale));
mwle_fnSceneObject_getWorldBox= (wle_fnSceneObject_getWorldBox)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_getWorldBox"), typeof(wle_fnSceneObject_getWorldBox));
mwle_fnSceneObject_getWorldBoxCenter= (wle_fnSceneObject_getWorldBoxCenter)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_getWorldBoxCenter"), typeof(wle_fnSceneObject_getWorldBoxCenter));
mwle_fnSceneObject_getObjectBox= (wle_fnSceneObject_getObjectBox)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_getObjectBox"), typeof(wle_fnSceneObject_getObjectBox));
mwle_fnSceneObject_isGlobalBounds= (wle_fnSceneObject_isGlobalBounds)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSceneObject_isGlobalBounds"), typeof(wle_fnSceneObject_isGlobalBounds));
mwle_fn_pathOnMissionLoadDone= (wle_fn_pathOnMissionLoadDone)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_pathOnMissionLoadDone"), typeof(wle_fn_pathOnMissionLoadDone));
mwle_fnSFXController_getCurrentSlot= (wle_fnSFXController_getCurrentSlot)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXController_getCurrentSlot"), typeof(wle_fnSFXController_getCurrentSlot));
mwle_fnSFXController_setCurrentSlot= (wle_fnSFXController_setCurrentSlot)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXController_setCurrentSlot"), typeof(wle_fnSFXController_setCurrentSlot));
mwle_fnSFXParameter_getParameterName= (wle_fnSFXParameter_getParameterName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXParameter_getParameterName"), typeof(wle_fnSFXParameter_getParameterName));
mwle_fnSFXParameter_reset= (wle_fnSFXParameter_reset)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXParameter_reset"), typeof(wle_fnSFXParameter_reset));
mwle_fnSFXProfile_getSoundDuration= (wle_fnSFXProfile_getSoundDuration)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXProfile_getSoundDuration"), typeof(wle_fnSFXProfile_getSoundDuration));
mwle_fnSFXSource_setTransform= (wle_fnSFXSource_setTransform)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_setTransform"), typeof(wle_fnSFXSource_setTransform));
mwle_fnSFXSource_play= (wle_fnSFXSource_play)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_play"), typeof(wle_fnSFXSource_play));
mwle_fnSFXSource_stop= (wle_fnSFXSource_stop)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_stop"), typeof(wle_fnSFXSource_stop));
mwle_fnSFXSource_pause= (wle_fnSFXSource_pause)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_pause"), typeof(wle_fnSFXSource_pause));
mwle_fnSFXSource_isPlaying= (wle_fnSFXSource_isPlaying)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_isPlaying"), typeof(wle_fnSFXSource_isPlaying));
mwle_fnSFXSource_isPaused= (wle_fnSFXSource_isPaused)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_isPaused"), typeof(wle_fnSFXSource_isPaused));
mwle_fnSFXSource_isStopped= (wle_fnSFXSource_isStopped)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_isStopped"), typeof(wle_fnSFXSource_isStopped));
mwle_fnSFXSource_getStatus= (wle_fnSFXSource_getStatus)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_getStatus"), typeof(wle_fnSFXSource_getStatus));
mwle_fnSFXSource_getVolume= (wle_fnSFXSource_getVolume)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_getVolume"), typeof(wle_fnSFXSource_getVolume));
mwle_fnSFXSource_setVolume= (wle_fnSFXSource_setVolume)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_setVolume"), typeof(wle_fnSFXSource_setVolume));
mwle_fnSFXSource_getAttenuatedVolume= (wle_fnSFXSource_getAttenuatedVolume)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_getAttenuatedVolume"), typeof(wle_fnSFXSource_getAttenuatedVolume));
mwle_fnSFXSource_getFadeInTime= (wle_fnSFXSource_getFadeInTime)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_getFadeInTime"), typeof(wle_fnSFXSource_getFadeInTime));
mwle_fnSFXSource_getFadeOutTime= (wle_fnSFXSource_getFadeOutTime)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_getFadeOutTime"), typeof(wle_fnSFXSource_getFadeOutTime));
mwle_fnSFXSource_setFadeTimes= (wle_fnSFXSource_setFadeTimes)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_setFadeTimes"), typeof(wle_fnSFXSource_setFadeTimes));
mwle_fnSFXSource_getPitch= (wle_fnSFXSource_getPitch)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_getPitch"), typeof(wle_fnSFXSource_getPitch));
mwle_fnSFXSource_setPitch= (wle_fnSFXSource_setPitch)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_setPitch"), typeof(wle_fnSFXSource_setPitch));
mwle_fnSFXSource_setCone= (wle_fnSFXSource_setCone)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_setCone"), typeof(wle_fnSFXSource_setCone));
mwle_fnSFXSource_getParameterCount= (wle_fnSFXSource_getParameterCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_getParameterCount"), typeof(wle_fnSFXSource_getParameterCount));
mwle_fnSFXSource_addParameter= (wle_fnSFXSource_addParameter)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_addParameter"), typeof(wle_fnSFXSource_addParameter));
mwle_fnSFXSource_removeParameter= (wle_fnSFXSource_removeParameter)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_removeParameter"), typeof(wle_fnSFXSource_removeParameter));
mwle_fnSFXSource_getParameter= (wle_fnSFXSource_getParameter)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_getParameter"), typeof(wle_fnSFXSource_getParameter));
mwle_fnSFXSource_addMarker= (wle_fnSFXSource_addMarker)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSFXSource_addMarker"), typeof(wle_fnSFXSource_addMarker));
mwle_fn__sfxCreateSource= (wle_fn__sfxCreateSource)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__sfxCreateSource"), typeof(wle_fn__sfxCreateSource));
mwle_fn__sfxPlay= (wle_fn__sfxPlay)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__sfxPlay"), typeof(wle_fn__sfxPlay));
mwle_fn__sfxPlayOnce= (wle_fn__sfxPlayOnce)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__sfxPlayOnce"), typeof(wle_fn__sfxPlayOnce));
mwle_fn_sfxGetAvailableDevices= (wle_fn_sfxGetAvailableDevices)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_sfxGetAvailableDevices"), typeof(wle_fn_sfxGetAvailableDevices));
mwle_fn_sfxCreateDevice= (wle_fn_sfxCreateDevice)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_sfxCreateDevice"), typeof(wle_fn_sfxCreateDevice));
mwle_fn_sfxDeleteDevice= (wle_fn_sfxDeleteDevice)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_sfxDeleteDevice"), typeof(wle_fn_sfxDeleteDevice));
mwle_fn_sfxGetDeviceInfo= (wle_fn_sfxGetDeviceInfo)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_sfxGetDeviceInfo"), typeof(wle_fn_sfxGetDeviceInfo));
mwle_fn_sfxStop= (wle_fn_sfxStop)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_sfxStop"), typeof(wle_fn_sfxStop));
mwle_fn_sfxStopAndDelete= (wle_fn_sfxStopAndDelete)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_sfxStopAndDelete"), typeof(wle_fn_sfxStopAndDelete));
mwle_fn_sfxDeleteWhenStopped= (wle_fn_sfxDeleteWhenStopped)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_sfxDeleteWhenStopped"), typeof(wle_fn_sfxDeleteWhenStopped));
mwle_fn_sfxGetDistanceModel= (wle_fn_sfxGetDistanceModel)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_sfxGetDistanceModel"), typeof(wle_fn_sfxGetDistanceModel));
mwle_fn_sfxSetDistanceModel= (wle_fn_sfxSetDistanceModel)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_sfxSetDistanceModel"), typeof(wle_fn_sfxSetDistanceModel));
mwle_fn_sfxGetDopplerFactor= (wle_fn_sfxGetDopplerFactor)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_sfxGetDopplerFactor"), typeof(wle_fn_sfxGetDopplerFactor));
mwle_fn_sfxSetDopplerFactor= (wle_fn_sfxSetDopplerFactor)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_sfxSetDopplerFactor"), typeof(wle_fn_sfxSetDopplerFactor));
mwle_fn_sfxGetRolloffFactor= (wle_fn_sfxGetRolloffFactor)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_sfxGetRolloffFactor"), typeof(wle_fn_sfxGetRolloffFactor));
mwle_fn_sfxSetRolloffFactor= (wle_fn_sfxSetRolloffFactor)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_sfxSetRolloffFactor"), typeof(wle_fn_sfxSetRolloffFactor));
mwle_fn_sfxDumpSources= (wle_fn_sfxDumpSources)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_sfxDumpSources"), typeof(wle_fn_sfxDumpSources));
mwle_fn_sfxDumpSourcesToString= (wle_fn_sfxDumpSourcesToString)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_sfxDumpSourcesToString"), typeof(wle_fn_sfxDumpSourcesToString));
mwle_fnActionMap_bind= (wle_fnActionMap_bind)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnActionMap_bind"), typeof(wle_fnActionMap_bind));
mwle_fnActionMap_bindObj= (wle_fnActionMap_bindObj)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnActionMap_bindObj"), typeof(wle_fnActionMap_bindObj));
mwle_fn_getCurrentActionMap= (wle_fn_getCurrentActionMap)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getCurrentActionMap"), typeof(wle_fn_getCurrentActionMap));
mwle_fnActionMap_bindCmd= (wle_fnActionMap_bindCmd)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnActionMap_bindCmd"), typeof(wle_fnActionMap_bindCmd));
mwle_fnActionMap_unbind= (wle_fnActionMap_unbind)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnActionMap_unbind"), typeof(wle_fnActionMap_unbind));
mwle_fnActionMap_unbindObj= (wle_fnActionMap_unbindObj)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnActionMap_unbindObj"), typeof(wle_fnActionMap_unbindObj));
mwle_fnActionMap_save= (wle_fnActionMap_save)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnActionMap_save"), typeof(wle_fnActionMap_save));
mwle_fnActionMap_push= (wle_fnActionMap_push)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnActionMap_push"), typeof(wle_fnActionMap_push));
mwle_fnActionMap_pop= (wle_fnActionMap_pop)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnActionMap_pop"), typeof(wle_fnActionMap_pop));
mwle_fnActionMap_getBinding= (wle_fnActionMap_getBinding)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnActionMap_getBinding"), typeof(wle_fnActionMap_getBinding));
mwle_fnActionMap_getCommand= (wle_fnActionMap_getCommand)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnActionMap_getCommand"), typeof(wle_fnActionMap_getCommand));
mwle_fnActionMap_isInverted= (wle_fnActionMap_isInverted)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnActionMap_isInverted"), typeof(wle_fnActionMap_isInverted));
mwle_fnActionMap_getScale= (wle_fnActionMap_getScale)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnActionMap_getScale"), typeof(wle_fnActionMap_getScale));
mwle_fnActionMap_getDeadZone= (wle_fnActionMap_getDeadZone)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnActionMap_getDeadZone"), typeof(wle_fnActionMap_getDeadZone));
mwle_fnNetConnection_transmitPaths= (wle_fnNetConnection_transmitPaths)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetConnection_transmitPaths"), typeof(wle_fnNetConnection_transmitPaths));
mwle_fnNetConnection_clearPaths= (wle_fnNetConnection_clearPaths)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetConnection_clearPaths"), typeof(wle_fnNetConnection_clearPaths));
mwle_fnNetConnection_getAddress= (wle_fnNetConnection_getAddress)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetConnection_getAddress"), typeof(wle_fnNetConnection_getAddress));
mwle_fnNetConnection_setSimulatedNetParams= (wle_fnNetConnection_setSimulatedNetParams)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetConnection_setSimulatedNetParams"), typeof(wle_fnNetConnection_setSimulatedNetParams));
mwle_fnNetConnection_getPing= (wle_fnNetConnection_getPing)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetConnection_getPing"), typeof(wle_fnNetConnection_getPing));
mwle_fnNetConnection_getPacketLoss= (wle_fnNetConnection_getPacketLoss)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetConnection_getPacketLoss"), typeof(wle_fnNetConnection_getPacketLoss));
mwle_fnNetConnection_checkMaxRate= (wle_fnNetConnection_checkMaxRate)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetConnection_checkMaxRate"), typeof(wle_fnNetConnection_checkMaxRate));
mwle_fnNetConnection_resolveGhostID= (wle_fnNetConnection_resolveGhostID)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetConnection_resolveGhostID"), typeof(wle_fnNetConnection_resolveGhostID));
mwle_fnNetConnection_resolveObjectFromGhostIndex= (wle_fnNetConnection_resolveObjectFromGhostIndex)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetConnection_resolveObjectFromGhostIndex"), typeof(wle_fnNetConnection_resolveObjectFromGhostIndex));
mwle_fnNetConnection_getGhostID= (wle_fnNetConnection_getGhostID)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetConnection_getGhostID"), typeof(wle_fnNetConnection_getGhostID));
mwle_fnNetConnection_connect= (wle_fnNetConnection_connect)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetConnection_connect"), typeof(wle_fnNetConnection_connect));
mwle_fnNetConnection_connectLocal= (wle_fnNetConnection_connectLocal)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetConnection_connectLocal"), typeof(wle_fnNetConnection_connectLocal));
mwle_fnNetConnection_getGhostsActive= (wle_fnNetConnection_getGhostsActive)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetConnection_getGhostsActive"), typeof(wle_fnNetConnection_getGhostsActive));
mwle_fnNetObject_scopeToClient= (wle_fnNetObject_scopeToClient)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetObject_scopeToClient"), typeof(wle_fnNetObject_scopeToClient));
mwle_fnNetObject_clearScopeToClient= (wle_fnNetObject_clearScopeToClient)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetObject_clearScopeToClient"), typeof(wle_fnNetObject_clearScopeToClient));
mwle_fnNetObject_setScopeAlways= (wle_fnNetObject_setScopeAlways)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetObject_setScopeAlways"), typeof(wle_fnNetObject_setScopeAlways));
mwle_fnNetObject_getGhostID= (wle_fnNetObject_getGhostID)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetObject_getGhostID"), typeof(wle_fnNetObject_getGhostID));
mwle_fnNetObject_getClientObject= (wle_fnNetObject_getClientObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetObject_getClientObject"), typeof(wle_fnNetObject_getClientObject));
mwle_fnNetObject_getServerObject= (wle_fnNetObject_getServerObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetObject_getServerObject"), typeof(wle_fnNetObject_getServerObject));
mwle_fnNetObject_isClientObject= (wle_fnNetObject_isClientObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetObject_isClientObject"), typeof(wle_fnNetObject_isClientObject));
mwle_fnNetObject_isServerObject= (wle_fnNetObject_isServerObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetObject_isServerObject"), typeof(wle_fnNetObject_isServerObject));
mwle_fn__aiAddPlayer= (wle_fn__aiAddPlayer)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__aiAddPlayer"), typeof(wle_fn__aiAddPlayer));
mwle_fnAIClient_setMoveSpeed= (wle_fnAIClient_setMoveSpeed)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIClient_setMoveSpeed"), typeof(wle_fnAIClient_setMoveSpeed));
mwle_fnAIClient_stop= (wle_fnAIClient_stop)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIClient_stop"), typeof(wle_fnAIClient_stop));
mwle_fnAIClient_setAimLocation= (wle_fnAIClient_setAimLocation)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIClient_setAimLocation"), typeof(wle_fnAIClient_setAimLocation));
mwle_fnAIClient_setMoveDestination= (wle_fnAIClient_setMoveDestination)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIClient_setMoveDestination"), typeof(wle_fnAIClient_setMoveDestination));
mwle_fnAIClient_getAimLocation= (wle_fnAIClient_getAimLocation)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIClient_getAimLocation"), typeof(wle_fnAIClient_getAimLocation));
mwle_fnAIClient_getMoveDestination= (wle_fnAIClient_getMoveDestination)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIClient_getMoveDestination"), typeof(wle_fnAIClient_getMoveDestination));
mwle_fnAIClient_setTargetObject= (wle_fnAIClient_setTargetObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIClient_setTargetObject"), typeof(wle_fnAIClient_setTargetObject));
mwle_fnAIClient_getTargetObject= (wle_fnAIClient_getTargetObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIClient_getTargetObject"), typeof(wle_fnAIClient_getTargetObject));
mwle_fnAIClient_missionCycleCleanup= (wle_fnAIClient_missionCycleCleanup)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIClient_missionCycleCleanup"), typeof(wle_fnAIClient_missionCycleCleanup));
mwle_fnAIClient_move= (wle_fnAIClient_move)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIClient_move"), typeof(wle_fnAIClient_move));
mwle_fnAIClient_getLocation= (wle_fnAIClient_getLocation)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIClient_getLocation"), typeof(wle_fnAIClient_getLocation));
mwle_fnAIClient_moveForward= (wle_fnAIClient_moveForward)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIClient_moveForward"), typeof(wle_fnAIClient_moveForward));
mwle_fn__aiConnect= (wle_fn__aiConnect)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__aiConnect"), typeof(wle_fn__aiConnect));
mwle_fnAIConnection_setMove= (wle_fnAIConnection_setMove)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIConnection_setMove"), typeof(wle_fnAIConnection_setMove));
mwle_fnAIConnection_getMove= (wle_fnAIConnection_getMove)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIConnection_getMove"), typeof(wle_fnAIConnection_getMove));
mwle_fnAIConnection_setFreeLook= (wle_fnAIConnection_setFreeLook)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIConnection_setFreeLook"), typeof(wle_fnAIConnection_setFreeLook));
mwle_fnAIConnection_getFreeLook= (wle_fnAIConnection_getFreeLook)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIConnection_getFreeLook"), typeof(wle_fnAIConnection_getFreeLook));
mwle_fnAIConnection_setTrigger= (wle_fnAIConnection_setTrigger)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIConnection_setTrigger"), typeof(wle_fnAIConnection_setTrigger));
mwle_fnAIConnection_getTrigger= (wle_fnAIConnection_getTrigger)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIConnection_getTrigger"), typeof(wle_fnAIConnection_getTrigger));
mwle_fnAIConnection_getAddress= (wle_fnAIConnection_getAddress)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIConnection_getAddress"), typeof(wle_fnAIConnection_getAddress));
mwle_fnAIPlayer_setAimObject= (wle_fnAIPlayer_setAimObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIPlayer_setAimObject"), typeof(wle_fnAIPlayer_setAimObject));
mwle_fnAIPlayer_stop= (wle_fnAIPlayer_stop)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIPlayer_stop"), typeof(wle_fnAIPlayer_stop));
mwle_fnAIPlayer_clearAim= (wle_fnAIPlayer_clearAim)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIPlayer_clearAim"), typeof(wle_fnAIPlayer_clearAim));
mwle_fnAIPlayer_setMoveSpeed= (wle_fnAIPlayer_setMoveSpeed)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIPlayer_setMoveSpeed"), typeof(wle_fnAIPlayer_setMoveSpeed));
mwle_fnAIPlayer_getMoveSpeed= (wle_fnAIPlayer_getMoveSpeed)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIPlayer_getMoveSpeed"), typeof(wle_fnAIPlayer_getMoveSpeed));
mwle_fnAIPlayer_setMoveDestination= (wle_fnAIPlayer_setMoveDestination)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIPlayer_setMoveDestination"), typeof(wle_fnAIPlayer_setMoveDestination));
mwle_fnAIPlayer_getMoveDestination= (wle_fnAIPlayer_getMoveDestination)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIPlayer_getMoveDestination"), typeof(wle_fnAIPlayer_getMoveDestination));
mwle_fnAIPlayer_setAimLocation= (wle_fnAIPlayer_setAimLocation)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIPlayer_setAimLocation"), typeof(wle_fnAIPlayer_setAimLocation));
mwle_fnAIPlayer_getAimLocation= (wle_fnAIPlayer_getAimLocation)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIPlayer_getAimLocation"), typeof(wle_fnAIPlayer_getAimLocation));
mwle_fnAIPlayer_getAimObject= (wle_fnAIPlayer_getAimObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAIPlayer_getAimObject"), typeof(wle_fnAIPlayer_getAimObject));
mwle_fnCamera_getMode= (wle_fnCamera_getMode)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_getMode"), typeof(wle_fnCamera_getMode));
mwle_fnCamera_getPosition= (wle_fnCamera_getPosition)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_getPosition"), typeof(wle_fnCamera_getPosition));
mwle_fnCamera_getRotation= (wle_fnCamera_getRotation)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_getRotation"), typeof(wle_fnCamera_getRotation));
mwle_fnCamera_setRotation= (wle_fnCamera_setRotation)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_setRotation"), typeof(wle_fnCamera_setRotation));
mwle_fnCamera_getOffset= (wle_fnCamera_getOffset)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_getOffset"), typeof(wle_fnCamera_getOffset));
mwle_fnCamera_setOffset= (wle_fnCamera_setOffset)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_setOffset"), typeof(wle_fnCamera_setOffset));
mwle_fnCamera_setOrbitMode= (wle_fnCamera_setOrbitMode)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_setOrbitMode"), typeof(wle_fnCamera_setOrbitMode));
mwle_fnCamera_setOrbitObject= (wle_fnCamera_setOrbitObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_setOrbitObject"), typeof(wle_fnCamera_setOrbitObject));
mwle_fnCamera_setOrbitPoint= (wle_fnCamera_setOrbitPoint)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_setOrbitPoint"), typeof(wle_fnCamera_setOrbitPoint));
mwle_fnCamera_setTrackObject= (wle_fnCamera_setTrackObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_setTrackObject"), typeof(wle_fnCamera_setTrackObject));
mwle_fnCamera_setEditOrbitMode= (wle_fnCamera_setEditOrbitMode)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_setEditOrbitMode"), typeof(wle_fnCamera_setEditOrbitMode));
mwle_fnCamera_setFlyMode= (wle_fnCamera_setFlyMode)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_setFlyMode"), typeof(wle_fnCamera_setFlyMode));
mwle_fnCamera_setNewtonFlyMode= (wle_fnCamera_setNewtonFlyMode)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_setNewtonFlyMode"), typeof(wle_fnCamera_setNewtonFlyMode));
mwle_fnCamera_isRotationDamped= (wle_fnCamera_isRotationDamped)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_isRotationDamped"), typeof(wle_fnCamera_isRotationDamped));
mwle_fnCamera_getAngularVelocity= (wle_fnCamera_getAngularVelocity)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_getAngularVelocity"), typeof(wle_fnCamera_getAngularVelocity));
mwle_fnCamera_setAngularVelocity= (wle_fnCamera_setAngularVelocity)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_setAngularVelocity"), typeof(wle_fnCamera_setAngularVelocity));
mwle_fnCamera_setAngularForce= (wle_fnCamera_setAngularForce)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_setAngularForce"), typeof(wle_fnCamera_setAngularForce));
mwle_fnCamera_setAngularDrag= (wle_fnCamera_setAngularDrag)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_setAngularDrag"), typeof(wle_fnCamera_setAngularDrag));
mwle_fnCamera_setMass= (wle_fnCamera_setMass)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_setMass"), typeof(wle_fnCamera_setMass));
mwle_fnCamera_getVelocity= (wle_fnCamera_getVelocity)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_getVelocity"), typeof(wle_fnCamera_getVelocity));
mwle_fnCamera_setVelocity= (wle_fnCamera_setVelocity)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_setVelocity"), typeof(wle_fnCamera_setVelocity));
mwle_fnCamera_setDrag= (wle_fnCamera_setDrag)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_setDrag"), typeof(wle_fnCamera_setDrag));
mwle_fnCamera_setFlyForce= (wle_fnCamera_setFlyForce)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_setFlyForce"), typeof(wle_fnCamera_setFlyForce));
mwle_fnCamera_setSpeedMultiplier= (wle_fnCamera_setSpeedMultiplier)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_setSpeedMultiplier"), typeof(wle_fnCamera_setSpeedMultiplier));
mwle_fnCamera_setBrakeMultiplier= (wle_fnCamera_setBrakeMultiplier)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_setBrakeMultiplier"), typeof(wle_fnCamera_setBrakeMultiplier));
mwle_fnCamera_isEditOrbitMode= (wle_fnCamera_isEditOrbitMode)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_isEditOrbitMode"), typeof(wle_fnCamera_isEditOrbitMode));
mwle_fnCamera_setValidEditOrbitPoint= (wle_fnCamera_setValidEditOrbitPoint)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_setValidEditOrbitPoint"), typeof(wle_fnCamera_setValidEditOrbitPoint));
mwle_fnCamera_setEditOrbitPoint= (wle_fnCamera_setEditOrbitPoint)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_setEditOrbitPoint"), typeof(wle_fnCamera_setEditOrbitPoint));
mwle_fnCamera_autoFitRadius= (wle_fnCamera_autoFitRadius)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_autoFitRadius"), typeof(wle_fnCamera_autoFitRadius));
mwle_fnCamera_lookAt= (wle_fnCamera_lookAt)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCamera_lookAt"), typeof(wle_fnCamera_lookAt));
mwle_fnDebris_init= (wle_fnDebris_init)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnDebris_init"), typeof(wle_fnDebris_init));
mwle_fn__containerFindFirst= (wle_fn__containerFindFirst)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__containerFindFirst"), typeof(wle_fn__containerFindFirst));
mwle_fn__containerFindNext= (wle_fn__containerFindNext)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__containerFindNext"), typeof(wle_fn__containerFindNext));
mwle_fnGroundPlane_postApply= (wle_fnGroundPlane_postApply)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGroundPlane_postApply"), typeof(wle_fnGroundPlane_postApply));
mwle_fnGuiMaterialPreview_setModel= (wle_fnGuiMaterialPreview_setModel)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMaterialPreview_setModel"), typeof(wle_fnGuiMaterialPreview_setModel));
mwle_fnGuiMaterialPreview_deleteModel= (wle_fnGuiMaterialPreview_deleteModel)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMaterialPreview_deleteModel"), typeof(wle_fnGuiMaterialPreview_deleteModel));
mwle_fnGuiMaterialPreview_setOrbitDistance= (wle_fnGuiMaterialPreview_setOrbitDistance)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMaterialPreview_setOrbitDistance"), typeof(wle_fnGuiMaterialPreview_setOrbitDistance));
mwle_fnGuiMaterialPreview_reset= (wle_fnGuiMaterialPreview_reset)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMaterialPreview_reset"), typeof(wle_fnGuiMaterialPreview_reset));
mwle_fnGuiMaterialPreview_setLightColor= (wle_fnGuiMaterialPreview_setLightColor)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMaterialPreview_setLightColor"), typeof(wle_fnGuiMaterialPreview_setLightColor));
mwle_fnGuiMaterialPreview_setAmbientLightColor= (wle_fnGuiMaterialPreview_setAmbientLightColor)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiMaterialPreview_setAmbientLightColor"), typeof(wle_fnGuiMaterialPreview_setAmbientLightColor));
mwle_fnGuiObjectView_getModel= (wle_fnGuiObjectView_getModel)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiObjectView_getModel"), typeof(wle_fnGuiObjectView_getModel));
mwle_fnGuiObjectView_setModel= (wle_fnGuiObjectView_setModel)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiObjectView_setModel"), typeof(wle_fnGuiObjectView_setModel));
mwle_fnGuiObjectView_getMountedModel= (wle_fnGuiObjectView_getMountedModel)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiObjectView_getMountedModel"), typeof(wle_fnGuiObjectView_getMountedModel));
mwle_fnGuiObjectView_setMountedModel= (wle_fnGuiObjectView_setMountedModel)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiObjectView_setMountedModel"), typeof(wle_fnGuiObjectView_setMountedModel));
mwle_fnGuiObjectView_getSkin= (wle_fnGuiObjectView_getSkin)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiObjectView_getSkin"), typeof(wle_fnGuiObjectView_getSkin));
mwle_fnGuiObjectView_setSkin= (wle_fnGuiObjectView_setSkin)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiObjectView_setSkin"), typeof(wle_fnGuiObjectView_setSkin));
mwle_fnGuiObjectView_getMountSkin= (wle_fnGuiObjectView_getMountSkin)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiObjectView_getMountSkin"), typeof(wle_fnGuiObjectView_getMountSkin));
mwle_fnGuiObjectView_setMountSkin= (wle_fnGuiObjectView_setMountSkin)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiObjectView_setMountSkin"), typeof(wle_fnGuiObjectView_setMountSkin));
mwle_fnGuiObjectView_setSeq= (wle_fnGuiObjectView_setSeq)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiObjectView_setSeq"), typeof(wle_fnGuiObjectView_setSeq));
mwle_fnGuiObjectView_setMount= (wle_fnGuiObjectView_setMount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiObjectView_setMount"), typeof(wle_fnGuiObjectView_setMount));
mwle_fnGuiObjectView_getOrbitDistance= (wle_fnGuiObjectView_getOrbitDistance)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiObjectView_getOrbitDistance"), typeof(wle_fnGuiObjectView_getOrbitDistance));
mwle_fnGuiObjectView_setOrbitDistance= (wle_fnGuiObjectView_setOrbitDistance)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiObjectView_setOrbitDistance"), typeof(wle_fnGuiObjectView_setOrbitDistance));
mwle_fnGuiObjectView_getCameraSpeed= (wle_fnGuiObjectView_getCameraSpeed)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiObjectView_getCameraSpeed"), typeof(wle_fnGuiObjectView_getCameraSpeed));
mwle_fnGuiObjectView_setCameraSpeed= (wle_fnGuiObjectView_setCameraSpeed)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiObjectView_setCameraSpeed"), typeof(wle_fnGuiObjectView_setCameraSpeed));
mwle_fnGuiObjectView_setLightColor= (wle_fnGuiObjectView_setLightColor)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiObjectView_setLightColor"), typeof(wle_fnGuiObjectView_setLightColor));
mwle_fnGuiObjectView_setLightAmbient= (wle_fnGuiObjectView_setLightAmbient)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiObjectView_setLightAmbient"), typeof(wle_fnGuiObjectView_setLightAmbient));
mwle_fnGuiObjectView_setLightDirection= (wle_fnGuiObjectView_setLightDirection)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGuiObjectView_setLightDirection"), typeof(wle_fnGuiObjectView_setLightDirection));
mwle_fnItem_isStatic= (wle_fnItem_isStatic)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnItem_isStatic"), typeof(wle_fnItem_isStatic));
mwle_fnItem_isAtRest= (wle_fnItem_isAtRest)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnItem_isAtRest"), typeof(wle_fnItem_isAtRest));
mwle_fnItem_isRotating= (wle_fnItem_isRotating)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnItem_isRotating"), typeof(wle_fnItem_isRotating));
mwle_fnItem_setCollisionTimeout= (wle_fnItem_setCollisionTimeout)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnItem_setCollisionTimeout"), typeof(wle_fnItem_setCollisionTimeout));
mwle_fnItem_getLastStickyPos= (wle_fnItem_getLastStickyPos)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnItem_getLastStickyPos"), typeof(wle_fnItem_getLastStickyPos));
mwle_fnItem_getLastStickyNormal= (wle_fnItem_getLastStickyNormal)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnItem_getLastStickyNormal"), typeof(wle_fnItem_getLastStickyNormal));
mwle_fnLightBase_playAnimation= (wle_fnLightBase_playAnimation)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnLightBase_playAnimation"), typeof(wle_fnLightBase_playAnimation));
mwle_fnLightBase_pauseAnimation= (wle_fnLightBase_pauseAnimation)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnLightBase_pauseAnimation"), typeof(wle_fnLightBase_pauseAnimation));
mwle_fnLightBase_setLightEnabled= (wle_fnLightBase_setLightEnabled)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnLightBase_setLightEnabled"), typeof(wle_fnLightBase_setLightEnabled));
mwle_fnLightDescription_apply= (wle_fnLightDescription_apply)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnLightDescription_apply"), typeof(wle_fnLightDescription_apply));
mwle_fnLightFlareData_apply= (wle_fnLightFlareData_apply)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnLightFlareData_apply"), typeof(wle_fnLightFlareData_apply));
mwle_fn_getMissionAreaServerObject= (wle_fn_getMissionAreaServerObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_getMissionAreaServerObject"), typeof(wle_fn_getMissionAreaServerObject));
mwle_fnMissionArea_getArea= (wle_fnMissionArea_getArea)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMissionArea_getArea"), typeof(wle_fnMissionArea_getArea));
mwle_fnMissionArea_setArea= (wle_fnMissionArea_setArea)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMissionArea_setArea"), typeof(wle_fnMissionArea_setArea));
mwle_fnMissionArea_postApply= (wle_fnMissionArea_postApply)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMissionArea_postApply"), typeof(wle_fnMissionArea_postApply));
mwle_fnSpawnSphere_spawnObject= (wle_fnSpawnSphere_spawnObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSpawnSphere_spawnObject"), typeof(wle_fnSpawnSphere_spawnObject));
mwle_fnPathCamera_setPosition= (wle_fnPathCamera_setPosition)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPathCamera_setPosition"), typeof(wle_fnPathCamera_setPosition));
mwle_fnPathCamera_setTarget= (wle_fnPathCamera_setTarget)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPathCamera_setTarget"), typeof(wle_fnPathCamera_setTarget));
mwle_fnPathCamera_setState= (wle_fnPathCamera_setState)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPathCamera_setState"), typeof(wle_fnPathCamera_setState));
mwle_fnPathCamera_reset= (wle_fnPathCamera_reset)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPathCamera_reset"), typeof(wle_fnPathCamera_reset));
mwle_fnPathCamera_pushBack= (wle_fnPathCamera_pushBack)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPathCamera_pushBack"), typeof(wle_fnPathCamera_pushBack));
mwle_fnPathCamera_pushFront= (wle_fnPathCamera_pushFront)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPathCamera_pushFront"), typeof(wle_fnPathCamera_pushFront));
mwle_fnPathCamera_popFront= (wle_fnPathCamera_popFront)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPathCamera_popFront"), typeof(wle_fnPathCamera_popFront));
mwle_fnPhysicalZone_activate= (wle_fnPhysicalZone_activate)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPhysicalZone_activate"), typeof(wle_fnPhysicalZone_activate));
mwle_fnPhysicalZone_deactivate= (wle_fnPhysicalZone_deactivate)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPhysicalZone_deactivate"), typeof(wle_fnPhysicalZone_deactivate));
mwle_fnPlayer_getPose= (wle_fnPlayer_getPose)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPlayer_getPose"), typeof(wle_fnPlayer_getPose));
mwle_fnPlayer_allowAllPoses= (wle_fnPlayer_allowAllPoses)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPlayer_allowAllPoses"), typeof(wle_fnPlayer_allowAllPoses));
mwle_fnPlayer_allowJumping= (wle_fnPlayer_allowJumping)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPlayer_allowJumping"), typeof(wle_fnPlayer_allowJumping));
mwle_fnPlayer_allowJetJumping= (wle_fnPlayer_allowJetJumping)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPlayer_allowJetJumping"), typeof(wle_fnPlayer_allowJetJumping));
mwle_fnPlayer_allowSprinting= (wle_fnPlayer_allowSprinting)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPlayer_allowSprinting"), typeof(wle_fnPlayer_allowSprinting));
mwle_fnPlayer_allowCrouching= (wle_fnPlayer_allowCrouching)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPlayer_allowCrouching"), typeof(wle_fnPlayer_allowCrouching));
mwle_fnPlayer_allowProne= (wle_fnPlayer_allowProne)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPlayer_allowProne"), typeof(wle_fnPlayer_allowProne));
mwle_fnPlayer_allowSwimming= (wle_fnPlayer_allowSwimming)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPlayer_allowSwimming"), typeof(wle_fnPlayer_allowSwimming));
mwle_fnPlayer_getState= (wle_fnPlayer_getState)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPlayer_getState"), typeof(wle_fnPlayer_getState));
mwle_fnPlayer_getDamageLocation= (wle_fnPlayer_getDamageLocation)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPlayer_getDamageLocation"), typeof(wle_fnPlayer_getDamageLocation));
mwle_fnPlayer_setArmThread= (wle_fnPlayer_setArmThread)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPlayer_setArmThread"), typeof(wle_fnPlayer_setArmThread));
mwle_fnPlayer_setActionThread= (wle_fnPlayer_setActionThread)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPlayer_setActionThread"), typeof(wle_fnPlayer_setActionThread));
mwle_fnPlayer_setControlObject= (wle_fnPlayer_setControlObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPlayer_setControlObject"), typeof(wle_fnPlayer_setControlObject));
mwle_fnPlayer_getControlObject= (wle_fnPlayer_getControlObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPlayer_getControlObject"), typeof(wle_fnPlayer_getControlObject));
mwle_fnPlayer_clearControlObject= (wle_fnPlayer_clearControlObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPlayer_clearControlObject"), typeof(wle_fnPlayer_clearControlObject));
mwle_fnPlayer_checkDismountPoint= (wle_fnPlayer_checkDismountPoint)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPlayer_checkDismountPoint"), typeof(wle_fnPlayer_checkDismountPoint));
mwle_fnPlayer_getNumDeathAnimations= (wle_fnPlayer_getNumDeathAnimations)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPlayer_getNumDeathAnimations"), typeof(wle_fnPlayer_getNumDeathAnimations));
mwle_fnPortal_isInteriorPortal= (wle_fnPortal_isInteriorPortal)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPortal_isInteriorPortal"), typeof(wle_fnPortal_isInteriorPortal));
mwle_fnPortal_isExteriorPortal= (wle_fnPortal_isExteriorPortal)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPortal_isExteriorPortal"), typeof(wle_fnPortal_isExteriorPortal));
mwle_fnProjectile_presimulate= (wle_fnProjectile_presimulate)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnProjectile_presimulate"), typeof(wle_fnProjectile_presimulate));
mwle_fnProximityMine_explode= (wle_fnProximityMine_explode)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnProximityMine_explode"), typeof(wle_fnProximityMine_explode));
mwle_fnShapeBaseData_checkDeployPos= (wle_fnShapeBaseData_checkDeployPos)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBaseData_checkDeployPos"), typeof(wle_fnShapeBaseData_checkDeployPos));
mwle_fnShapeBaseData_getDeployTransform= (wle_fnShapeBaseData_getDeployTransform)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBaseData_getDeployTransform"), typeof(wle_fnShapeBaseData_getDeployTransform));
mwle_fnShapeBase_setHidden= (wle_fnShapeBase_setHidden)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setHidden"), typeof(wle_fnShapeBase_setHidden));
mwle_fnShapeBase_isHidden= (wle_fnShapeBase_isHidden)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_isHidden"), typeof(wle_fnShapeBase_isHidden));
mwle_fnShapeBase_playAudio= (wle_fnShapeBase_playAudio)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_playAudio"), typeof(wle_fnShapeBase_playAudio));
mwle_fnShapeBase_stopAudio= (wle_fnShapeBase_stopAudio)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_stopAudio"), typeof(wle_fnShapeBase_stopAudio));
mwle_fnShapeBase_playThread= (wle_fnShapeBase_playThread)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_playThread"), typeof(wle_fnShapeBase_playThread));
mwle_fnShapeBase_setThreadDir= (wle_fnShapeBase_setThreadDir)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setThreadDir"), typeof(wle_fnShapeBase_setThreadDir));
mwle_fnShapeBase_setThreadTimeScale= (wle_fnShapeBase_setThreadTimeScale)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setThreadTimeScale"), typeof(wle_fnShapeBase_setThreadTimeScale));
mwle_fnShapeBase_setThreadPosition= (wle_fnShapeBase_setThreadPosition)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setThreadPosition"), typeof(wle_fnShapeBase_setThreadPosition));
mwle_fnShapeBase_stopThread= (wle_fnShapeBase_stopThread)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_stopThread"), typeof(wle_fnShapeBase_stopThread));
mwle_fnShapeBase_destroyThread= (wle_fnShapeBase_destroyThread)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_destroyThread"), typeof(wle_fnShapeBase_destroyThread));
mwle_fnShapeBase_pauseThread= (wle_fnShapeBase_pauseThread)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_pauseThread"), typeof(wle_fnShapeBase_pauseThread));
mwle_fnShapeBase_mountImage= (wle_fnShapeBase_mountImage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_mountImage"), typeof(wle_fnShapeBase_mountImage));
mwle_fnShapeBase_unmountImage= (wle_fnShapeBase_unmountImage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_unmountImage"), typeof(wle_fnShapeBase_unmountImage));
mwle_fnShapeBase_getMountedImage= (wle_fnShapeBase_getMountedImage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getMountedImage"), typeof(wle_fnShapeBase_getMountedImage));
mwle_fnShapeBase_getPendingImage= (wle_fnShapeBase_getPendingImage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getPendingImage"), typeof(wle_fnShapeBase_getPendingImage));
mwle_fnShapeBase_isImageFiring= (wle_fnShapeBase_isImageFiring)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_isImageFiring"), typeof(wle_fnShapeBase_isImageFiring));
mwle_fnShapeBase_isImageMounted= (wle_fnShapeBase_isImageMounted)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_isImageMounted"), typeof(wle_fnShapeBase_isImageMounted));
mwle_fnShapeBase_getMountSlot= (wle_fnShapeBase_getMountSlot)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getMountSlot"), typeof(wle_fnShapeBase_getMountSlot));
mwle_fnShapeBase_getImageSkinTag= (wle_fnShapeBase_getImageSkinTag)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getImageSkinTag"), typeof(wle_fnShapeBase_getImageSkinTag));
mwle_fnShapeBase_getImageState= (wle_fnShapeBase_getImageState)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getImageState"), typeof(wle_fnShapeBase_getImageState));
mwle_fnShapeBase_hasImageState= (wle_fnShapeBase_hasImageState)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_hasImageState"), typeof(wle_fnShapeBase_hasImageState));
mwle_fnShapeBase_getImageTrigger= (wle_fnShapeBase_getImageTrigger)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getImageTrigger"), typeof(wle_fnShapeBase_getImageTrigger));
mwle_fnShapeBase_setImageTrigger= (wle_fnShapeBase_setImageTrigger)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setImageTrigger"), typeof(wle_fnShapeBase_setImageTrigger));
mwle_fnShapeBase_getImageGenericTrigger= (wle_fnShapeBase_getImageGenericTrigger)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getImageGenericTrigger"), typeof(wle_fnShapeBase_getImageGenericTrigger));
mwle_fnShapeBase_setImageGenericTrigger= (wle_fnShapeBase_setImageGenericTrigger)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setImageGenericTrigger"), typeof(wle_fnShapeBase_setImageGenericTrigger));
mwle_fnShapeBase_getImageAltTrigger= (wle_fnShapeBase_getImageAltTrigger)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getImageAltTrigger"), typeof(wle_fnShapeBase_getImageAltTrigger));
mwle_fnShapeBase_setImageAltTrigger= (wle_fnShapeBase_setImageAltTrigger)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setImageAltTrigger"), typeof(wle_fnShapeBase_setImageAltTrigger));
mwle_fnShapeBase_getImageAmmo= (wle_fnShapeBase_getImageAmmo)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getImageAmmo"), typeof(wle_fnShapeBase_getImageAmmo));
mwle_fnShapeBase_setImageAmmo= (wle_fnShapeBase_setImageAmmo)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setImageAmmo"), typeof(wle_fnShapeBase_setImageAmmo));
mwle_fnShapeBase_getImageLoaded= (wle_fnShapeBase_getImageLoaded)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getImageLoaded"), typeof(wle_fnShapeBase_getImageLoaded));
mwle_fnShapeBase_setImageLoaded= (wle_fnShapeBase_setImageLoaded)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setImageLoaded"), typeof(wle_fnShapeBase_setImageLoaded));
mwle_fnShapeBase_getImageTarget= (wle_fnShapeBase_getImageTarget)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getImageTarget"), typeof(wle_fnShapeBase_getImageTarget));
mwle_fnShapeBase_setImageTarget= (wle_fnShapeBase_setImageTarget)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setImageTarget"), typeof(wle_fnShapeBase_setImageTarget));
mwle_fnShapeBase_getImageScriptAnimPrefix= (wle_fnShapeBase_getImageScriptAnimPrefix)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getImageScriptAnimPrefix"), typeof(wle_fnShapeBase_getImageScriptAnimPrefix));
mwle_fnShapeBase_setImageScriptAnimPrefix= (wle_fnShapeBase_setImageScriptAnimPrefix)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setImageScriptAnimPrefix"), typeof(wle_fnShapeBase_setImageScriptAnimPrefix));
mwle_fnShapeBase_getMuzzleVector= (wle_fnShapeBase_getMuzzleVector)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getMuzzleVector"), typeof(wle_fnShapeBase_getMuzzleVector));
mwle_fnShapeBase_getMuzzlePoint= (wle_fnShapeBase_getMuzzlePoint)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getMuzzlePoint"), typeof(wle_fnShapeBase_getMuzzlePoint));
mwle_fnShapeBase_getSlotTransform= (wle_fnShapeBase_getSlotTransform)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getSlotTransform"), typeof(wle_fnShapeBase_getSlotTransform));
mwle_fnShapeBase_getAIRepairPoint= (wle_fnShapeBase_getAIRepairPoint)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getAIRepairPoint"), typeof(wle_fnShapeBase_getAIRepairPoint));
mwle_fnShapeBase_getVelocity= (wle_fnShapeBase_getVelocity)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getVelocity"), typeof(wle_fnShapeBase_getVelocity));
mwle_fnShapeBase_setVelocity= (wle_fnShapeBase_setVelocity)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setVelocity"), typeof(wle_fnShapeBase_setVelocity));
mwle_fnShapeBase_applyImpulse= (wle_fnShapeBase_applyImpulse)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_applyImpulse"), typeof(wle_fnShapeBase_applyImpulse));
mwle_fnShapeBase_getEyeVector= (wle_fnShapeBase_getEyeVector)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getEyeVector"), typeof(wle_fnShapeBase_getEyeVector));
mwle_fnShapeBase_getEyePoint= (wle_fnShapeBase_getEyePoint)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getEyePoint"), typeof(wle_fnShapeBase_getEyePoint));
mwle_fnShapeBase_getEyeTransform= (wle_fnShapeBase_getEyeTransform)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getEyeTransform"), typeof(wle_fnShapeBase_getEyeTransform));
mwle_fnShapeBase_getLookAtPoint= (wle_fnShapeBase_getLookAtPoint)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getLookAtPoint"), typeof(wle_fnShapeBase_getLookAtPoint));
mwle_fnShapeBase_setEnergyLevel= (wle_fnShapeBase_setEnergyLevel)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setEnergyLevel"), typeof(wle_fnShapeBase_setEnergyLevel));
mwle_fnShapeBase_getEnergyLevel= (wle_fnShapeBase_getEnergyLevel)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getEnergyLevel"), typeof(wle_fnShapeBase_getEnergyLevel));
mwle_fnShapeBase_getEnergyPercent= (wle_fnShapeBase_getEnergyPercent)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getEnergyPercent"), typeof(wle_fnShapeBase_getEnergyPercent));
mwle_fnShapeBase_setDamageLevel= (wle_fnShapeBase_setDamageLevel)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setDamageLevel"), typeof(wle_fnShapeBase_setDamageLevel));
mwle_fnShapeBase_getDamageLevel= (wle_fnShapeBase_getDamageLevel)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getDamageLevel"), typeof(wle_fnShapeBase_getDamageLevel));
mwle_fnShapeBase_getDamagePercent= (wle_fnShapeBase_getDamagePercent)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getDamagePercent"), typeof(wle_fnShapeBase_getDamagePercent));
mwle_fnShapeBase_getMaxDamage= (wle_fnShapeBase_getMaxDamage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getMaxDamage"), typeof(wle_fnShapeBase_getMaxDamage));
mwle_fnShapeBase_setDamageState= (wle_fnShapeBase_setDamageState)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setDamageState"), typeof(wle_fnShapeBase_setDamageState));
mwle_fnShapeBase_getDamageState= (wle_fnShapeBase_getDamageState)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getDamageState"), typeof(wle_fnShapeBase_getDamageState));
mwle_fnShapeBase_isDestroyed= (wle_fnShapeBase_isDestroyed)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_isDestroyed"), typeof(wle_fnShapeBase_isDestroyed));
mwle_fnShapeBase_isDisabled= (wle_fnShapeBase_isDisabled)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_isDisabled"), typeof(wle_fnShapeBase_isDisabled));
mwle_fnShapeBase_isEnabled= (wle_fnShapeBase_isEnabled)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_isEnabled"), typeof(wle_fnShapeBase_isEnabled));
mwle_fnShapeBase_applyDamage= (wle_fnShapeBase_applyDamage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_applyDamage"), typeof(wle_fnShapeBase_applyDamage));
mwle_fnShapeBase_applyRepair= (wle_fnShapeBase_applyRepair)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_applyRepair"), typeof(wle_fnShapeBase_applyRepair));
mwle_fnShapeBase_setRepairRate= (wle_fnShapeBase_setRepairRate)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setRepairRate"), typeof(wle_fnShapeBase_setRepairRate));
mwle_fnShapeBase_getRepairRate= (wle_fnShapeBase_getRepairRate)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getRepairRate"), typeof(wle_fnShapeBase_getRepairRate));
mwle_fnShapeBase_setRechargeRate= (wle_fnShapeBase_setRechargeRate)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setRechargeRate"), typeof(wle_fnShapeBase_setRechargeRate));
mwle_fnShapeBase_getRechargeRate= (wle_fnShapeBase_getRechargeRate)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getRechargeRate"), typeof(wle_fnShapeBase_getRechargeRate));
mwle_fnShapeBase_getControllingClient= (wle_fnShapeBase_getControllingClient)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getControllingClient"), typeof(wle_fnShapeBase_getControllingClient));
mwle_fnShapeBase_getControllingObject= (wle_fnShapeBase_getControllingObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getControllingObject"), typeof(wle_fnShapeBase_getControllingObject));
mwle_fnShapeBase_canCloak= (wle_fnShapeBase_canCloak)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_canCloak"), typeof(wle_fnShapeBase_canCloak));
mwle_fnShapeBase_setCloaked= (wle_fnShapeBase_setCloaked)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setCloaked"), typeof(wle_fnShapeBase_setCloaked));
mwle_fnShapeBase_isCloaked= (wle_fnShapeBase_isCloaked)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_isCloaked"), typeof(wle_fnShapeBase_isCloaked));
mwle_fnShapeBase_setDamageFlash= (wle_fnShapeBase_setDamageFlash)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setDamageFlash"), typeof(wle_fnShapeBase_setDamageFlash));
mwle_fnShapeBase_getDamageFlash= (wle_fnShapeBase_getDamageFlash)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getDamageFlash"), typeof(wle_fnShapeBase_getDamageFlash));
mwle_fnShapeBase_setWhiteOut= (wle_fnShapeBase_setWhiteOut)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setWhiteOut"), typeof(wle_fnShapeBase_setWhiteOut));
mwle_fnShapeBase_getWhiteOut= (wle_fnShapeBase_getWhiteOut)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getWhiteOut"), typeof(wle_fnShapeBase_getWhiteOut));
mwle_fnShapeBase_getDefaultCameraFov= (wle_fnShapeBase_getDefaultCameraFov)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getDefaultCameraFov"), typeof(wle_fnShapeBase_getDefaultCameraFov));
mwle_fnShapeBase_getCameraFov= (wle_fnShapeBase_getCameraFov)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getCameraFov"), typeof(wle_fnShapeBase_getCameraFov));
mwle_fnShapeBase_setCameraFov= (wle_fnShapeBase_setCameraFov)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setCameraFov"), typeof(wle_fnShapeBase_setCameraFov));
mwle_fnShapeBase_setInvincibleMode= (wle_fnShapeBase_setInvincibleMode)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setInvincibleMode"), typeof(wle_fnShapeBase_setInvincibleMode));
mwle_fnShapeBase_startFade= (wle_fnShapeBase_startFade)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_startFade"), typeof(wle_fnShapeBase_startFade));
mwle_fnShapeBase_setDamageVector= (wle_fnShapeBase_setDamageVector)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setDamageVector"), typeof(wle_fnShapeBase_setDamageVector));
mwle_fnShapeBase_setShapeName= (wle_fnShapeBase_setShapeName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setShapeName"), typeof(wle_fnShapeBase_setShapeName));
mwle_fnShapeBase_getShapeName= (wle_fnShapeBase_getShapeName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getShapeName"), typeof(wle_fnShapeBase_getShapeName));
mwle_fnShapeBase_setSkinName= (wle_fnShapeBase_setSkinName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setSkinName"), typeof(wle_fnShapeBase_setSkinName));
mwle_fnShapeBase_getSkinName= (wle_fnShapeBase_getSkinName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getSkinName"), typeof(wle_fnShapeBase_getSkinName));
mwle_fnShapeBase_getVisibleDistance= (wle_fnShapeBase_getVisibleDistance)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getVisibleDistance"), typeof(wle_fnShapeBase_getVisibleDistance));
mwle_fnShapeBase_setVisibleDistance= (wle_fnShapeBase_setVisibleDistance)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setVisibleDistance"), typeof(wle_fnShapeBase_setVisibleDistance));
mwle_fnShapeBase_setAllMeshesHidden= (wle_fnShapeBase_setAllMeshesHidden)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setAllMeshesHidden"), typeof(wle_fnShapeBase_setAllMeshesHidden));
mwle_fnShapeBase_setMeshHidden= (wle_fnShapeBase_setMeshHidden)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_setMeshHidden"), typeof(wle_fnShapeBase_setMeshHidden));
mwle_fnShapeBase_dumpMeshVisibility= (wle_fnShapeBase_dumpMeshVisibility)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_dumpMeshVisibility"), typeof(wle_fnShapeBase_dumpMeshVisibility));
mwle_fnShapeBase_getTargetName= (wle_fnShapeBase_getTargetName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getTargetName"), typeof(wle_fnShapeBase_getTargetName));
mwle_fnShapeBase_getTargetCount= (wle_fnShapeBase_getTargetCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getTargetCount"), typeof(wle_fnShapeBase_getTargetCount));
mwle_fnShapeBase_changeMaterial= (wle_fnShapeBase_changeMaterial)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_changeMaterial"), typeof(wle_fnShapeBase_changeMaterial));
mwle_fnShapeBase_getModelFile= (wle_fnShapeBase_getModelFile)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnShapeBase_getModelFile"), typeof(wle_fnShapeBase_getModelFile));
mwle_fnStaticShape_setPoweredState= (wle_fnStaticShape_setPoweredState)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnStaticShape_setPoweredState"), typeof(wle_fnStaticShape_setPoweredState));
mwle_fnStaticShape_getPoweredState= (wle_fnStaticShape_getPoweredState)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnStaticShape_getPoweredState"), typeof(wle_fnStaticShape_getPoweredState));
mwle_fnTrigger_getNumObjects= (wle_fnTrigger_getNumObjects)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnTrigger_getNumObjects"), typeof(wle_fnTrigger_getNumObjects));
mwle_fnTrigger_getObject= (wle_fnTrigger_getObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnTrigger_getObject"), typeof(wle_fnTrigger_getObject));
mwle_fnTSStatic_getTargetName= (wle_fnTSStatic_getTargetName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnTSStatic_getTargetName"), typeof(wle_fnTSStatic_getTargetName));
mwle_fnTSStatic_getTargetCount= (wle_fnTSStatic_getTargetCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnTSStatic_getTargetCount"), typeof(wle_fnTSStatic_getTargetCount));
mwle_fnTSStatic_changeMaterial= (wle_fnTSStatic_changeMaterial)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnTSStatic_changeMaterial"), typeof(wle_fnTSStatic_changeMaterial));
mwle_fnTSStatic_getModelFile= (wle_fnTSStatic_getModelFile)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnTSStatic_getModelFile"), typeof(wle_fnTSStatic_getModelFile));
mwle_fnZone_getZoneId= (wle_fnZone_getZoneId)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnZone_getZoneId"), typeof(wle_fnZone_getZoneId));
mwle_fnZone_dumpZoneState= (wle_fnZone_dumpZoneState)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnZone_dumpZoneState"), typeof(wle_fnZone_dumpZoneState));
mwle_fnRenderMeshExample_postApply= (wle_fnRenderMeshExample_postApply)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnRenderMeshExample_postApply"), typeof(wle_fnRenderMeshExample_postApply));
mwle_fn_calcExplosionCoverage= (wle_fn_calcExplosionCoverage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_calcExplosionCoverage"), typeof(wle_fn_calcExplosionCoverage));
mwle_fn_StartFoliageReplication= (wle_fn_StartFoliageReplication)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_StartFoliageReplication"), typeof(wle_fn_StartFoliageReplication));
mwle_fn_StartClientReplication= (wle_fn_StartClientReplication)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_StartClientReplication"), typeof(wle_fn_StartClientReplication));
mwle_fnLightning_warningFlashes= (wle_fnLightning_warningFlashes)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnLightning_warningFlashes"), typeof(wle_fnLightning_warningFlashes));
mwle_fnLightning_strikeRandomPoint= (wle_fnLightning_strikeRandomPoint)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnLightning_strikeRandomPoint"), typeof(wle_fnLightning_strikeRandomPoint));
mwle_fnLightning_strikeObject= (wle_fnLightning_strikeObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnLightning_strikeObject"), typeof(wle_fnLightning_strikeObject));
mwle_fnParticleData_reload= (wle_fnParticleData_reload)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnParticleData_reload"), typeof(wle_fnParticleData_reload));
mwle_fnParticleEmitterData_reload= (wle_fnParticleEmitterData_reload)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnParticleEmitterData_reload"), typeof(wle_fnParticleEmitterData_reload));
mwle_fnParticleEmitterNode_setEmitterDataBlock= (wle_fnParticleEmitterNode_setEmitterDataBlock)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnParticleEmitterNode_setEmitterDataBlock"), typeof(wle_fnParticleEmitterNode_setEmitterDataBlock));
mwle_fnParticleEmitterNode_setActive= (wle_fnParticleEmitterNode_setActive)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnParticleEmitterNode_setActive"), typeof(wle_fnParticleEmitterNode_setActive));
mwle_fnPrecipitation_setPercentage= (wle_fnPrecipitation_setPercentage)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPrecipitation_setPercentage"), typeof(wle_fnPrecipitation_setPercentage));
mwle_fnPrecipitation_modifyStorm= (wle_fnPrecipitation_modifyStorm)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPrecipitation_modifyStorm"), typeof(wle_fnPrecipitation_modifyStorm));
mwle_fnPrecipitation_setTurbulence= (wle_fnPrecipitation_setTurbulence)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPrecipitation_setTurbulence"), typeof(wle_fnPrecipitation_setTurbulence));
mwle_fnGameBase_getDataBlock= (wle_fnGameBase_getDataBlock)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameBase_getDataBlock"), typeof(wle_fnGameBase_getDataBlock));
mwle_fnGameBase_setDataBlock= (wle_fnGameBase_setDataBlock)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameBase_setDataBlock"), typeof(wle_fnGameBase_setDataBlock));
mwle_fnGameBase_applyImpulse= (wle_fnGameBase_applyImpulse)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameBase_applyImpulse"), typeof(wle_fnGameBase_applyImpulse));
mwle_fnGameBase_applyRadialImpulse= (wle_fnGameBase_applyRadialImpulse)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameBase_applyRadialImpulse"), typeof(wle_fnGameBase_applyRadialImpulse));
mwle_fnGameConnection_setConnectArgs= (wle_fnGameConnection_setConnectArgs)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_setConnectArgs"), typeof(wle_fnGameConnection_setConnectArgs));
mwle_fnGameConnection_setJoinPassword= (wle_fnGameConnection_setJoinPassword)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_setJoinPassword"), typeof(wle_fnGameConnection_setJoinPassword));
mwle_fnGameConnection_transmitDataBlocks= (wle_fnGameConnection_transmitDataBlocks)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_transmitDataBlocks"), typeof(wle_fnGameConnection_transmitDataBlocks));
mwle_fnGameConnection_activateGhosting= (wle_fnGameConnection_activateGhosting)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_activateGhosting"), typeof(wle_fnGameConnection_activateGhosting));
mwle_fnGameConnection_resetGhosting= (wle_fnGameConnection_resetGhosting)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_resetGhosting"), typeof(wle_fnGameConnection_resetGhosting));
mwle_fnGameConnection_setControlObject= (wle_fnGameConnection_setControlObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_setControlObject"), typeof(wle_fnGameConnection_setControlObject));
mwle_fnGameConnection_getControlObject= (wle_fnGameConnection_getControlObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_getControlObject"), typeof(wle_fnGameConnection_getControlObject));
mwle_fnGameConnection_isAIControlled= (wle_fnGameConnection_isAIControlled)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_isAIControlled"), typeof(wle_fnGameConnection_isAIControlled));
mwle_fnGameConnection_isControlObjectRotDampedCamera= (wle_fnGameConnection_isControlObjectRotDampedCamera)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_isControlObjectRotDampedCamera"), typeof(wle_fnGameConnection_isControlObjectRotDampedCamera));
mwle_fnGameConnection_play2D= (wle_fnGameConnection_play2D)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_play2D"), typeof(wle_fnGameConnection_play2D));
mwle_fnGameConnection_play3D= (wle_fnGameConnection_play3D)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_play3D"), typeof(wle_fnGameConnection_play3D));
mwle_fnGameConnection_chaseCam= (wle_fnGameConnection_chaseCam)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_chaseCam"), typeof(wle_fnGameConnection_chaseCam));
mwle_fnGameConnection_getControlCameraDefaultFov= (wle_fnGameConnection_getControlCameraDefaultFov)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_getControlCameraDefaultFov"), typeof(wle_fnGameConnection_getControlCameraDefaultFov));
mwle_fnGameConnection_setControlCameraFov= (wle_fnGameConnection_setControlCameraFov)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_setControlCameraFov"), typeof(wle_fnGameConnection_setControlCameraFov));
mwle_fnGameConnection_getControlCameraFov= (wle_fnGameConnection_getControlCameraFov)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_getControlCameraFov"), typeof(wle_fnGameConnection_getControlCameraFov));
mwle_fnGameConnection_getDamageFlash= (wle_fnGameConnection_getDamageFlash)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_getDamageFlash"), typeof(wle_fnGameConnection_getDamageFlash));
mwle_fnGameConnection_getWhiteOut= (wle_fnGameConnection_getWhiteOut)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_getWhiteOut"), typeof(wle_fnGameConnection_getWhiteOut));
mwle_fnGameConnection_setBlackOut= (wle_fnGameConnection_setBlackOut)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_setBlackOut"), typeof(wle_fnGameConnection_setBlackOut));
mwle_fnGameConnection_setMissionCRC= (wle_fnGameConnection_setMissionCRC)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_setMissionCRC"), typeof(wle_fnGameConnection_setMissionCRC));
mwle_fnGameConnection_delete= (wle_fnGameConnection_delete)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_delete"), typeof(wle_fnGameConnection_delete));
mwle_fnGameConnection_startRecording= (wle_fnGameConnection_startRecording)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_startRecording"), typeof(wle_fnGameConnection_startRecording));
mwle_fnGameConnection_stopRecording= (wle_fnGameConnection_stopRecording)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_stopRecording"), typeof(wle_fnGameConnection_stopRecording));
mwle_fnGameConnection_playDemo= (wle_fnGameConnection_playDemo)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_playDemo"), typeof(wle_fnGameConnection_playDemo));
mwle_fnGameConnection_isDemoPlaying= (wle_fnGameConnection_isDemoPlaying)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_isDemoPlaying"), typeof(wle_fnGameConnection_isDemoPlaying));
mwle_fnGameConnection_isDemoRecording= (wle_fnGameConnection_isDemoRecording)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_isDemoRecording"), typeof(wle_fnGameConnection_isDemoRecording));
mwle_fnGameConnection_listClassIDs= (wle_fnGameConnection_listClassIDs)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_listClassIDs"), typeof(wle_fnGameConnection_listClassIDs));
mwle_fnGameConnection_setCameraObject= (wle_fnGameConnection_setCameraObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_setCameraObject"), typeof(wle_fnGameConnection_setCameraObject));
mwle_fnGameConnection_getCameraObject= (wle_fnGameConnection_getCameraObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_getCameraObject"), typeof(wle_fnGameConnection_getCameraObject));
mwle_fnGameConnection_clearCameraObject= (wle_fnGameConnection_clearCameraObject)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_clearCameraObject"), typeof(wle_fnGameConnection_clearCameraObject));
mwle_fnGameConnection_isFirstPerson= (wle_fnGameConnection_isFirstPerson)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_isFirstPerson"), typeof(wle_fnGameConnection_isFirstPerson));
mwle_fnGameConnection_setFirstPerson= (wle_fnGameConnection_setFirstPerson)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnGameConnection_setFirstPerson"), typeof(wle_fnGameConnection_setFirstPerson));
mwle_fn__dumpProcessList= (wle_fn__dumpProcessList)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__dumpProcessList"), typeof(wle_fn__dumpProcessList));
mwle_fnPhysicsDebrisData_preload= (wle_fnPhysicsDebrisData_preload)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPhysicsDebrisData_preload"), typeof(wle_fnPhysicsDebrisData_preload));
mwle_fnPhysicsForce_attach= (wle_fnPhysicsForce_attach)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPhysicsForce_attach"), typeof(wle_fnPhysicsForce_attach));
mwle_fnPhysicsForce_detach= (wle_fnPhysicsForce_detach)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPhysicsForce_detach"), typeof(wle_fnPhysicsForce_detach));
mwle_fnPhysicsForce_isAttached= (wle_fnPhysicsForce_isAttached)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPhysicsForce_isAttached"), typeof(wle_fnPhysicsForce_isAttached));
mwle_fn__physicsStartSimulation= (wle_fn__physicsStartSimulation)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__physicsStartSimulation"), typeof(wle_fn__physicsStartSimulation));
mwle_fn__physicsStopSimulation= (wle_fn__physicsStopSimulation)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__physicsStopSimulation"), typeof(wle_fn__physicsStopSimulation));
mwle_fn__physicsSimulationEnabled= (wle_fn__physicsSimulationEnabled)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__physicsSimulationEnabled"), typeof(wle_fn__physicsSimulationEnabled));
mwle_fn__physicsGetTimeScale= (wle_fn__physicsGetTimeScale)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__physicsGetTimeScale"), typeof(wle_fn__physicsGetTimeScale));
mwle_fn__physicsStoreState= (wle_fn__physicsStoreState)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__physicsStoreState"), typeof(wle_fn__physicsStoreState));
mwle_fnPhysicsShape_isDestroyed= (wle_fnPhysicsShape_isDestroyed)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPhysicsShape_isDestroyed"), typeof(wle_fnPhysicsShape_isDestroyed));
mwle_fnPhysicsShape_destroy= (wle_fnPhysicsShape_destroy)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPhysicsShape_destroy"), typeof(wle_fnPhysicsShape_destroy));
mwle_fnPhysicsShape_restore= (wle_fnPhysicsShape_restore)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnPhysicsShape_restore"), typeof(wle_fnPhysicsShape_restore));
mwle_fnAITurretShape_addToIgnoreList= (wle_fnAITurretShape_addToIgnoreList)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAITurretShape_addToIgnoreList"), typeof(wle_fnAITurretShape_addToIgnoreList));
mwle_fnAITurretShape_removeFromIgnoreList= (wle_fnAITurretShape_removeFromIgnoreList)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAITurretShape_removeFromIgnoreList"), typeof(wle_fnAITurretShape_removeFromIgnoreList));
mwle_fnAITurretShape_setTurretState= (wle_fnAITurretShape_setTurretState)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAITurretShape_setTurretState"), typeof(wle_fnAITurretShape_setTurretState));
mwle_fnAITurretShape_activateTurret= (wle_fnAITurretShape_activateTurret)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAITurretShape_activateTurret"), typeof(wle_fnAITurretShape_activateTurret));
mwle_fnAITurretShape_deactivateTurret= (wle_fnAITurretShape_deactivateTurret)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAITurretShape_deactivateTurret"), typeof(wle_fnAITurretShape_deactivateTurret));
mwle_fnAITurretShape_startScanForTargets= (wle_fnAITurretShape_startScanForTargets)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAITurretShape_startScanForTargets"), typeof(wle_fnAITurretShape_startScanForTargets));
mwle_fnAITurretShape_stopScanForTargets= (wle_fnAITurretShape_stopScanForTargets)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAITurretShape_stopScanForTargets"), typeof(wle_fnAITurretShape_stopScanForTargets));
mwle_fnAITurretShape_startTrackingTarget= (wle_fnAITurretShape_startTrackingTarget)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAITurretShape_startTrackingTarget"), typeof(wle_fnAITurretShape_startTrackingTarget));
mwle_fnAITurretShape_stopTrackingTarget= (wle_fnAITurretShape_stopTrackingTarget)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAITurretShape_stopTrackingTarget"), typeof(wle_fnAITurretShape_stopTrackingTarget));
mwle_fnAITurretShape_hasTarget= (wle_fnAITurretShape_hasTarget)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAITurretShape_hasTarget"), typeof(wle_fnAITurretShape_hasTarget));
mwle_fnAITurretShape_getTarget= (wle_fnAITurretShape_getTarget)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAITurretShape_getTarget"), typeof(wle_fnAITurretShape_getTarget));
mwle_fnAITurretShape_resetTarget= (wle_fnAITurretShape_resetTarget)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAITurretShape_resetTarget"), typeof(wle_fnAITurretShape_resetTarget));
mwle_fnAITurretShape_setWeaponLeadVelocity= (wle_fnAITurretShape_setWeaponLeadVelocity)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAITurretShape_setWeaponLeadVelocity"), typeof(wle_fnAITurretShape_setWeaponLeadVelocity));
mwle_fnAITurretShape_getWeaponLeadVelocity= (wle_fnAITurretShape_getWeaponLeadVelocity)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAITurretShape_getWeaponLeadVelocity"), typeof(wle_fnAITurretShape_getWeaponLeadVelocity));
mwle_fnAITurretShape_setAllGunsFiring= (wle_fnAITurretShape_setAllGunsFiring)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAITurretShape_setAllGunsFiring"), typeof(wle_fnAITurretShape_setAllGunsFiring));
mwle_fnAITurretShape_setGunSlotFiring= (wle_fnAITurretShape_setGunSlotFiring)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAITurretShape_setGunSlotFiring"), typeof(wle_fnAITurretShape_setGunSlotFiring));
mwle_fnAITurretShape_recenterTurret= (wle_fnAITurretShape_recenterTurret)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnAITurretShape_recenterTurret"), typeof(wle_fnAITurretShape_recenterTurret));
mwle_fnTurretShape_getAllowManualRotation= (wle_fnTurretShape_getAllowManualRotation)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnTurretShape_getAllowManualRotation"), typeof(wle_fnTurretShape_getAllowManualRotation));
mwle_fnTurretShape_setAllowManualRotation= (wle_fnTurretShape_setAllowManualRotation)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnTurretShape_setAllowManualRotation"), typeof(wle_fnTurretShape_setAllowManualRotation));
mwle_fnTurretShape_getAllowManualFire= (wle_fnTurretShape_getAllowManualFire)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnTurretShape_getAllowManualFire"), typeof(wle_fnTurretShape_getAllowManualFire));
mwle_fnTurretShape_setAllowManualFire= (wle_fnTurretShape_setAllowManualFire)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnTurretShape_setAllowManualFire"), typeof(wle_fnTurretShape_setAllowManualFire));
mwle_fnTurretShape_getState= (wle_fnTurretShape_getState)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnTurretShape_getState"), typeof(wle_fnTurretShape_getState));
mwle_fnTurretShape_getTurretEulerRotation= (wle_fnTurretShape_getTurretEulerRotation)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnTurretShape_getTurretEulerRotation"), typeof(wle_fnTurretShape_getTurretEulerRotation));
mwle_fnTurretShape_setTurretEulerRotation= (wle_fnTurretShape_setTurretEulerRotation)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnTurretShape_setTurretEulerRotation"), typeof(wle_fnTurretShape_setTurretEulerRotation));
mwle_fnTurretShape_doRespawn= (wle_fnTurretShape_doRespawn)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnTurretShape_doRespawn"), typeof(wle_fnTurretShape_doRespawn));
mwle_fnFlyingVehicle_useCreateHeight= (wle_fnFlyingVehicle_useCreateHeight)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnFlyingVehicle_useCreateHeight"), typeof(wle_fnFlyingVehicle_useCreateHeight));
mwle_fnWheeledVehicle_setWheelSteering= (wle_fnWheeledVehicle_setWheelSteering)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWheeledVehicle_setWheelSteering"), typeof(wle_fnWheeledVehicle_setWheelSteering));
mwle_fnWheeledVehicle_setWheelPowered= (wle_fnWheeledVehicle_setWheelPowered)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWheeledVehicle_setWheelPowered"), typeof(wle_fnWheeledVehicle_setWheelPowered));
mwle_fnWheeledVehicle_setWheelTire= (wle_fnWheeledVehicle_setWheelTire)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWheeledVehicle_setWheelTire"), typeof(wle_fnWheeledVehicle_setWheelTire));
mwle_fnWheeledVehicle_setWheelSpring= (wle_fnWheeledVehicle_setWheelSpring)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWheeledVehicle_setWheelSpring"), typeof(wle_fnWheeledVehicle_setWheelSpring));
mwle_fnWheeledVehicle_getWheelCount= (wle_fnWheeledVehicle_getWheelCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnWheeledVehicle_getWheelCount"), typeof(wle_fnWheeledVehicle_getWheelCount));
mwle_fnTerrainBlock_save= (wle_fnTerrainBlock_save)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnTerrainBlock_save"), typeof(wle_fnTerrainBlock_save));
mwle_fn__enableSamples= (wle_fn__enableSamples)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__enableSamples"), typeof(wle_fn__enableSamples));
mwle_fnSettings_findFirstValue= (wle_fnSettings_findFirstValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSettings_findFirstValue"), typeof(wle_fnSettings_findFirstValue));
mwle_fnSettings_findNextValue= (wle_fnSettings_findNextValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSettings_findNextValue"), typeof(wle_fnSettings_findNextValue));
mwle_fnSettings_setValue= (wle_fnSettings_setValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSettings_setValue"), typeof(wle_fnSettings_setValue));
mwle_fnSettings_setDefaultValue= (wle_fnSettings_setDefaultValue)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSettings_setDefaultValue"), typeof(wle_fnSettings_setDefaultValue));
mwle_fnSettings_value= (wle_fnSettings_value)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSettings_value"), typeof(wle_fnSettings_value));
mwle_fnSettings_remove= (wle_fnSettings_remove)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSettings_remove"), typeof(wle_fnSettings_remove));
mwle_fnSettings_write= (wle_fnSettings_write)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSettings_write"), typeof(wle_fnSettings_write));
mwle_fnSettings_read= (wle_fnSettings_read)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSettings_read"), typeof(wle_fnSettings_read));
mwle_fnSettings_beginGroup= (wle_fnSettings_beginGroup)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSettings_beginGroup"), typeof(wle_fnSettings_beginGroup));
mwle_fnSettings_endGroup= (wle_fnSettings_endGroup)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSettings_endGroup"), typeof(wle_fnSettings_endGroup));
mwle_fnSettings_clearGroups= (wle_fnSettings_clearGroups)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSettings_clearGroups"), typeof(wle_fnSettings_clearGroups));
mwle_fnSettings_getCurrentGroups= (wle_fnSettings_getCurrentGroups)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnSettings_getCurrentGroups"), typeof(wle_fnSettings_getCurrentGroups));
mwle_fnCompoundUndoAction_addAction= (wle_fnCompoundUndoAction_addAction)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnCompoundUndoAction_addAction"), typeof(wle_fnCompoundUndoAction_addAction));
mwle_fnUndoManager_clearAll= (wle_fnUndoManager_clearAll)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnUndoManager_clearAll"), typeof(wle_fnUndoManager_clearAll));
mwle_fnUndoManager_getUndoCount= (wle_fnUndoManager_getUndoCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnUndoManager_getUndoCount"), typeof(wle_fnUndoManager_getUndoCount));
mwle_fnUndoManager_getUndoName= (wle_fnUndoManager_getUndoName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnUndoManager_getUndoName"), typeof(wle_fnUndoManager_getUndoName));
mwle_fnUndoManager_getUndoAction= (wle_fnUndoManager_getUndoAction)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnUndoManager_getUndoAction"), typeof(wle_fnUndoManager_getUndoAction));
mwle_fnUndoManager_getRedoCount= (wle_fnUndoManager_getRedoCount)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnUndoManager_getRedoCount"), typeof(wle_fnUndoManager_getRedoCount));
mwle_fnUndoManager_getRedoName= (wle_fnUndoManager_getRedoName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnUndoManager_getRedoName"), typeof(wle_fnUndoManager_getRedoName));
mwle_fnUndoManager_getRedoAction= (wle_fnUndoManager_getRedoAction)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnUndoManager_getRedoAction"), typeof(wle_fnUndoManager_getRedoAction));
mwle_fnUndoAction_addToManager= (wle_fnUndoAction_addToManager)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnUndoAction_addToManager"), typeof(wle_fnUndoAction_addToManager));
mwle_fnUndoAction_undo= (wle_fnUndoAction_undo)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnUndoAction_undo"), typeof(wle_fnUndoAction_undo));
mwle_fnUndoAction_redo= (wle_fnUndoAction_redo)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnUndoAction_redo"), typeof(wle_fnUndoAction_redo));
mwle_fnUndoManager_undo= (wle_fnUndoManager_undo)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnUndoManager_undo"), typeof(wle_fnUndoManager_undo));
mwle_fnUndoManager_redo= (wle_fnUndoManager_redo)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnUndoManager_redo"), typeof(wle_fnUndoManager_redo));
mwle_fnUndoManager_getNextUndoName= (wle_fnUndoManager_getNextUndoName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnUndoManager_getNextUndoName"), typeof(wle_fnUndoManager_getNextUndoName));
mwle_fnUndoManager_getNextRedoName= (wle_fnUndoManager_getNextRedoName)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnUndoManager_getNextRedoName"), typeof(wle_fnUndoManager_getNextRedoName));
mwle_fnUndoManager_pushCompound= (wle_fnUndoManager_pushCompound)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnUndoManager_pushCompound"), typeof(wle_fnUndoManager_pushCompound));
mwle_fnUndoManager_popCompound= (wle_fnUndoManager_popCompound)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnUndoManager_popCompound"), typeof(wle_fnUndoManager_popCompound));
mwle_fnEventManager_registerEvent= (wle_fnEventManager_registerEvent)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnEventManager_registerEvent"), typeof(wle_fnEventManager_registerEvent));
mwle_fnEventManager_unregisterEvent= (wle_fnEventManager_unregisterEvent)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnEventManager_unregisterEvent"), typeof(wle_fnEventManager_unregisterEvent));
mwle_fnEventManager_isRegisteredEvent= (wle_fnEventManager_isRegisteredEvent)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnEventManager_isRegisteredEvent"), typeof(wle_fnEventManager_isRegisteredEvent));
mwle_fnEventManager_postEvent= (wle_fnEventManager_postEvent)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnEventManager_postEvent"), typeof(wle_fnEventManager_postEvent));
mwle_fnEventManager_subscribe= (wle_fnEventManager_subscribe)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnEventManager_subscribe"), typeof(wle_fnEventManager_subscribe));
mwle_fnEventManager_remove= (wle_fnEventManager_remove)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnEventManager_remove"), typeof(wle_fnEventManager_remove));
mwle_fnEventManager_removeAll= (wle_fnEventManager_removeAll)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnEventManager_removeAll"), typeof(wle_fnEventManager_removeAll));
mwle_fnEventManager_dumpEvents= (wle_fnEventManager_dumpEvents)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnEventManager_dumpEvents"), typeof(wle_fnEventManager_dumpEvents));
mwle_fnEventManager_dumpSubscribers= (wle_fnEventManager_dumpSubscribers)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnEventManager_dumpSubscribers"), typeof(wle_fnEventManager_dumpSubscribers));
mwle_fnMessage_getType= (wle_fnMessage_getType)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMessage_getType"), typeof(wle_fnMessage_getType));
mwle_fnMessage_addReference= (wle_fnMessage_addReference)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMessage_addReference"), typeof(wle_fnMessage_addReference));
mwle_fnMessage_freeReference= (wle_fnMessage_freeReference)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnMessage_freeReference"), typeof(wle_fnMessage_freeReference));
mwle_fn__dnEval_Direct_New= (wle_fn__dnEval_Direct_New)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn__dnEval_Direct_New"), typeof(wle_fn__dnEval_Direct_New));
mwle_fn_dnEval= (wle_fn_dnEval)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fn_dnEval"), typeof(wle_fn_dnEval));
mwle_fnNetConnection_GetGhostIndex= (wle_fnNetConnection_GetGhostIndex)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetConnection_GetGhostIndex"), typeof(wle_fnNetConnection_GetGhostIndex));
mwle_fnNetConnection_ResolveGhost= (wle_fnNetConnection_ResolveGhost)Marshal.GetDelegateForFunctionPointer(GetProcAddress(dllname, "wle_fnNetConnection_ResolveGhost"), typeof(wle_fnNetConnection_ResolveGhost));
}
	    
        #endregion



        }

    }
